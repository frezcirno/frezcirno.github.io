<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>reading-books</title>
    <url>/2024/04/15/reading-books/</url>
    <content><![CDATA[<p><span class="exturl" data-url="aHR0cHM6Ly9kb29jcy5naXRodWIuaW8vdGVjaG5pY2FsLWJvb2tzLw==">值得一看的技术类书籍列表<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
  </entry>
  <entry>
    <title>word2vec</title>
    <url>/2023/10/28/word2vec/</url>
    <content><![CDATA[<h2 id="what’s-it"><a class="header-anchor-1" href="#what’s-it">#</a>What’s it</h2>
<p>2013 年，Google 开源的，用于词向量计算的工具</p>
<h2 id="架构"><a class="header-anchor-1" href="#架构">#</a>架构</h2>
<p>X – Dense – Dense – Softmax – Y</p>
<p>CBoW: 利用上下文预测当前词</p>
<p>Skip-gram: 利用当前词预测上下文</p>
]]></content>
      <categories>
        <category>NLP</category>
      </categories>
      <tags>
        <tag>NLP</tag>
      </tags>
  </entry>
  <entry>
    <title>动态规划算法</title>
    <url>/2021/01/09/dynamic-programming/</url>
    <content><![CDATA[<h2 id="特点"><a class="header-anchor-1" href="#特点">#</a>特点</h2>
<ul>
<li>重叠子问题</li>
<li>最优子结构</li>
<li>状态转移方程</li>
<li>状态压缩</li>
</ul>
<h2 id="思路"><a class="header-anchor-1" href="#思路">#</a>思路</h2>
<ol>
<li>找出所有的<strong>状态</strong></li>
<li>列举 dp 数组</li>
<li>找出状态转移方程</li>
</ol>
]]></content>
      <categories>
        <category>algorithm-practice</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>ELF 文件格式分析</title>
    <url>/2024/08/10/ELF-file-format/</url>
    <content><![CDATA[<h2 id="宏观结构"><a class="header-anchor-1" href="#宏观结构">#</a>宏观结构</h2>
<p><img src="ELF-file-format.png" alt="ELF-file-format" /></p>
<p>运行视图：分为若干个程序段（Segment），一个段表示一种加载类型，包括需要加载到内存的地址和属性（是否可读, 是否可写, 是否可执行）；</p>
<p>链接视图：分为若干个程序节（Section），表示不同作用的程序组成部分，用于链接，例如 .data, .rodata, .text；类似标签的作用；文件中的节区不能重叠；不允许一个字节存在于两个节区中的情况发生。</p>
<p>一般来说一个 Segment 会包含多个 Section，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Segment 1: Text Segment</span><br><span class="line">* .text</span><br><span class="line">* .rodata</span><br><span class="line">* .hash</span><br><span class="line">* .dynsym</span><br><span class="line">* .dynstr</span><br><span class="line">* .plt</span><br><span class="line">* .rel.got</span><br><span class="line"></span><br><span class="line">Segment 2: Data Segment</span><br><span class="line">* .data</span><br><span class="line">* .dynamic</span><br><span class="line">* .got</span><br><span class="line">* .bss</span><br></pre></td></tr></table></figure>
<h2 id="数据类型定义"><a class="header-anchor-1" href="#数据类型定义">#</a>数据类型定义</h2>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Type for a 16-bit quantity.  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">uint16_t</span> Elf32_Half;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">uint16_t</span> Elf64_Half;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Types for signed and unsigned 32-bit quantities.  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">uint32_t</span> Elf32_Word;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int32_t</span>  Elf32_Sword;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">uint32_t</span> Elf64_Word;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int32_t</span>  Elf64_Sword;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Types for signed and unsigned 64-bit quantities.  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">uint64_t</span> Elf32_Xword;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int64_t</span>  Elf32_Sxword;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">uint64_t</span> Elf64_Xword;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int64_t</span>  Elf64_Sxword;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Type of addresses.  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">uint32_t</span> Elf32_Addr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">uint64_t</span> Elf64_Addr;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Type of file offsets.  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">uint32_t</span> Elf32_Off;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">uint64_t</span> Elf64_Off;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Type for section indices, which are 16-bit quantities.  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">uint16_t</span> Elf32_Section;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">uint16_t</span> Elf64_Section;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Type for version symbol information.  */</span></span><br><span class="line"><span class="keyword">typedef</span> Elf32_Half Elf32_Versym;</span><br><span class="line"><span class="keyword">typedef</span> Elf64_Half Elf64_Versym;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="elf-header-ehdr"><a class="header-anchor-1" href="#elf-header-ehdr">#</a>ELF Header (Ehdr)</h2>
<ul>
<li>魔数：<code>[0x7f, 'E', 'L', 'F']</code></li>
<li>Phdr 大小，Phdr 个数</li>
<li>Shdr 大小，Shdr 个数</li>
<li>入口地址 <code>e_entry</code></li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> e_ident[EI_NIDENT]; <span class="comment">/* Magic number and other info */</span></span><br><span class="line">  Elf32_Half e_type;   <span class="comment">/* Object file type */</span></span><br><span class="line">  Elf32_Half e_machine;  <span class="comment">/* Architecture */</span></span><br><span class="line">  Elf32_Word e_version;  <span class="comment">/* Object file version */</span></span><br><span class="line">  Elf32_Addr e_entry;  <span class="comment">/* Entry point virtual address */</span></span><br><span class="line">  Elf32_Off e_phoff;  <span class="comment">/* Program header table file offset */</span></span><br><span class="line">  Elf32_Off e_shoff;  <span class="comment">/* Section header table file offset */</span></span><br><span class="line">  Elf32_Word e_flags;  <span class="comment">/* Processor-specific flags */</span></span><br><span class="line">  Elf32_Half e_ehsize;  <span class="comment">/* ELF header size in bytes */</span></span><br><span class="line">  Elf32_Half e_phentsize;  <span class="comment">/* Program header table entry size */</span></span><br><span class="line">  Elf32_Half e_phnum;  <span class="comment">/* Program header table entry count */</span></span><br><span class="line">  Elf32_Half e_shentsize;  <span class="comment">/* Section header table entry size */</span></span><br><span class="line">  Elf32_Half e_shnum;  <span class="comment">/* Section header table entry count */</span></span><br><span class="line">  Elf32_Half e_shstrndx;  <span class="comment">/* Section header string table index */</span></span><br><span class="line">&#125; Elf32_Ehdr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> e_ident[EI_NIDENT]; <span class="comment">/* Magic number and other info */</span></span><br><span class="line">  Elf64_Half e_type;   <span class="comment">/* Object file type */</span></span><br><span class="line">  Elf64_Half e_machine;  <span class="comment">/* Architecture */</span></span><br><span class="line">  Elf64_Word e_version;  <span class="comment">/* Object file version */</span></span><br><span class="line">  Elf64_Addr e_entry;  <span class="comment">/* Entry point virtual address */</span></span><br><span class="line">  Elf64_Off e_phoff;  <span class="comment">/* Program header table file offset */</span></span><br><span class="line">  Elf64_Off e_shoff;  <span class="comment">/* Section header table file offset */</span></span><br><span class="line">  Elf64_Word e_flags;  <span class="comment">/* Processor-specific flags */</span></span><br><span class="line">  Elf64_Half e_ehsize;  <span class="comment">/* ELF header size in bytes */</span></span><br><span class="line">  Elf64_Half e_phentsize;  <span class="comment">/* Program header table entry size */</span></span><br><span class="line">  Elf64_Half e_phnum;  <span class="comment">/* Program header table entry count */</span></span><br><span class="line">  Elf64_Half e_shentsize;  <span class="comment">/* Section header table entry size */</span></span><br><span class="line">  Elf64_Half e_shnum;  <span class="comment">/* Section header table entry count */</span></span><br><span class="line">  Elf64_Half e_shstrndx;  <span class="comment">/* Section header string table index */</span></span><br><span class="line">&#125; Elf64_Ehdr;</span><br></pre></td></tr></table></figure>
<h2 id="program-header-phdr"><a class="header-anchor-1" href="#program-header-phdr">#</a>Program Header (Phdr)</h2>
<p>一般在文件开头紧邻 EHdr，有多个 Phdr，起始偏移量由 <code>e_phoff</code> 指定，数量由 <code>e_phnum</code> 指定；</p>
<ul>
<li>p_vaddr 段加载的虚拟地址</li>
<li>p_flags 段属性</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Word p_type;   <span class="comment">/* Segment type */</span></span><br><span class="line">  Elf32_Off p_offset;  <span class="comment">/* Segment file offset */</span></span><br><span class="line">  Elf32_Addr p_vaddr;  <span class="comment">/* Segment virtual address */</span></span><br><span class="line">  Elf32_Addr p_paddr;  <span class="comment">/* Segment physical address */</span></span><br><span class="line">  Elf32_Word p_filesz;  <span class="comment">/* Segment size in file */</span></span><br><span class="line">  Elf32_Word p_memsz;  <span class="comment">/* Segment size in memory */</span></span><br><span class="line">  Elf32_Word p_flags;  <span class="comment">/* Segment flags */</span></span><br><span class="line">  Elf32_Word p_align;  <span class="comment">/* Segment alignment */</span></span><br><span class="line">&#125; Elf32_Phdr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Word p_type;   <span class="comment">/* Segment type */</span></span><br><span class="line">  Elf64_Word p_flags;  <span class="comment">/* Segment flags */</span></span><br><span class="line">  Elf64_Off p_offset;  <span class="comment">/* Segment file offset */</span></span><br><span class="line">  Elf64_Addr p_vaddr;  <span class="comment">/* Segment virtual address */</span></span><br><span class="line">  Elf64_Addr p_paddr;  <span class="comment">/* Segment physical address */</span></span><br><span class="line">  Elf64_Xword p_filesz;  <span class="comment">/* Segment size in file */</span></span><br><span class="line">  Elf64_Xword p_memsz;  <span class="comment">/* Segment size in memory */</span></span><br><span class="line">  Elf64_Xword p_align;  <span class="comment">/* Segment alignment */</span></span><br><span class="line">&#125; Elf64_Phdr;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="section-header-shdr"><a class="header-anchor-1" href="#section-header-shdr">#</a>Section Header (Shdr)</h2>
<p>一般在文件末尾，起始偏移量由 <code>e_shoff</code> 指定，数量由 <code>e_shnum</code> 指定；</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Word sh_name;  <span class="comment">/* Section name (string tbl index) */</span></span><br><span class="line">  Elf32_Word sh_type;  <span class="comment">/* Section type */</span></span><br><span class="line">  Elf32_Word sh_flags;  <span class="comment">/* Section flags */</span></span><br><span class="line">  Elf32_Addr sh_addr;  <span class="comment">/* Section virtual addr at execution */</span></span><br><span class="line">  Elf32_Off sh_offset;  <span class="comment">/* Section file offset */</span></span><br><span class="line">  Elf32_Word sh_size;  <span class="comment">/* Section size in bytes */</span></span><br><span class="line">  Elf32_Word sh_link;  <span class="comment">/* Link to another section */</span></span><br><span class="line">  Elf32_Word sh_info;  <span class="comment">/* Additional section information */</span></span><br><span class="line">  Elf32_Word sh_addralign;  <span class="comment">/* Section alignment */</span></span><br><span class="line">  Elf32_Word sh_entsize;  <span class="comment">/* Entry size if section holds table */</span></span><br><span class="line">&#125; Elf32_Shdr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Word sh_name;  <span class="comment">/* Section name (string tbl index) */</span></span><br><span class="line">  Elf64_Word sh_type;  <span class="comment">/* Section type */</span></span><br><span class="line">  Elf64_Xword sh_flags;  <span class="comment">/* Section flags */</span></span><br><span class="line">  Elf64_Addr sh_addr;  <span class="comment">/* Section virtual addr at execution */</span></span><br><span class="line">  Elf64_Off sh_offset;  <span class="comment">/* Section file offset */</span></span><br><span class="line">  Elf64_Xword sh_size;  <span class="comment">/* Section size in bytes */</span></span><br><span class="line">  Elf64_Word sh_link;  <span class="comment">/* Link to another section */</span></span><br><span class="line">  Elf64_Word sh_info;  <span class="comment">/* Additional section information */</span></span><br><span class="line">  Elf64_Xword sh_addralign;  <span class="comment">/* Section alignment */</span></span><br><span class="line">  Elf64_Xword sh_entsize;  <span class="comment">/* Entry size if section holds table */</span></span><br><span class="line">&#125; Elf64_Shdr;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="实例"><a class="header-anchor-1" href="#实例">#</a>实例</h2>
<ul>
<li>EHdr</li>
<li>PHdr 1</li>
<li>PHdr 2</li>
<li>PHdr …</li>
<li>Segment: PT_PHDR (self)</li>
<li>Segment: PT_INTERP
<ul>
<li>---- .interp ----</li>
<li><code>&quot;/lib64/ld-linux-x86-64.so.2&quot;</code></li>
</ul>
</li>
<li>Segment: PT_NOTE r–
<ul>
<li>---- .note.gnu.property ----</li>
<li>---- .note.gnu.build-id ----</li>
<li>---- .note.ABI-tag ----</li>
</ul>
</li>
<li>Segment: PT_GNU_HASH</li>
<li>Segment: Symbol Table</li>
<li>Segment: PT_LOAD r-x
<ul>
<li>---- .init ----
<ul>
<li><code>_init_proc</code></li>
</ul>
</li>
<li>---- .plt ----
<ul>
<li><code>sub_4020</code></li>
<li><code>sub_4030</code></li>
<li><code>...</code></li>
</ul>
</li>
<li>---- .plt.got ----
<ul>
<li><code>free</code></li>
<li><code>strcmp</code></li>
<li><code>...</code></li>
</ul>
</li>
<li>---- .plt.sec ----
<ul>
<li><code>___ctype_toupper_loc</code></li>
<li><code>...</code></li>
</ul>
</li>
<li>---- .text ----
<ul>
<li><code>loc_4D70</code></li>
<li><code>...</code></li>
</ul>
</li>
<li>---- .fini ----
<ul>
<li><code>_term_proc</code></li>
</ul>
</li>
</ul>
</li>
<li>Segment: PT_LOAD r–
<ul>
<li>---- .rodata ----
<ul>
<li><code>unk_19000</code></li>
<li><code>...</code></li>
</ul>
</li>
<li>---- .eh_frame_hdr ----</li>
<li>---- .eh_frame ----</li>
</ul>
</li>
<li>Segment: PT_LOAD rw-</li>
<li>Segment: PT_GNU_RELRO rw-
<ul>
<li>---- .init_array ----
<ul>
<li><code>0x6E10</code></li>
</ul>
</li>
<li>---- .fini_array ----
<ul>
<li><code>0x6DD0</code></li>
</ul>
</li>
</ul>
</li>
<li>SHdr 1:
<ul>
<li>---- .data.rel.ro ----</li>
</ul>
</li>
<li>SHdr …n
<ul>
<li>– Segment: PT_DYNAMIC rw-</li>
<li><code>stru_22A38</code></li>
<li>---- .got ----</li>
<li>---- .data ----</li>
<li>---- .bss ----</li>
</ul>
</li>
<li>Segment: Externs</li>
<li>Segment: String Table</li>
<li></li>
</ul>
<h2 id="典型-segment"><a class="header-anchor-1" href="#典型-segment">#</a>典型 Segment</h2>
<h3 id="pt-load"><a class="header-anchor-1" href="#pt-load">#</a>PT_LOAD</h3>
<p>普通的需要加载的段</p>
<h3 id="pt-interp"><a class="header-anchor-1" href="#pt-interp">#</a>PT_INTERP</h3>
<p>包含一个 C 字符串，指向动态链接器的路径，</p>
<p>当创建一个可执行文件时，如果依赖其它的动态链接库，那么链接编辑器会在可执行文件的程序头中加入一个 PT_INTERP 项，告诉系统这里需要使用动态链接器，一般链接器为 ld。</p>
<h3 id="pt-note"><a class="header-anchor-1" href="#pt-note">#</a>PT_NOTE</h3>
<p>附加信息，例如 ABI 版本，构建 ID 等</p>
<h3 id="pt-phdr"><a class="header-anchor-1" href="#pt-phdr">#</a>PT_PHDR</h3>
<p>包含一个程序头表的副本，用于动态链接器的加载</p>
<h2 id="典型-section"><a class="header-anchor-1" href="#典型-section">#</a>典型 Section</h2>
<p>Section 类型表：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_NULL   0  <span class="comment">/* Section header table entry unused */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_PROGBITS   1  <span class="comment">/* Program data */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_SYMTAB   2  <span class="comment">/* Symbol table */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_STRTAB   3  <span class="comment">/* String table */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_RELA   4  <span class="comment">/* Relocation entries with addends */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_HASH   5  <span class="comment">/* Symbol hash table */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_DYNAMIC   6  <span class="comment">/* Dynamic linking information */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_NOTE   7  <span class="comment">/* Notes */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_NOBITS   8  <span class="comment">/* Program space with no data (bss) */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_REL    9  <span class="comment">/* Relocation entries, no addends */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_SHLIB   10  <span class="comment">/* Reserved */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_DYNSYM   11  <span class="comment">/* Dynamic linker symbol table */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_INIT_ARRAY   14  <span class="comment">/* Array of constructors */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_FINI_ARRAY   15  <span class="comment">/* Array of destructors */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_PREINIT_ARRAY 16  <span class="comment">/* Array of pre-constructors */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_GROUP   17  <span class="comment">/* Section group */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_SYMTAB_SHNDX  18  <span class="comment">/* Extended section indices */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_RELR   19            <span class="comment">/* RELR relative relocations */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_NUM    20  <span class="comment">/* Number of defined types.  */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_LOOS   0x60000000 <span class="comment">/* Start OS-specific.  */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_GNU_ATTRIBUTES 0x6ffffff5 <span class="comment">/* Object attributes.  */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_GNU_HASH   0x6ffffff6 <span class="comment">/* GNU-style hash table.  */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_GNU_LIBLIST   0x6ffffff7 <span class="comment">/* Prelink library list */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_CHECKSUM   0x6ffffff8 <span class="comment">/* Checksum for DSO content.  */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_LOSUNW   0x6ffffffa <span class="comment">/* Sun-specific low bound.  */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_SUNW_move   0x6ffffffa</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_SUNW_COMDAT   0x6ffffffb</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_SUNW_syminfo  0x6ffffffc</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_GNU_verdef   0x6ffffffd <span class="comment">/* Version definition section.  */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_GNU_verneed   0x6ffffffe <span class="comment">/* Version needs section.  */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_GNU_versym   0x6fffffff <span class="comment">/* Version symbol table.  */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_HISUNW   0x6fffffff <span class="comment">/* Sun-specific high bound.  */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_HIOS   0x6fffffff <span class="comment">/* End OS-specific type */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_LOPROC   0x70000000 <span class="comment">/* Start of processor-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_HIPROC   0x7fffffff <span class="comment">/* End of processor-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_LOUSER   0x80000000 <span class="comment">/* Start of application-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHT_HIUSER   0x8fffffff <span class="comment">/* End of application-specific */</span></span></span><br></pre></td></tr></table></figure>
<h3 id="shstrtab-节名字符串表"><a class="header-anchor-1" href="#shstrtab-节名字符串表">#</a><code>.shstrtab</code> 节名字符串表</h3>
<p>字符串表，存储 ELF 结构中所有的 Section 的名字。类型是 <code>SHT_STRTAB</code>；由 EHdr 中的 <code>e_shstrndx</code> 确定本节的位置；</p>
<h3 id="dyntab-符号名字符串表"><a class="header-anchor-1" href="#dyntab-符号名字符串表">#</a><code>.dyntab</code> 符号名字符串表</h3>
<p>类型 <code>SHT_STRTAB</code>; 存储程序中的符号名，包含变量名、函数名等；</p>
<ul>
<li>这部分信息在进行  <code>strip</code>  后就会消失</li>
</ul>
<h3 id="sht-symtab-符号表"><a class="header-anchor-1" href="#sht-symtab-符号表">#</a>SHT_SYMTAB 符号表</h3>
<p>包含</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Word st_name;  <span class="comment">/* Symbol name (string tbl index) */</span></span><br><span class="line">  Elf32_Addr st_value;  <span class="comment">/* Symbol value */</span></span><br><span class="line">  Elf32_Word st_size;  <span class="comment">/* Symbol size */</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> st_info;  <span class="comment">/* Symbol type and binding */</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> st_other;  <span class="comment">/* Symbol visibility */</span></span><br><span class="line">  Elf32_Section st_shndx;  <span class="comment">/* Section index */</span></span><br><span class="line">&#125; Elf32_Sym;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Word st_name;  <span class="comment">/* Symbol name (string tbl index) */</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> st_info;  <span class="comment">/* Symbol type and binding */</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> st_other;  <span class="comment">/* Symbol visibility */</span></span><br><span class="line">  Elf64_Section st_shndx;  <span class="comment">/* Section index */</span></span><br><span class="line">  Elf64_Addr st_value;  <span class="comment">/* Symbol value */</span></span><br><span class="line">  Elf64_Xword st_size;  <span class="comment">/* Symbol size */</span></span><br><span class="line">&#125; Elf64_Sym;</span><br></pre></td></tr></table></figure>
<h3 id="dynamic-动态链接节"><a class="header-anchor-1" href="#dynamic-动态链接节">#</a><code>.dynamic</code> 动态链接节</h3>
]]></content>
      <categories>
        <category>binary-analysis</category>
      </categories>
      <tags>
        <tag>二进制</tag>
      </tags>
  </entry>
  <entry>
    <title>《编译原理》（龙书）第二版阅读记录</title>
    <url>/2024/04/15/dragon-book/</url>
    <content><![CDATA[<p>标注:</p>
<ul>
<li>❓ = 不了解的</li>
<li>❗️ = 想看的</li>
</ul>
<h2 id="chapter-1-编译器结构"><a class="header-anchor-1" href="#chapter-1-编译器结构">#</a>Chapter 1. 编译器结构</h2>
<ul>
<li>CISC &amp; RISC</li>
<li>词法分析</li>
<li>…</li>
</ul>
<h2 id="chapter-2-简易语法制导翻译器实现"><a class="header-anchor-1" href="#chapter-2-简易语法制导翻译器实现">#</a>Chapter 2. 简易语法制导翻译器实现</h2>
<p>使用 java 实现的编译器前端</p>
<p>整体流程: 源代码 – 词法分析 – 语法分析 – 中间代码生成 – 三地址代码</p>
<h3 id="语法"><a class="header-anchor-1" href="#语法">#</a>语法</h3>
<p>文法 (a.k.a. 上下文无关文法 CFG) 用来描述某一类语言的模式</p>
<p>文法不允许二义性 i.e., 对同一段文本串(终结符号串)有多种解释方式</p>
<p>利用附加规则 (结合性 &amp; 优先级) 消除二义性</p>
<h3 id="语法制导翻译"><a class="header-anchor-1" href="#语法制导翻译">#</a>语法制导翻译</h3>
<p>语法制导翻译: 在文法产生式上 进行某些逻辑处理 实现翻译</p>
<h3 id="语法分析"><a class="header-anchor-1" href="#语法分析">#</a>语法分析</h3>
<blockquote>
<p>对于任何上下文无关文法，我们都可以构造出一个时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的语法分析器，它最多使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的时间就可以完成一个长度为 n 的符号串的语法分析。</p>
</blockquote>
<p>但是现实中往往设计简单的文法 以实现 O(n)的语法分析</p>
<p>语法分析方法: 自顶向下 自底向上</p>
<h3 id="词法分析"><a class="header-anchor-1" href="#词法分析">#</a>词法分析</h3>
<p>词素 lexem</p>
<h3 id="符号表"><a class="header-anchor-1" href="#符号表">#</a>符号表</h3>
<p>符号表一般与编程语言中的作用域(scope)相对应</p>
<p>可以利用最近嵌套规则</p>
<h3 id="生成中间代码"><a class="header-anchor-1" href="#生成中间代码">#</a>生成中间代码</h3>
<p>两种最重要的 IR 的形式</p>
<ul>
<li>树形表示：包括 语法分析树 和 AST</li>
<li>线性表示：尤其是三地址(代)码</li>
</ul>
<p>三地址码：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mi>y</mi><mtext> </mtext><mi>o</mi><mi>p</mi><mtext> </mtext><mi>z</mi></mrow><annotation encoding="application/x-tex">x = y~op~z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace nobreak"> </span><span class="mord mathnormal">o</span><span class="mord mathnormal">p</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span>
或数组形式
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo stretchy="false">[</mo><mi>y</mi><mo stretchy="false">]</mo><mo>=</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x [ y ] = z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span>
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mi>y</mi><mo stretchy="false">[</mo><mi>z</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">x = y [ z ]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">]</span></span></span></span></p>
<p><code>lvalue</code>和<code>rvalue</code>伪代码</p>
<p><img src="Pasted_image_20240501001519.png" alt="" /></p>
<p><img src="Pasted_image_20240501001849.png" alt="" /></p>
<h2 id="chapter-3-词法分析"><a class="header-anchor-1" href="#chapter-3-词法分析">#</a>Chapter 3. 词法分析</h2>
<ul>
<li>正则表达式</li>
<li>Lex</li>
<li>自动机, DFA &amp; NFA</li>
<li>NFA 转 DFA</li>
</ul>
<h2 id="chapter-4-语法分析"><a class="header-anchor-1" href="#chapter-4-语法分析">#</a>Chapter 4. 语法分析</h2>
<ul>
<li>上下文无关文法</li>
<li>LL(1) 文法</li>
<li>LR 语法分析</li>
<li>LALR</li>
<li>Yacc</li>
</ul>
<h2 id="chapter-5-语法制导翻译"><a class="header-anchor-1" href="#chapter-5-语法制导翻译">#</a>Chapter 5. 语法制导翻译</h2>
<ul>
<li>语法制导定义 SDD</li>
<li>合成属性 继承属性</li>
<li>语法制导翻译 SDT</li>
</ul>
<h2 id="chapter-6-中间代码生成"><a class="header-anchor-1" href="#chapter-6-中间代码生成">#</a>Chapter 6. 中间代码生成</h2>
<p>本章关注怎么从 AST 生成 IR，主要方法就是灵活运用 SDT</p>
<blockquote>
<p>C 常常被用作 IR</p>
</blockquote>
<h3 id="6-1-dag-表示语法树"><a class="header-anchor-1" href="#6-1-dag-表示语法树">#</a>6.1 DAG 表示语法树</h3>
<p>好处：自动提取公共子表达式，适合优化</p>
<h3 id="6-2-三地址-代-码"><a class="header-anchor-1" href="#6-2-三地址-代-码">#</a>6.2 三地址(代)码</h3>
<p>两个基本元素：</p>
<ul>
<li>地址
<ul>
<li>变量名字</li>
<li>常量</li>
<li>临时变量</li>
</ul>
</li>
<li>指令</li>
</ul>
<p>三地址码的实现：</p>
<ul>
<li>结构体/对象</li>
<li>四元式 <code>quadruple</code>：<code>result = arg1 op arg2</code></li>
<li>三元式 <code>triple</code>：每条指令隐含产生一个结果，参数是指令下标</li>
<li>间接三元式 <code>indirect triple</code>：解决三元式不适合在中间插入删除的问题</li>
</ul>
<p>静态单赋值形式 SSA：</p>
<ul>
<li>静态单赋值形式是另一种 IR 的形式</li>
<li>需要 Phi 函数解决多分支问题</li>
<li>三地址码 =&gt; SSA 转换方法</li>
</ul>
<h3 id="6-3-类型和声明"><a class="header-anchor-1" href="#6-3-类型和声明">#</a>6.3 类型和声明</h3>
<p>类型表达式 type expression：</p>
<ul>
<li>表示编程语言中的类型的代数系统</li>
<li>是树形结构</li>
<li>一个典型的类型表达式系统：
<ul>
<li>基本类型 boolean char integer float void</li>
<li>类名</li>
<li>数组类型 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>r</mi><mi>r</mi><mi>a</mi><mi>y</mi><mo stretchy="false">(</mo><mi>N</mi><mo separator="true">,</mo><mtext>类型表达式</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">array(N, 类型表达式)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">类型表达式</span><span class="mclose">)</span></span></span></span></li>
<li>记录类型 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>e</mi><mi>c</mi><mi>o</mi><mi>r</mi><mi>d</mi><mo stretchy="false">(</mo><mi>N</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo separator="true">,</mo><mtext>类型表达式</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">record(Name, 类型表达式)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">recor</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">am</span><span class="mord mathnormal">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">类型表达式</span><span class="mclose">)</span></span></span></span></li>
<li>函数类型 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>→</mo><mi>t</mi></mrow><annotation encoding="application/x-tex">s\rightarrow t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span></li>
<li>笛卡儿积(一般是列表或元组) <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>×</mo><mi>t</mi></mrow><annotation encoding="application/x-tex">s\times t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span></li>
</ul>
</li>
</ul>
<p>类型 <em>结构等价</em> 与 <em>名字等价</em>：</p>
<ul>
<li>❓ 没看懂</li>
</ul>
<p>类型的翻译：</p>
<p><img src="type-sdt.png" alt="" /></p>
<p>局部变量的存储布局：</p>
<ul>
<li>类型<em>宽度</em>：类型的一个对象所需的存储单元数量
<ul>
<li>计算宽度的 SDT 方案：
<img src="Pasted_image_20240501004728.png" alt="" /></li>
<li>暂时不考虑内存对齐要求</li>
</ul>
</li>
<li>根据类型可以给变量分配相对地址
<ul>
<li>分配地址的 SDT 方案</li>
</ul>
</li>
</ul>
<h3 id="6-4-表达式翻译方法"><a class="header-anchor-1" href="#6-4-表达式翻译方法">#</a>6.4 表达式翻译方法</h3>
<p><img src="Pasted_image_20240501010254.png" alt="" /></p>
<p>增量翻译：直接输出<code>code</code>而非存储起来</p>
<p><img src="incr-expr-sdt.png" alt="" /></p>
<p>数组的翻译</p>
<h3 id="6-5-类型检查"><a class="header-anchor-1" href="#6-5-类型检查">#</a>6.5 类型检查</h3>
<ul>
<li>类型检查：给源程序每个部分一个类型表达式，然后确定这些表达式是否符合一组逻辑规则。
<ul>
<li>能够发现程序中的错误</li>
</ul>
</li>
<li>TODO: ❓</li>
</ul>
<h3 id="6-6-控制流"><a class="header-anchor-1" href="#6-6-控制流">#</a>6.6 控制流</h3>
<ul>
<li>直接参考就行了
<img src="control-flow-translation-sdt.png" alt="" /></li>
</ul>
<h3 id="6-7-回填-6-8-语句翻译-6-9-过程翻译"><a class="header-anchor-1" href="#6-7-回填-6-8-语句翻译-6-9-过程翻译">#</a>6.7 回填 &amp; 6.8 语句翻译 &amp; 6.9 过程翻译</h3>
<p>在翻译控制流语句时，经常需要生成向后跳转的跳转指令，到还没有翻译完成的地方。</p>
<p>例如翻译 <code>if (B) S</code> 指令，第一遍翻译时不知道<code>S</code>后面的指令地址，因此就没办法生成<code>goto</code>的目标；对于<code>switch</code>语句问题则更加明显，需要翻译完<code>switch body</code>才能知道跳转的目标。</p>
<p><em>回填 backpatching</em> 技术是一遍扫描内解决这个问题的一个方法，每个跳转指令在生成时都暂时不指定目标，而是后续回填这个目标。</p>
<p>每个非终结符号新增合成属性：</p>
<ul>
<li><code>truelist</code>，<code>falselist</code> 记录需要回填的跳转目标</li>
<li><code>nextlist</code> 记录下一条指令</li>
</ul>
<p>辅助函数：</p>
<ul>
<li><code>makelist(i)</code> 创建一个列表，包含需要回填的指令<code>i</code></li>
<li><code>merge(p1, p2)</code> 合并两个列表</li>
<li><code>backpatch(p, i)</code> 把标号<code>i</code>回填到链表<code>p</code>包含的每条指令中</li>
</ul>
<p><img src="boolean-expr-translation-sdt-with-backpatching.png" alt="" />
<img src="statement-translation-sdt-with-backpatching.png" alt="" /></p>
<p>goto 语句的翻译：</p>
<ul>
<li>为每个 label 维护一个<code>patchlist</code>，在知道 label 的目标之后进行回填即可</li>
</ul>
<p>break 和 continue 语句的翻译：</p>
<ul>
<li>跟踪循环语句</li>
<li>将 break 语句添加到循环语句的<code>nextlist</code>中</li>
</ul>
<p>Switch 的翻译：</p>
<ul>
<li>翻译选择
<ul>
<li>case 数据较少时可以用条件跳转</li>
<li>较多时可以使用散列表</li>
<li>直接把值映射到下标</li>
</ul>
</li>
<li>条件跳转：把分支语句放在开头会不方便
<ul>
<li>可以把跳转块放在末尾</li>
<li>也可以边执行边跳转</li>
</ul>
</li>
</ul>
<p><img src="switch-translation-scheme.png" alt="" /></p>
<p>过程的翻译：</p>
<ul>
<li>三地址码表示函数：<code>n=f(a[i])</code>
翻译成</li>
</ul>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">t_1 = i * 4</span><br><span class="line">t_2 = a[t_1]</span><br><span class="line">param t_2</span><br><span class="line">t_3 = call f, 1</span><br><span class="line">n = t_3</span><br></pre></td></tr></table></figure>
<ul>
<li>函数类型：s-&gt;t</li>
<li>符号表：
<ul>
<li>原符号表中增加一个新函数符号；然后压入一个新的函数符号表</li>
<li>函数形参可以用类似 record 字段的方式处理</li>
</ul>
</li>
<li>类型检查</li>
<li>函数调用</li>
</ul>
<h2 id="chapter-7-运行时"><a class="header-anchor-1" href="#chapter-7-运行时">#</a>Chapter 7. 运行时</h2>
<ul>
<li>栈</li>
<li>堆</li>
<li>内存分配</li>
<li>GC ❗️</li>
</ul>
<h2 id="chapter-8-代码生成"><a class="header-anchor-1" href="#chapter-8-代码生成">#</a>Chapter 8. 代码生成</h2>
<ul>
<li>目标机器模型</li>
<li>基本块</li>
<li>基本代码生成</li>
<li>窥孔优化</li>
<li>寄存器分配</li>
<li>表达式生成优化</li>
</ul>
<h2 id="chapter-9-机器无关优化"><a class="header-anchor-1" href="#chapter-9-机器无关优化">#</a>Chapter 9. 机器无关优化</h2>
<ul>
<li>数据流分析</li>
<li>常量传播</li>
<li>冗余消除</li>
<li>循环 ❓</li>
<li>基于区域的分析 ❓</li>
<li>符号分析 ❗️</li>
</ul>
<h2 id="chapter-10-指令级并行"><a class="header-anchor-1" href="#chapter-10-指令级并行">#</a>Chapter 10. 指令级并行</h2>
<h2 id="chapter-11-并行-局部性优化"><a class="header-anchor-1" href="#chapter-11-并行-局部性优化">#</a>Chapter 11. 并行 &amp; 局部性优化</h2>
<h2 id="chapter-12-过程间分析"><a class="header-anchor-1" href="#chapter-12-过程间分析">#</a>Chapter 12. 过程间分析</h2>
<ul>
<li>Datalog ❗️</li>
<li>指针分析 ❗️</li>
</ul>
]]></content>
      <categories>
        <category>compiler-principle</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
      </tags>
  </entry>
  <entry>
    <title>LLVM 中间语言参考</title>
    <url>/2023/12/22/llvm/</url>
    <content><![CDATA[<h2 id="概述"><a class="header-anchor-1" href="#概述">#</a>概述</h2>
<p>LLVM is a <em>Static Single Assignment (SSA)</em> based representation that provides <em>type safety</em>, low-level operations, flexibility, and the capability of <em>representing ‘all’ high-level languages cleanly</em></p>
<p>更严谨, 更 formal 的 C 语言</p>
<p>LLVM IR 有三种形态: 位于 llvm 工具内存中, 以二进制格式存储(.bc 文件), 以文本格式存储(.ll 文件).
用 <code>llvm-as</code> 可以把 .ll 格式转换为 .bc 格式, <code>llvm-dis</code> 反之</p>
<p>LLVM IR 由和高级语言类似的语句组成.</p>
<p>变量采用 SSA 模式, 不能被重复赋值</p>
<h2 id="注释"><a class="header-anchor-1" href="#注释">#</a>注释</h2>
<p>从 ; 到行尾的部分是注释</p>
<h2 id="局部变量"><a class="header-anchor-1" href="#局部变量">#</a>局部变量</h2>
<p>LLVM IR 中的变量存储临时结果</p>
<p>变量名字以 % 开头, 变量名中可以有 . 等字符, 可以是纯数字</p>
<p>变量不需要提前声明, 赋值即定义变量</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line"><span class="variable">%1</span> <span class="operator">=</span> <span class="keyword">mul</span> <span class="type">i32</span> <span class="variable">%0</span><span class="punctuation">,</span> <span class="number">7</span>          <span class="comment">; v1 = v0 * 7</span></span><br><span class="line"><span class="variable">%2</span> <span class="operator">=</span> <span class="keyword">zext</span> <span class="type">i1</span> <span class="variable">%1</span> <span class="keyword">to</span> <span class="type">i32</span>      <span class="comment">; v2 = (int)v1</span></span><br></pre></td></tr></table></figure>
<h2 id="全局变量"><a class="header-anchor-1" href="#全局变量">#</a>全局变量</h2>
<p>全局变量名字以 @ 开头, 其他与局部变量类似</p>
<h2 id="类型"><a class="header-anchor-1" href="#类型">#</a>类型</h2>
<p>LLVM IR 必须指定每个变量, 函数的类型</p>
<p>不会发生自动类型转换 避免歧义</p>
<h2 id="函数"><a class="header-anchor-1" href="#函数">#</a>函数</h2>
<p>declare 声明函数</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">declare</span> &lt;ResultType&gt; <span class="title">@Name</span> (argument*)</span><br><span class="line"></span><br><span class="line">argument ::<span class="operator">=</span> &lt;<span class="keyword">type</span>&gt; [parameter Attrs] [name]</span><br></pre></td></tr></table></figure>
<p>define 定义函数</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">define</span> &lt;ResultType&gt; <span class="title">@Name</span> (argument*) &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">argument ::<span class="operator">=</span> &lt;<span class="keyword">type</span>&gt; [parameter Attrs] [name]</span><br></pre></td></tr></table></figure>
<h2 id="字符串"><a class="header-anchor-1" href="#字符串">#</a>字符串</h2>
<p>和 c 语言的一样</p>
<h2 id="标签-label"><a class="header-anchor-1" href="#标签-label">#</a>标签 label</h2>
<p>LLVM IR 的标签和 C 语言中类似</p>
<h2 id="类型系统"><a class="header-anchor-1" href="#类型系统">#</a>类型系统</h2>
<ul>
<li>
<p>void 无值 无大小</p>
</li>
<li>
<p>iN N 位整数</p>
</li>
<li>
<p>half/bfloat/float/double/fp128 浮点数</p>
</li>
<li>
<p><code>&lt;ty&gt;*</code> 指针类型</p>
</li>
<li>
<p>label 标签类型</p>
</li>
<li>
<p>token token 类型</p>
</li>
<li>
<p><code>[&lt;size&gt; x &lt;ty&gt;]</code> 数组类型</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line"><span class="title">@array</span> <span class="operator">=</span> <span class="keyword">global</span> [<span class="number">42</span> <span class="keyword">x</span> <span class="type">i32</span>] <span class="keyword">zeroinitializer</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><code>type &#123; &lt;ty&gt; [, &lt;ty&gt;]* &#125;</code> 结构体类型</p>
</li>
<li>
<p><code>type &lt;&#123; &lt;ty&gt; [, &lt;ty&gt;]* &#125;&gt;</code> 压缩结构体类型 不做对齐</p>
</li>
</ul>
<h2 id="常量-const"><a class="header-anchor-1" href="#常量-const">#</a>常量 Const</h2>
<ul>
<li>true/false i1 类型</li>
<li>null 指针类型</li>
<li>none token 类型</li>
</ul>
<h2 id="指令系统"><a class="header-anchor-1" href="#指令系统">#</a>指令系统</h2>
<h3 id="控制流指令"><a class="header-anchor-1" href="#控制流指令">#</a>控制流指令</h3>
<ul>
<li>ret</li>
<li>br</li>
<li>switch</li>
<li>indirectbr</li>
<li>invoke</li>
</ul>
<h3 id="算术指令"><a class="header-anchor-1" href="#算术指令">#</a>算术指令</h3>
<ul>
<li>fneg</li>
<li>add/fadd</li>
<li>sub/fsub</li>
<li>mul/fmul</li>
<li>udiv/sdiv/fdiv</li>
<li>urem/srem/frem</li>
<li>shl</li>
<li>lshr/ashr</li>
<li>and/or/xor</li>
</ul>
<h3 id="内存指令"><a class="header-anchor-1" href="#内存指令">#</a>内存指令</h3>
<h3 id="alloca-分配栈内存"><a class="header-anchor-1" href="#alloca-分配栈内存">#</a>alloca 分配栈内存</h3>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line"><span class="variable">%ptr</span> <span class="operator">=</span> <span class="keyword">alloca</span> &lt;<span class="keyword">type</span>&gt;</span><br></pre></td></tr></table></figure>
<p>背后是栈指针的改变</p>
<h3 id="load-store-读取-写入值"><a class="header-anchor-1" href="#load-store-读取-写入值">#</a>load store 读取/写入值</h3>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">&lt;result&gt; <span class="operator">=</span> <span class="keyword">load</span> [<span class="keyword">volatile</span>] &lt;ty&gt;<span class="punctuation">,</span> <span class="type">ptr</span> &lt;pointer&gt;[<span class="punctuation">,</span> <span class="keyword">align</span> &lt;alignment&gt;]</span><br><span class="line"></span><br><span class="line"><span class="keyword">store</span> [<span class="keyword">volatile</span>] &lt;ty&gt; &lt;value&gt;<span class="punctuation">,</span> <span class="type">ptr</span> &lt;pointer&gt;[<span class="punctuation">,</span> <span class="keyword">align</span> &lt;alignment&gt;]</span><br></pre></td></tr></table></figure>
<h3 id="指针偏移-get-element-pointer-gep"><a class="header-anchor-1" href="#指针偏移-get-element-pointer-gep">#</a>指针偏移 Get Element Pointer (GEP)</h3>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">&lt;result&gt; <span class="operator">=</span> <span class="keyword">getelementptr</span> &lt;ty&gt;<span class="punctuation">,</span> &lt;ty&gt;* &lt;ptrval&gt;<span class="punctuation">,</span> [<span class="type">i32</span> &lt;idx&gt;]+</span><br><span class="line"><span class="comment">; 语法: getelementptr 结果类型  数组类型* 数组变量  索引(可以有多个)</span></span><br></pre></td></tr></table></figure>
<p>GEP 仅计算指针加上偏移后的值, 本身并不进行任何数据的访问或修改</p>
<p>偏移按照指向对象的类型, 相当于 C 语言里面的 数组+偏移量 的模式</p>
<h3 id="类型转换指令"><a class="header-anchor-1" href="#类型转换指令">#</a>类型转换指令</h3>
<ul>
<li>trunc … to</li>
<li>zext … to</li>
<li>sext … to</li>
</ul>
<h3 id="杂项指令"><a class="header-anchor-1" href="#杂项指令">#</a>杂项指令</h3>
<ul>
<li>icmp 整数向量比较</li>
<li>fcmp 浮点数向量比较</li>
<li>select 类似三元表达式</li>
<li>freeze : stop propagation of undef and poison values</li>
<li>call 函数调用</li>
<li>va_arg 变长参数</li>
</ul>
<h3 id="phi-指令"><a class="header-anchor-1" href="#phi-指令">#</a>Phi 指令</h3>
<p>有时需要对已经定义的变量赋一个新的值 (例如循环变量)</p>
<p>SSA 不允许这样做 -&gt; phi 运算</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">&lt;result&gt; <span class="operator">=</span> <span class="keyword">phi</span> &lt;ty&gt; [&lt;val<span class="number">0</span>&gt;<span class="punctuation">,</span> &lt;<span class="type">label</span><span class="number">0</span>&gt;]<span class="punctuation">,</span> [&lt;val<span class="number">1</span>&gt;<span class="punctuation">,</span> &lt;<span class="type">label</span><span class="number">1</span>&gt;] …</span><br></pre></td></tr></table></figure>
<p>根据前一个基本块是哪一个 选择对应的值</p>
<h3 id="内置函数"><a class="header-anchor-1" href="#内置函数">#</a>内置函数</h3>
<ul>
<li>va_start/va_end/va_copy</li>
<li>abs/max/min/sin/cos/…</li>
<li>ctlz/fshl/…</li>
</ul>
]]></content>
      <categories>
        <category>compiler-principle</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
        <tag>程序分析</tag>
      </tags>
  </entry>
  <entry>
    <title>自己动手写编译器</title>
    <url>/2023/12/19/make-a-c-compiler/</url>
    <content><![CDATA[<blockquote>
<p>What I cannot create, I do not understand. – Richard Feynman</p>
</blockquote>
<h2 id="目标"><a class="header-anchor-1" href="#目标">#</a>目标</h2>
<ul>
<li>实现一个 C-to-assembly compiler</li>
<li>可以有 pre-processer</li>
<li>不需要 linker, 生成二进制通过已有的 Assembler</li>
<li>支持常用的 C99 语法</li>
<li>需要有编译优化</li>
</ul>
<h2 id="词法分析-语法分析"><a class="header-anchor-1" href="#词法分析-语法分析">#</a>词法分析, 语法分析</h2>
<ul>
<li>用已有的工具 flex, bison</li>
</ul>
<h2 id="类型系统"><a class="header-anchor-1" href="#类型系统">#</a>类型系统</h2>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TypeKind</span> &#123;</span></span><br><span class="line"> VOID,</span><br><span class="line"> ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="中间表示-cminor"><a class="header-anchor-1" href="#中间表示-cminor">#</a>中间表示 - CMinor</h2>
<p>IR 定义：</p>
<ul>
<li>ARITH arg1 arg2 result
<ul>
<li>ADD/SUB/MUL/MOD/SHL/SHR/AND/OR/XOR</li>
<li>LT/LE/GT/GE/EQ/NE</li>
</ul>
</li>
<li>ARITH arg result
<ul>
<li>NEG/NOT/CAST</li>
</ul>
</li>
<li>MOV arg result</li>
<li>GOTO addr</li>
<li>IF_GOTO arg label</li>
<li>UNLESS_GOTO arg label</li>
<li>IF_REL arg1 arg2 label
<ul>
<li>LT/LE/GT/GE/EQ/NE</li>
</ul>
</li>
<li>PARAM x</li>
<li>y = CALL p, n</li>
<li>RETURN y</li>
<li>GET_ELEMENT array index result</li>
<li>STORE_ELEMENT array index value</li>
<li>ADDR arg result</li>
<li>LOAD arg result</li>
<li>STORE arg result</li>
</ul>
<h2 id="关键数据结构"><a class="header-anchor-1" href="#关键数据结构">#</a>关键数据结构</h2>
<ol>
<li>
<p>类型(Type)结构</p>
</li>
<li>
<p>结构体/联合体成员(Member)结构</p>
</li>
<li>
<p>全局变量/函数定义对象(Obj)结构</p>
</li>
</ol>
]]></content>
      <categories>
        <category>compiler-principle</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
        <tag>编译器</tag>
      </tags>
  </entry>
  <entry>
    <title>MimiC编译器源码阅读</title>
    <url>/2024/05/06/mimic-reading/</url>
    <content><![CDATA[<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3VzdGItb3dsL01pbWlD">MimiC<i class="fa fa-external-link-alt"></i></span> is a compiler of C subset (extended SysY language) by USTB NSCSCC team.</p>
<h2 id="使用说明"><a class="header-anchor-1" href="#使用说明">#</a>使用说明</h2>
<h3 id="源语言定义"><a class="header-anchor-1" href="#源语言定义">#</a>源语言定义</h3>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">comp_unit</span>       ::= &#123;decl | type_def | func_def&#125;;</span><br><span class="line"><span class="attribute">decl</span>            ::= var_decl | func_decl;</span><br><span class="line"><span class="attribute">type_def</span>        ::= struct_def | enum_def | type_alias;</span><br><span class="line"><span class="attribute">func_def</span>        ::= func_header block;</span><br><span class="line"></span><br><span class="line"><span class="attribute">var_decl</span>        ::= type var_def &#123;<span class="string">&quot;,&quot;</span> var_def&#125; <span class="string">&quot;;&quot;</span>;</span><br><span class="line"><span class="attribute">var_def</span>         ::= ID_VAL &#123;<span class="string">&quot;[&quot;</span> expr <span class="string">&quot;]&quot;</span>&#125; [<span class="string">&quot;=&quot;</span> init_val];</span><br><span class="line"><span class="attribute">init_val</span>        ::= expr | <span class="string">&quot;&#123;&quot;</span> [init_val &#123;<span class="string">&quot;,&quot;</span> init_val&#125;] <span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">func_decl</span>       ::= func_header <span class="string">&quot;;&quot;</span>;</span><br><span class="line"><span class="attribute">func_header</span>     ::= type ID_VAL <span class="string">&quot;(&quot;</span> [func_params] <span class="string">&quot;)&quot;</span>;</span><br><span class="line"><span class="attribute">func_params</span>     ::= func_param &#123;<span class="string">&quot;,&quot;</span> func_param&#125;;</span><br><span class="line"><span class="attribute">func_param</span>      ::= type ID_VAL [<span class="string">&quot;[&quot;</span> [expr] <span class="string">&quot;]&quot;</span> &#123;<span class="string">&quot;[&quot;</span> expr <span class="string">&quot;]&quot;</span>&#125;];</span><br><span class="line"></span><br><span class="line"><span class="attribute">struct_def</span>      ::= <span class="string">&quot;struct&quot;</span> ID_VAL <span class="string">&quot;&#123;&quot;</span> &#123;struct_elem&#125; <span class="string">&quot;&#125;&quot;</span> <span class="string">&quot;;&quot;</span>;</span><br><span class="line"><span class="attribute">enum_def</span>        ::= <span class="string">&quot;enum&quot;</span> [ID_VAL] <span class="string">&quot;&#123;&quot;</span> enum_elems <span class="string">&quot;&#125;&quot;</span> <span class="string">&quot;;&quot;</span>;</span><br><span class="line"><span class="attribute">type_alias</span>      ::= <span class="string">&quot;typedef&quot;</span> type ID_VAL <span class="string">&quot;;&quot;</span>;</span><br><span class="line"><span class="attribute">struct_elem</span>     ::= type struct_elem_def &#123;<span class="string">&quot;,&quot;</span> struct_elem_def&#125; <span class="string">&quot;;&quot;</span>;</span><br><span class="line"><span class="attribute">struct_elem_def</span> ::= ID_VAL &#123;<span class="string">&quot;[&quot;</span> expr <span class="string">&quot;]&quot;</span>&#125;;</span><br><span class="line"><span class="attribute">enum_elems</span>      ::= ID_VAL [<span class="string">&quot;=&quot;</span> expr] [<span class="string">&quot;,&quot;</span> enum_elems] [<span class="string">&quot;,&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="attribute">block</span>           ::= <span class="string">&quot;&#123;&quot;</span> &#123;block_item&#125; <span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line"><span class="attribute">block_item</span>      ::= decl | type_def | stmt;</span><br><span class="line"></span><br><span class="line"><span class="attribute">stmt</span>            ::= bare | block | if_else | while | control;</span><br><span class="line"><span class="attribute">bare</span>            ::= expr <span class="string">&quot;;&quot;</span>;</span><br><span class="line"><span class="attribute">if_else</span>         ::= <span class="string">&quot;if&quot;</span> <span class="string">&quot;(&quot;</span> expr <span class="string">&quot;)&quot;</span> stmt [<span class="string">&quot;else&quot;</span> stmt];</span><br><span class="line"><span class="attribute">while</span>           ::= <span class="string">&quot;while&quot;</span> <span class="string">&quot;(&quot;</span> expr <span class="string">&quot;)&quot;</span> stmt;</span><br><span class="line"><span class="attribute">control</span>         ::= (<span class="string">&quot;break&quot;</span> | <span class="string">&quot;continue&quot;</span> | (<span class="string">&quot;return&quot;</span> [expr])) <span class="string">&quot;;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">expr</span>            ::= cast &#123;bin_op cast&#125;;</span><br><span class="line"><span class="attribute">cast</span>            ::= &#123;<span class="string">&quot;(&quot;</span> type <span class="string">&quot;)&quot;</span>&#125; unary;</span><br><span class="line"><span class="attribute">unary</span>           ::= &#123;unary_op&#125; factor | <span class="string">&quot;sizeof&quot;</span> (factor | <span class="string">&quot;(&quot;</span> type <span class="string">&quot;)&quot;</span>);</span><br><span class="line"><span class="attribute">factor</span>          ::= value | index | func_call | access | <span class="string">&quot;(&quot;</span> expr <span class="string">&quot;)&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">bin_op</span>          ::= <span class="string">&quot;+&quot;</span>   | <span class="string">&quot;-&quot;</span>   | <span class="string">&quot;*&quot;</span>   | <span class="string">&quot;/&quot;</span>   | <span class="string">&quot;%&quot;</span>   | <span class="string">&quot;&amp;&quot;</span></span><br><span class="line">                  | <span class="string">&quot;|&quot;</span>   | <span class="string">&quot;^&quot;</span>   | <span class="string">&quot;&amp;&amp;&quot;</span>  | <span class="string">&quot;||&quot;</span>  | <span class="string">&quot;&lt;&lt;&quot;</span>  | <span class="string">&quot;&gt;&gt;&quot;</span></span><br><span class="line">                  | <span class="string">&quot;==&quot;</span>  | <span class="string">&quot;!=&quot;</span>  | <span class="string">&quot;&lt;&quot;</span>   | <span class="string">&quot;&lt;=&quot;</span>  | <span class="string">&quot;&gt;&quot;</span>   | <span class="string">&quot;&gt;=&quot;</span></span><br><span class="line">                  | <span class="string">&quot;=&quot;</span>   | <span class="string">&quot;+=&quot;</span>  | <span class="string">&quot;-=&quot;</span>  | <span class="string">&quot;*=&quot;</span>  | <span class="string">&quot;/=&quot;</span>  | <span class="string">&quot;%=&quot;</span></span><br><span class="line">                  | <span class="string">&quot;&amp;=&quot;</span>  | <span class="string">&quot;|=&quot;</span>  | <span class="string">&quot;^=&quot;</span>  | <span class="string">&quot;&lt;&lt;=&quot;</span> | <span class="string">&quot;&gt;&gt;=&quot;</span>;</span><br><span class="line"><span class="attribute">unary_op</span>        ::= <span class="string">&quot;+&quot;</span>   | <span class="string">&quot;-&quot;</span>   | <span class="string">&quot;!&quot;</span>   | <span class="string">&quot;~&quot;</span>   | <span class="string">&quot;*&quot;</span>   | <span class="string">&quot;&amp;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">value</span>           ::= INT_VAL | CHAR_VAL | STR_VAL | ID_VAL;</span><br><span class="line"><span class="attribute">index</span>           ::= expr <span class="string">&quot;[&quot;</span> expr <span class="string">&quot;]&quot;</span>;</span><br><span class="line"><span class="attribute">func_call</span>       ::= expr <span class="string">&quot;(&quot;</span> [expr &#123;<span class="string">&quot;,&quot;</span> expr&#125;] <span class="string">&quot;)&quot;</span>;</span><br><span class="line"><span class="attribute">access</span>          ::= factor (<span class="string">&quot;.&quot;</span> | <span class="string">&quot;-&gt;&quot;</span>) ID_VAL;</span><br><span class="line"></span><br><span class="line"><span class="attribute">type</span>            ::= prim_type | struct_type | enum_type | const | pointer</span><br><span class="line">                  | user_type;</span><br><span class="line"><span class="attribute">prim_type</span>       ::= <span class="string">&quot;void&quot;</span> | [<span class="string">&quot;unsigned&quot;</span>] <span class="string">&quot;int&quot;</span> | <span class="string">&quot;char&quot;</span>;</span><br><span class="line"><span class="attribute">struct_type</span>     ::= <span class="string">&quot;struct&quot;</span> ID_VAL;</span><br><span class="line"><span class="attribute">enum_type</span>       ::= <span class="string">&quot;enum&quot;</span> ID_VAL;</span><br><span class="line"><span class="attribute">const</span>           ::= <span class="string">&quot;const&quot;</span> type;</span><br><span class="line"><span class="attribute">pointer</span>         ::= type <span class="string">&quot;*&quot;</span> &#123;<span class="string">&quot;*&quot;</span>&#125;;</span><br><span class="line"><span class="attribute">user_type</span>       ::= ID_VAL;</span><br></pre></td></tr></table></figure>
<h3 id="目标语言"><a class="header-anchor-1" href="#目标语言">#</a>目标语言</h3>
<ul>
<li>C</li>
<li>riscv32</li>
<li>aarch32</li>
</ul>
<h3 id="构建-使用"><a class="header-anchor-1" href="#构建-使用">#</a>构建&amp;使用</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br><span class="line">make -j32</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./mmcc -h</span><br><span class="line">Usage: mmcc &lt;INPUT&gt; [OPTIONS...]</span><br><span class="line"></span><br><span class="line">Arguments:</span><br><span class="line">  input                         input <span class="built_in">source</span> file</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -h, --<span class="built_in">help</span>                    show this message</span><br><span class="line">  -v, --version                 show version info</span><br><span class="line">  -S, --asm                     dump assembly</span><br><span class="line">  -O2, --opt-2                  <span class="built_in">enable</span> level-2 optimization</span><br><span class="line">  -o, --output &lt;ARG&gt;            output file, default to stdout</span><br><span class="line">  -V, --verbose                 use verbose output</span><br><span class="line">  -Werror, --warn-error         treat warnings as errors</span><br><span class="line">  -Wall, --warn-all             <span class="built_in">enable</span> all warnings</span><br><span class="line">  -da, --dump-ast               dump AST to output</span><br><span class="line">  -di, --dump-ir                dump IR to output</span><br><span class="line">  -ps, --pass-stage &lt;ARG&gt;       optimize <span class="keyword">until</span> specific stage</span><br><span class="line">  -ta, --target-arch &lt;ARG&gt;      specify target architecture</span><br></pre></td></tr></table></figure>
<h2 id="实现"><a class="header-anchor-1" href="#实现">#</a>实现</h2>
<h3 id="模块划分"><a class="header-anchor-1" href="#模块划分">#</a>模块划分</h3>
<ul>
<li><code>back/</code></li>
<li><code>define/</code></li>
<li><code>driver</code></li>
<li><code>front</code></li>
<li><code>mid</code></li>
<li><code>opt</code></li>
<li><code>utils</code></li>
</ul>
<h3 id="类设计"><a class="header-anchor-1" href="#类设计">#</a>类设计</h3>
<p><img src="mimic-uml.excalidraw.svg" alt="mimic-uml.excalidraw.svg" /></p>
<h3 id="pass-注册"><a class="header-anchor-1" href="#pass-注册">#</a>Pass 注册</h3>
<p>利用<code>static</code>变量最先执行的特性，由<code>PassManager</code>提供一个注册函数，用于保存当前 pass。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">PassManager</span> &#123;</span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">// register a new pass</span></span><br><span class="line">  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line">  <span class="function"><span class="type">static</span> PassInfo &amp;<span class="title">RegisterPass</span><span class="params">(std::string_view name)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">static_assert</span>(!std::is_base_of_v&lt;HelperPass, T&gt;,</span><br><span class="line">                  <span class="string">&quot;helper pass is unregisterable&quot;</span>);</span><br><span class="line">    <span class="keyword">auto</span> &amp;passes = <span class="built_in">GetPasses</span>();</span><br><span class="line">    <span class="built_in">assert</span>(!passes.<span class="built_in">count</span>(name) &amp;&amp; <span class="string">&quot;pass has already been registered&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> passes.<span class="built_in">insert</span>(&#123;name, <span class="built_in">PassInfo</span>(std::<span class="built_in">make_unique</span>&lt;T&gt;(), name)&#125;)</span><br><span class="line">        .first-&gt;second;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span>:</span><br><span class="line">  <span class="comment">// get pass info list</span></span><br><span class="line">  <span class="function"><span class="type">static</span> PassInfoMap &amp;<span class="title">GetPasses</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// In passman.cpp</span></span><br><span class="line"><span class="function">PassManager::PassInfoMap &amp;<span class="title">PassManager::GetPasses</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="type">static</span> PassInfoMap passes;</span><br><span class="line">  <span class="keyword">return</span> passes;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// register a pass</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REGISTER_PASS(cls, name) \</span></span><br><span class="line"><span class="meta">  static PassInfo &amp;pass_##name = PassManager::RegisterPass<span class="string">&lt;cls&gt;</span>(#name)</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// register current pass</span></span><br><span class="line"><span class="built_in">REGISTER_PASS</span>(PhiSimplifyPass, phi_simp)</span><br><span class="line">    .<span class="built_in">set_min_opt_level</span>(<span class="number">1</span>)</span><br><span class="line">    .<span class="built_in">set_stages</span>(PassStage::Promote);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>compiler-principle</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
        <tag>编译器</tag>
      </tags>
  </entry>
  <entry>
    <title>编译原理课程笔记 - 大纲</title>
    <url>/2020/12/03/note0-index/</url>
    <content><![CDATA[<h2 id="课程简介"><a class="header-anchor-1" href="#课程简介">#</a>课程简介</h2>
<p>总评 = 考试 * 60% + 作业 * 30% + 平时 * 10%</p>
<h2 id="程序语言的发展"><a class="header-anchor-1" href="#程序语言的发展">#</a>程序语言的发展</h2>
<p>机器语言 -&gt; 汇编语言 -&gt; 高级语言</p>
<h2 id="程序的两种执行方式"><a class="header-anchor-1" href="#程序的两种执行方式">#</a>程序的两种执行方式</h2>
<ul>
<li>
<p>解释方式</p>
</li>
<li>
<p>编译方式</p>
</li>
</ul>
<p>Java 认为是解释型语言</p>
<h2 id="编译的步骤"><a class="header-anchor-1" href="#编译的步骤">#</a>编译的步骤</h2>
<p>编译过程基本分为五个基本阶段:</p>
<ol>
<li>词法分析</li>
<li>语法分析</li>
<li>语义分析和中间代码生成</li>
<li>优化</li>
<li>目标代码生成</li>
</ol>
<h3 id="1-词法分析"><a class="header-anchor-1" href="#1-词法分析">#</a>1. 词法分析</h3>
<ul>
<li>词法分析程序又称扫描程序(Scanner)。
<ul>
<li>任务：读源程序的字符流、识别单词（也称单词符号，或简称符号），如标识符、关键字、常量、界限符等，并转换成内部形式。</li>
<li>输入：源程序中的字符流</li>
<li>输出：等长的内部形式，即属性字（单词类型 Token-name, 单词属性 Attribute-value），其中单词属性指向符号表</li>
</ul>
</li>
</ul>
<p>输入: 字符流</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">cppcode = <span class="string">`</span></span><br><span class="line"><span class="string">int a, b;</span></span><br><span class="line"><span class="string">a = a + 2;</span></span><br><span class="line"><span class="string">`</span>;</span><br></pre></td></tr></table></figure>
<p>输出: Token 流和对应的符号表</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">tokenList = [</span><br><span class="line">    &lt;int&gt;</span><br><span class="line">    &lt;id,<span class="number">1</span>&gt;</span><br><span class="line">    &lt;,&gt;</span><br><span class="line">    &lt;id,<span class="number">2</span>&gt;</span><br><span class="line">    &lt;;&gt;</span><br><span class="line">    &lt;id,<span class="number">1</span>&gt;</span><br><span class="line">    &lt;op,<span class="variable constant_">EQ</span>&gt;</span><br><span class="line">    &lt;id,<span class="number">1</span>&gt;</span><br><span class="line">    &lt;+&gt;</span><br><span class="line">    &lt;<span class="number">2</span>&gt;</span><br><span class="line">    &lt;;&gt;</span><br><span class="line">]</span><br><span class="line">tokenTable = [</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;a&#x27;</span>, ...&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;b&#x27;</span>, ...&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<ul>
<li>在词法分析阶段工作所依循的是语言的词法规则。</li>
<li>描述词法规则的有效工具是<strong>正规式</strong>和<strong>有限自动机</strong>。</li>
<li>方法：<strong>状态图</strong>；<strong>DFA</strong>；<strong>NFA</strong></li>
</ul>
<p>DFA 模拟代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">s = s0;</span><br><span class="line">c = <span class="built_in">nextChar</span>() ;</span><br><span class="line"><span class="keyword">while</span> ( c != eof ) &#123;</span><br><span class="line">    s = <span class="built_in">move</span>(s, c);</span><br><span class="line">    c = <span class="built_in">nextChar</span>() ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ( s is in F ) <span class="keyword">return</span> <span class="string">&quot; yes &quot;</span> ;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="string">&quot;no &quot;</span> ;</span><br></pre></td></tr></table></figure>
<h3 id="2-语法分析"><a class="header-anchor-1" href="#2-语法分析">#</a>2. 语法分析</h3>
<ul>
<li>语法分析程序又称识别程序(Parser)。
<ul>
<li>任务：读入由词法分析程序识别出的符号，根据给定语法规则，识别出各个语法单位（如：短语、子句、语句、程序段、程序）,并生成另一种内部表示。</li>
<li>输入：由词法分析程序识别出并转换的符号</li>
<li>输出：另一种内部表示，如<strong>语法分析树</strong>或其它<strong>中间表示</strong>。</li>
</ul>
</li>
<li>语法规则通常用<strong>上下文无关文法</strong>描述。</li>
<li>方法：递归子程序法、<strong>LR 分析法</strong>、<strong>算符优先分析法</strong>。</li>
</ul>
<p>输入: 符号流</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">sum := first + count * <span class="number">10</span></span><br></pre></td></tr></table></figure>
<p>输出: 语法树</p>
<p><img src="ast_demo.png" alt="" /></p>
<h3 id="3-1-语义分析"><a class="header-anchor-1" href="#3-1-语义分析">#</a>3.1 语义分析</h3>
<h3 id="3-2-中间代码生成"><a class="header-anchor-1" href="#3-2-中间代码生成">#</a>3.2 中间代码生成</h3>
<h3 id="4-优化"><a class="header-anchor-1" href="#4-优化">#</a>4. 优化</h3>
<ul>
<li>优化的任务在于对前段产生的中间代码进行加工，把它变换成功能相同，但功效更高的优化了的中间表示代码，以期在最后阶段产生更为高效（省时间和空间）的代码</li>
<li>优化所依循的原则是程序的等价变换规则</li>
<li>其方法有：公共子表达式的提取、循环优化、删除无用代码等等。</li>
</ul>
<h3 id="5-目标代码生成"><a class="header-anchor-1" href="#5-目标代码生成">#</a>5. 目标代码生成</h3>
<h3 id="遍-pass"><a class="header-anchor-1" href="#遍-pass">#</a>遍(Pass)</h3>
<p>对<strong>源程序</strong>或源程序的<strong>中间结果</strong>从头到尾扫描一次，并做相关处理，生成新的中间结果或目标程序的过程。</p>
<p>“遍”是处理数据的一个完整周期，每遍工作从外存上获得前一遍的中间结果（如源程序），完成它所含的有关工作之后，再把结果记录于外存。</p>
<p>一个编译程序可由一遍、两遍或多遍完成。每一遍可完成不同的阶段或多个阶段的工作。</p>
<table>
<thead>
<tr>
<th></th>
<th>从时间和空间角度看</th>
</tr>
</thead>
<tbody>
<tr>
<td>多遍编译</td>
<td><strong>少占内存，多耗时间</strong></td>
</tr>
<tr>
<td>一遍编译</td>
<td><strong>多占内存，少耗时间</strong></td>
</tr>
</tbody>
</table>
<h3 id="t-形图"><a class="header-anchor-1" href="#t-形图">#</a>T 形图</h3>
<p><img src="t_diagram.png" alt="" /></p>
<ul>
<li>S:源语言(程序)，Source language(program)</li>
<li>T:目标语言(程序), target/object language(program)</li>
<li>I:实现语言, implementation language</li>
</ul>
<p>用 T 形图表示编译器移植</p>
<p><img src="t_diagram2.png" alt="" /></p>
<h3 id="特殊"><a class="header-anchor-1" href="#特殊">#</a>特殊</h3>
<p>自编译:</p>
<p>交叉编译</p>
<p>自动编译:
lex, yacc</p>
<h2 id="复习"><a class="header-anchor-1" href="#复习">#</a>复习</h2>
<p>乔姆斯基文法:
0/1/2/3</p>
<p>词法分析: 3 型语法分析: 2 型</p>
<p>A 卷 - 简单缓考不考-&gt;B 卷-&gt;难</p>
<p>语法分析:
LR,SLR,二义文法</p>
<p>就 5 道大题 5 个部分 占 40%
平时 60%</p>
]]></content>
      <categories>
        <category>compiler-principle</category>
      </categories>
  </entry>
  <entry>
    <title>编译原理课程笔记 - Chapter 1 词法分析</title>
    <url>/2020/12/17/note1-lex/</url>
    <content><![CDATA[<h2 id="提纲"><a class="header-anchor-1" href="#提纲">#</a>提纲</h2>
<p><img src="index.png" alt="" /></p>
<h2 id="概述"><a class="header-anchor-1" href="#概述">#</a>概述</h2>
<ul>
<li>单词级别分析和翻译源程序</li>
<li>任务: 作为<strong>字符串</strong>的源程序-&gt;<strong>单词符号串</strong></li>
</ul>
<h2 id="词法分析器的要求"><a class="header-anchor-1" href="#词法分析器的要求">#</a>词法分析器的要求</h2>
<p>单词符号表示通常使用二元式 (单词种别, 单词符号的属性值)</p>
<ul>
<li>单词种别: 语法分析需要的信息, 通常使用整数编码</li>
<li>单词(符号属性)值: 编译其他阶段使用</li>
</ul>
<p>单词如何分类取决于处理上的方便:</p>
<ul>
<li>标识符: 一般通归为一种</li>
<li>常数: 按类型分种</li>
<li>关键字: 可全体为一种, 也可一字一种(更方便)</li>
<li>运算符: 一般一符一种, 可以把具有一定共性的视为一类</li>
<li>界符: 一般一符一种</li>
</ul>
<p>单词符号的属性:</p>
<ul>
<li>标识符: 存放它<strong>符号表</strong>项的指针/内部字符串</li>
<li>常数: 存放它<strong>常数表</strong>项的指针/二进制形式</li>
<li>关键字/运算符/界符: 不需要属性</li>
</ul>
<p><img src="lex.png" alt="" /></p>
<p>实现方式:</p>
<ul>
<li>完全独立: lex 作为单独一遍
<ul>
<li>结构简洁, 清晰, 条理化</li>
</ul>
</li>
<li>相对独立: 作为 parser 的一个独立子程序, 需要新符号时调用
<ul>
<li>避免中间文件, 提高效率</li>
</ul>
</li>
</ul>
<h2 id="词法分析器设计"><a class="header-anchor-1" href="#词法分析器设计">#</a>词法分析器设计</h2>
<h3 id="lexer-的结构"><a class="header-anchor-1" href="#lexer-的结构">#</a>lexer 的结构</h3>
<p>源程序 -&gt; 输入缓冲区/预处理子程序/扫描缓冲区/扫描器 -&gt; 单词符号</p>
<p>预处理子程序: 处理空白符等编辑性字符, 删除注释等</p>
<p>输入缓冲区: 存放源程序文本输入串的缓冲区</p>
<p>扫描缓冲区: 设定两个指示器</p>
<h3 id="单词符号的识别-超前搜索"><a class="header-anchor-1" href="#单词符号的识别-超前搜索">#</a>单词符号的识别: 超前搜索</h3>
<ul>
<li>关键字识别</li>
<li>标识符识别: 一般是字母开头的字母数字串, 一般都跟着算符或者界符, 不难识别</li>
<li>常数的识别: 有些语言需要使用超前搜索</li>
<li>算符和界符: 对于 c++中的++,–等需要超前搜索</li>
</ul>
<h3 id="词法规则的表示"><a class="header-anchor-1" href="#词法规则的表示">#</a>词法规则的表示</h3>
<p>大多数 pl 中的单词符号的<strong>词法规则</strong>可以用<strong>正规文法</strong>描述</p>
<p>例如:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;标识符&gt; -&gt; 字母|&lt;标识符&gt;字母|&lt;标识符&gt;数字</span><br><span class="line">&lt;整数&gt; -&gt; 数字|&lt;整数&gt;数字</span><br><span class="line">&lt;运算符&gt; -&gt; +|-|×|÷…</span><br><span class="line">&lt;界符&gt; -&gt; ;|,|(|)|…</span><br></pre></td></tr></table></figure>
<p>利用这些规则识别的过程可以用<strong>状态转换图</strong>来表示, 而状态转换图可以方便地用程序实现</p>
<h3 id="tg"><a class="header-anchor-1" href="#tg">#</a>TG</h3>
<p>状态转换图 TG: 一个有限有向图, 可用于接受(识别)一定的符号串</p>
<ul>
<li>结点表示状态, 用圆圈表示
<ul>
<li>初态: 通常只有一个, 用一条输入弧表示</li>
<li>终态: <strong>至少有一个</strong>, 用双圈表示</li>
</ul>
</li>
<li>方向弧表示状态转换, 弧上的标记表示接受的输入字符或字符类</li>
</ul>
<p>路: 在状态转换图中从初态到某一个终态的弧上的标记序列</p>
<p>接受(识别): 若存在一条路产生<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span>, 则称状态转换图接受符号串<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></p>
<p>状态转换图能识别的语言: L(TG)能别 TG 接受的符号串的集合</p>
<p><img src="tg.png" alt="" /></p>
<h2 id="正规表达式和有限自动机"><a class="header-anchor-1" href="#正规表达式和有限自动机">#</a>正规表达式和有限自动机</h2>
<h3 id="正规式"><a class="header-anchor-1" href="#正规式">#</a>正规式</h3>
<p>字母表<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span></span></span></span>上的正规式和正规集递归定义如下：</p>
<ol>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi></mrow><annotation encoding="application/x-tex">\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ε</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi></mrow><annotation encoding="application/x-tex">\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">φ</span></span></span></span>都是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span></span></span></span>上的正规式, 它们所表示的正规集分别为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>ε</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{\varepsilon\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">ε</span><span class="mclose">}</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi></mrow><annotation encoding="application/x-tex">\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">φ</span></span></span></span>。其中：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi></mrow><annotation encoding="application/x-tex">\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ε</span></span></span></span>为空字符串, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi></mrow><annotation encoding="application/x-tex">\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">φ</span></span></span></span>为空集</li>
<li>任意元素<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>∈</mo><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">a\in\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span></span></span></span>, a 是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span></span></span></span>上的一个正规式, 它所表示的正规集是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>a</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{a\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mclose">}</span></span></span></span>;</li>
<li>假定 U 和 V 都是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span></span></span></span>上的正规式, 它们所表示的正规集记为 L(U)和 L(V), 那么(U|V), (U·V)和(U)*都是正规式, 他们所表示的正规集分别记为 L(U)∪L(V), L(U)L(V)和(L(U))*。</li>
<li>仅由有限次使用上述三步而得到的表达式才是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span></span></span></span>上的正规式, 它们所表示的字集才是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span></span></span></span>上的正规集。</li>
</ol>
<p>运算:</p>
<ul>
<li>闭包<code>*</code></li>
<li>连接<code>.</code> (可省略)</li>
<li>或<code>|</code></li>
</ul>
<p>运算律:</p>
<ul>
<li>或交换律</li>
<li>或结合律</li>
<li>连接结合律</li>
<li>或对连接分配律</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi><mi>U</mi><mo>=</mo><mi>U</mi><mi>ε</mi><mo>=</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">\varepsilon U=U \varepsilon=U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">ε</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal">ε</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></li>
</ul>
<p>例:</p>
<ul>
<li>以 01 结尾的二进制数串的正规式: <code>(0|1)*01</code></li>
<li>能被 5 整除的十进制整数: <code>0|5|(1|2|3|4|5|6|7|8|9)(0|1|2|3|4|5|6|7|8|9)*(0|5)</code></li>
</ul>
<h3 id="fa"><a class="header-anchor-1" href="#fa">#</a>FA</h3>
<p>自动机: 具有离散输入输出的数学模型</p>
<pre><code>状态 + 输入 + 规则 -&gt; 状态迁移
</code></pre>
<p>有限自动机(FA)</p>
<p>有限状态机(FSM)</p>
<h3 id="dfa"><a class="header-anchor-1" href="#dfa">#</a>DFA</h3>
<p>DFA 五元组: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>=</mo><mo stretchy="false">(</mo><mi>S</mi><mo separator="true">,</mo><mi mathvariant="normal">Σ</mi><mo separator="true">,</mo><mi>δ</mi><mo separator="true">,</mo><msub><mi>S</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M=(S,\Sigma,\delta,S_0,F)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">Σ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span></span></span></span></p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>: 有限的状态集合, 每个元素称为一个状态</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span></span></span></span>: 有限的输入字母表, 每个元素称为一个输入字符</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo>:</mo><mi>S</mi><mo>×</mo><mi mathvariant="normal">Σ</mi><mo>→</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">\delta: S\times\Sigma \rightarrow S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>: 转换函数(状态转移集合)
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">\delta(s, a)=s&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></li>
</ul>
</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>0</mn></msub><mo>∈</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">S_0\in S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>: 初始状态</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo>⊆</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">F\subseteq S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>: 终止状态集</li>
</ul>
<p>状态转换矩阵: DFA 可以用一个矩阵表示, 每行表示一个状态, 每列表示一种输入, 矩阵元素表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta(s,a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span>的值</p>
<p><strong>DFA 与状态转换图: DFA 可以用 TG 唯一表示</strong></p>
<p><img src="dfa_tg.png" alt="" /></p>
<p><strong>拓展转移函数</strong></p>
<ul>
<li>接收一个字符串的状态转移函数</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>δ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>:</mo><mi>S</mi><mo>×</mo><msup><mi mathvariant="normal">Σ</mi><mo>∗</mo></msup><mo>→</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">\delta&#x27;: S\times\Sigma^* \rightarrow S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>δ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>ε</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi></mrow><annotation encoding="application/x-tex">\delta&#x27;(s, \varepsilon) = s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ε</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>δ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>ω</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>δ</mi><mo stretchy="false">(</mo><msup><mi>δ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>ω</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta&#x27;(s, \omega a) = \delta(\delta&#x27;(s,\omega),a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ωa</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span></li>
</ul>
</li>
</ul>
<p>DFA 接受的字符串</p>
<p>DFA 接受的语言: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>α</mi><mi mathvariant="normal">∣</mi><msup><mi>δ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>α</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>F</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">L(M)=\{α|\delta&#x27;(s,α)\in F\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">}</span></span></span></span></p>
<h3 id="nfa"><a class="header-anchor-1" href="#nfa">#</a>NFA</h3>
<p>NFA 五元组: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>=</mo><mo stretchy="false">(</mo><mi>S</mi><mo separator="true">,</mo><mi mathvariant="normal">Σ</mi><mo separator="true">,</mo><mi>δ</mi><mo separator="true">,</mo><msub><mi>S</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M=(S,\Sigma,\delta,S_0,F)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">Σ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span></span></span></span></p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>: 同 DFA</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span></span></span></span>: 同 DFA</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo>:</mo><mi>S</mi><mo>×</mo><msup><mi mathvariant="normal">Σ</mi><mo>∗</mo></msup><mo>→</mo><msup><mn>2</mn><mi>S</mi></msup><mo stretchy="false">(</mo><mtext>幂集</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta: S\times\Sigma^* \rightarrow 2^S(幂集)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord cjk_fallback">幂集</span><span class="mclose">)</span></span></span></span>: 转换函数(状态转移集合)
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>⊆</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">\delta(s, a)=S&#x27;\subseteq S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8879em;vertical-align:-0.136em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></li>
</ul>
</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>0</mn></msub><mo>⊆</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">S_0\subseteq S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>: 非空初态集</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo>⊆</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">F\subseteq S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>: 终止状态集</li>
</ul>
<p><strong>NFA 也可以用 TG 和转换矩阵表示</strong></p>
<p><strong>NFA 的状态是一个集合</strong></p>
<table>
<thead>
<tr>
<th>比较</th>
<th>DFA</th>
<th>NFA</th>
</tr>
</thead>
<tbody>
<tr>
<td>输入字母</td>
<td>每个(状态,输入)都有一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span></td>
<td>可能没有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span>/是空转换</td>
</tr>
<tr>
<td>转移状态</td>
<td>确定的</td>
<td>不确定的, 可能有多个</td>
</tr>
</tbody>
</table>
<p>NFA 的拓展转移函数</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>δ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>:</mo><mi>S</mi><mo>×</mo><msup><mi mathvariant="normal">Σ</mi><mo>∗</mo></msup><mo>→</mo><msup><mn>2</mn><mi>S</mi></msup></mrow><annotation encoding="application/x-tex">\delta&#x27;: S\times\Sigma^* \rightarrow 2^S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span></span></span></span>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>δ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>ε</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>s</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\delta&#x27;(s, \varepsilon) = \{s\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ε</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">s</span><span class="mclose">}</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>δ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>ω</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>p</mi><mi mathvariant="normal">∣</mi><mtext>存在</mtext><mi>r</mi><mo>∈</mo><msup><mi>δ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>ω</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>p</mi><mo>∈</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\delta&#x27;(s,\omega a)=\{p|存在r\in\delta&#x27;(s,\omega )\wedge p\in\delta(r,a)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ωa</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">p</span><span class="mord">∣</span><span class="mord cjk_fallback">存在</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)}</span></span></span></span></li>
</ul>
</li>
</ul>
<p>NFA 接受的字符串</p>
<p>NFA 接受的语言</p>
<h3 id="dfa-和-nfa-的关系-子集法"><a class="header-anchor-1" href="#dfa-和-nfa-的关系-子集法">#</a>DFA 和 NFA 的关系 (子集法)</h3>
<p>DFA 是 NFA 的特例, 两者可以相互转化</p>
<p><strong>ε-闭包</strong>:</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>ε</mi><mi mathvariant="normal">_</mi><mi>C</mi><mi>L</mi><mi>O</mi><mi>S</mi><mi>U</mi><mi>R</mi><mi>E</mi><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo><mo>=</mo><mi>I</mi><mo>∪</mo><mo stretchy="false">{</mo><msup><mi>q</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi>q</mi><mtext>经任意条</mtext><mi>ε</mi><mtext>弧可到达</mtext><msup><mi>q</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><mi>q</mi><mo>∈</mo><mi>I</mi><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>I</mi><mo>⊆</mo><msup><mi>M</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">\varepsilon\_CLOSURE(I)=I\cup\{q&#x27;|q经任意条\varepsilon弧可到达q&#x27;, q\in I\}, I\subseteq M&#x27;
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal">ε</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.05764em;">OS</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.05764em;">RE</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0519em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord cjk_fallback">经任意条</span><span class="mord mathnormal">ε</span><span class="mord cjk_fallback">弧可到达</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8019em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><strong>NFA-&gt;DFA 之子集法</strong>:</p>
<ol>
<li>
<p>引进新的初态结点 X 和终态结点 Y, 从 X 到所有原始态结点连接一条<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi></mrow><annotation encoding="application/x-tex">\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ε</span></span></span></span>弧, 从所有原终态结点到 Y 连接一条<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi></mrow><annotation encoding="application/x-tex">\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ε</span></span></span></span>弧</p>
</li>
<li>
<p>对复合的弧进行<strong>分裂</strong></p>
<p><img src="nfa_dfa.png" alt="" /></p>
</li>
<li>
<p>构造状态矩阵</p>
</li>
</ol>
<table>
<thead>
<tr>
<th>I</th>
<th><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><msub><mi mathvariant="normal">Σ</mi><mi>i</mi></msub></msub></mrow><annotation encoding="application/x-tex">I_{\Sigma_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9334em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span></span></span></span></th>
<th>…</th>
</tr>
</thead>
<tbody>
<tr>
<td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi><mi mathvariant="normal">_</mi><mi>C</mi><mi>L</mi><mi>O</mi><mi>S</mi><mi>U</mi><mi>R</mi><mi>E</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\varepsilon\_CLOSURE({X})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal">ε</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.05764em;">OS</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.05764em;">RE</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mclose">)</span></span></span></span></td>
<td>…</td>
<td>…</td>
</tr>
<tr>
<td>…</td>
<td>…</td>
<td>…</td>
</tr>
</tbody>
</table>
<ol start="4">
<li>合并相同状态, 重新命名得到新的状态转换矩阵
<ul>
<li>第一行第一列的状态为始态</li>
<li>包含 Y 的状态为终态</li>
</ul>
</li>
<li>画出状态转换图</li>
</ol>
<p>例:</p>
<p><img src="nfa_dfa_example_1.png" alt="" /></p>
<p><img src="nfa_dfa_example_2.png" alt="" /></p>
<table>
<thead>
<tr>
<th>I</th>
<th><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">I_{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">I_{b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
</tr>
</thead>
<tbody>
<tr>
<td>{X, 0, Y}</td>
<td>{1}</td>
<td>{1}</td>
</tr>
<tr>
<td>{1}</td>
<td>{0,Y}</td>
<td>-</td>
</tr>
<tr>
<td>{0,Y}</td>
<td>{1}</td>
<td>{1}</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>I</th>
<th><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">I_{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">I_{b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>2</td>
<td>2</td>
</tr>
<tr>
<td>2</td>
<td>3</td>
<td>-</td>
</tr>
<tr>
<td>3</td>
<td>2</td>
<td>2</td>
</tr>
</tbody>
</table>
<p><img src="nfa_dfa_example_3.png" alt="" /></p>
<h3 id="正规式和-fa-的关系"><a class="header-anchor-1" href="#正规式和-fa-的关系">#</a>正规式和 FA 的关系</h3>
<ul>
<li>正规式和 FA 是等价的</li>
</ul>
<h4 id="从-nfa-构造等价的正规式-简单"><a class="header-anchor-1" href="#从-nfa-构造等价的正规式-简单">#</a>从 NFA 构造等价的正规式 (简单)</h4>
<ol>
<li>
<p>引进新的初态结点 X 和终态结点 Y, 从 X 到所有原始态结点连接一条<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi></mrow><annotation encoding="application/x-tex">\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ε</span></span></span></span>弧, 从所有原终态结点到 Y 连接一条<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi></mrow><annotation encoding="application/x-tex">\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ε</span></span></span></span>弧</p>
</li>
<li>
<p>对复合的弧进行<strong>合并</strong></p>
<p><img src="nfa_regex.png" alt="" /></p>
</li>
<li>
<p>得到 regex</p>
</li>
</ol>
<h4 id="从正规式构造等价的-nfa-thompson-算法"><a class="header-anchor-1" href="#从正规式构造等价的-nfa-thompson-算法">#</a><strong>从正规式构造等价的 NFA (Thompson 算法)</strong></h4>
<p><img src="regex_nfa_1.png" alt="" />
<img src="regex_nfa_2.png" alt="" /></p>
<p>例:</p>
<p><img src="regex_nfa_example.png" alt="" /></p>
<h3 id="dfa-的化简-等价状态法"><a class="header-anchor-1" href="#dfa-的化简-等价状态法">#</a><strong>DFA 的化简 (等价状态法)</strong></h3>
<p>将状态集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>根据能否被输入区分划分为更细的集合</p>
<ol>
<li>初始划分: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Π</mi><mo>=</mo><mo stretchy="false">{</mo><mtext>终态集</mtext><msup><mi>I</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mtext>非终态集</mtext><msup><mi>I</mi><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\Pi=\{终态集I^{(1)}, 非终态集I^{(2)}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Π</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord cjk_fallback">终态集</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">非终态集</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></li>
<li>检查能否再分
<ol>
<li>如果对输入字符<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>, 存在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">I^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>接受<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>后不全落在现行<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Π</span></span></span></span>的某一个子集中</li>
<li>就把<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">I^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>分成多个组, 使得每个组接受<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>后都落在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Π</span></span></span></span>的同一个子集中</li>
</ol>
</li>
<li>重复直到子集数不再增加</li>
</ol>
<p><img src="dfa_simplify.png" alt="" /></p>
<p>例题:</p>
<p><img src="dfa_simplify_example.png" alt="" /></p>
<p>初始划分<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mn>0</mn></msub><mo>=</mo><mo stretchy="false">{</mo><mrow><mo fence="true">{</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>C</mi><mo separator="true">,</mo><mi>D</mi><mo fence="true">}</mo></mrow><mo separator="true">,</mo><mo stretchy="false">{</mo><mi>E</mi><mo stretchy="false">}</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\Pi_0=\{\left\{A,B,C,D\right\},\{E\}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">}}</span></span></span></span></p>
<p>考察<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>C</mi><mo separator="true">,</mo><mi>D</mi><msub><mo stretchy="false">}</mo><mi>a</mi></msub><mo>=</mo><mo stretchy="false">{</mo><mi>B</mi><mo stretchy="false">}</mo><mo>⊆</mo><mo stretchy="false">{</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>C</mi><mo separator="true">,</mo><mi>D</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{A,B,C,D\}_a=\{B\}\subseteq \{A,B,C,D\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">}</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>C</mi><mo separator="true">,</mo><mi>D</mi><msub><mo stretchy="false">}</mo><mi>b</mi></msub><mo>=</mo><mo stretchy="false">{</mo><mi>C</mi><mo separator="true">,</mo><mi>D</mi><mo separator="true">,</mo><mi>E</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{A,B,C,D\}_b=\{C,D,E\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">}</span></span></span></span>, 需要划分, 其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>C</mi><msub><mo stretchy="false">}</mo><mi>b</mi></msub><mo>=</mo><mo stretchy="false">{</mo><mi>C</mi><mo separator="true">,</mo><mi>D</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{A,B,C\}_b=\{C,D\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">}</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>D</mi><msub><mo stretchy="false">}</mo><mi>b</mi></msub><mo>=</mo><mo stretchy="false">{</mo><mi>E</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{D\}_b=\{E\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">}</span></span></span></span></p>
<p>将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>C</mi><mo separator="true">,</mo><mi>D</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{A,B,C,D\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">}</span></span></span></span>分成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{A,B,C\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">}</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>D</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{D\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">}</span></span></span></span>, 得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mn>1</mn></msub><mo>=</mo><mo stretchy="false">{</mo><mrow><mo fence="true">{</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>C</mi><mo fence="true">}</mo></mrow><mo separator="true">,</mo><mo stretchy="false">{</mo><mi>D</mi><mo stretchy="false">}</mo><mo separator="true">,</mo><mo stretchy="false">{</mo><mi>E</mi><mo stretchy="false">}</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\Pi_1=\{\left\{A,B,C\right\},\{D\},\{E\}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">}}</span></span></span></span></p>
<p>考察<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>C</mi><msub><mo stretchy="false">}</mo><mi>b</mi></msub><mo>=</mo><mo stretchy="false">{</mo><mi>C</mi><mo separator="true">,</mo><mi>D</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{A,B,C\}_b=\{C,D\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">}</span></span></span></span>, 需要划分, 其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>A</mi><mo separator="true">,</mo><mi>C</mi><msub><mo stretchy="false">}</mo><mi>b</mi></msub><mo>=</mo><mo stretchy="false">{</mo><mi>C</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{A,C\}_b=\{C\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">}</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>B</mi><msub><mo stretchy="false">}</mo><mi>b</mi></msub><mo>=</mo><mo stretchy="false">{</mo><mi>D</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{B\}_b=\{D\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">}</span></span></span></span></p>
<p>将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{A,B,C\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">}</span></span></span></span>分为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>A</mi><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{A,C\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">}</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>B</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{B\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">}</span></span></span></span>, 得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mn>2</mn></msub><mo>=</mo><mo stretchy="false">{</mo><mrow><mo fence="true">{</mo><mi>A</mi><mo separator="true">,</mo><mi>C</mi><mo fence="true">}</mo></mrow><mo separator="true">,</mo><mo stretchy="false">{</mo><mi>B</mi><mo stretchy="false">}</mo><mo separator="true">,</mo><mo stretchy="false">{</mo><mi>D</mi><mo stretchy="false">}</mo><mo separator="true">,</mo><mo stretchy="false">{</mo><mi>E</mi><mo stretchy="false">}</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\Pi_2=\{\left\{A,C\right\},\{B\},\{D\},\{E\}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">}}</span></span></span></span></p>
<h3 id="正规文法和-fa-的关系"><a class="header-anchor-1" href="#正规文法和-fa-的关系">#</a>正规文法和 FA 的关系</h3>
<p>FA 和左(右)线性正规文法等价</p>
<p>将 FA 的状态和右线性正规文法的非终结符作为桥梁, 两者等价</p>
<h2 id="词法分析器的自动生成"><a class="header-anchor-1" href="#词法分析器的自动生成">#</a>词法分析器的自动生成</h2>
<p>略</p>
]]></content>
      <categories>
        <category>compiler-principle</category>
      </categories>
  </entry>
  <entry>
    <title>编译原理课程笔记 - Chapter 2 语法分析</title>
    <url>/2020/12/17/note2-parser/</url>
    <content><![CDATA[<h2 id="提纲"><a class="header-anchor-1" href="#提纲">#</a>提纲</h2>
<p><img src="index1.png" alt="" /></p>
<p><img src="index2.png" alt="" /></p>
<h2 id="语法分析方法"><a class="header-anchor-1" href="#语法分析方法">#</a>语法分析方法</h2>
<ul>
<li>自上而下分析
<ul>
<li>LL(1)分析法</li>
<li>递归下降分析法</li>
<li>预测分析法</li>
</ul>
</li>
<li>自下而上分析
<ul>
<li>算符优先分析法</li>
<li>LR 分析法
<ul>
<li>LR(0)</li>
<li>SLR</li>
<li>LR(1)</li>
<li>LALR</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="ll-1"><a class="header-anchor-1" href="#ll-1">#</a>LL(1)</h2>
<h3 id="左递归消除"><a class="header-anchor-1" href="#左递归消除">#</a>左递归消除</h3>
<p>一个文法含有下列形式的产生式时, 称为左递归文法, 不能采用自顶向下分析法</p>
<ol>
<li>
<p>直接递归</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>A</mi><mi>β</mi><mo separator="true">,</mo><mi>A</mi><mo>∈</mo><msub><mi>V</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">A\rightarrow A\beta, A\in V_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span></span></span></span>V*</p>
</li>
<li>
<p>间接递归</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>B</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">A\rightarrow B\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">Bβ</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>→</mo><mi>A</mi><mi>α</mi><mo separator="true">,</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo>∈</mo><msub><mi>V</mi><mi>N</mi></msub><mo separator="true">,</mo><mi>α</mi><mo separator="true">,</mo><mi>β</mi><mo>∈</mo><msup><mi>V</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">B\rightarrow A\alpha, A,B\in V_N, \alpha, \beta\in V^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span></p>
</li>
</ol>
<p><strong>左递归消除</strong></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>→</mo><mi>P</mi><msub><mi>α</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><mi>P</mi><msub><mi>α</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">∣</mi><mi>P</mi><msub><mi>α</mi><mi>m</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">P\rightarrow P\alpha_1|P\alpha_2|...|P\alpha_m|\beta_1|\beta_2|...|\beta_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣...∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣...∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>改写为</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>→</mo><msub><mi>β</mi><mn>1</mn></msub><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mn>2</mn></msub><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mi>n</mi></msub><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">P\rightarrow\beta_1 P&#x27;|\beta_2 P&#x27;|...|\beta_n P&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣...∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>→</mo><msub><mi>α</mi><mn>1</mn></msub><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mn>2</mn></msub><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mi>m</mi></msub><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi>ε</mi></mrow><annotation encoding="application/x-tex">P&#x27;\rightarrow\alpha_1 P&#x27;|\alpha_2 P&#x27;|...|\alpha_m P&#x27;|\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣...∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">ε</span></span></span></span></p>
<h3 id="first-follow"><a class="header-anchor-1" href="#first-follow">#</a>FIRST, FOLLOW</h3>
<p>终结首符集: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>a</mi><mi mathvariant="normal">∣</mi><mi>α</mi><msup><mo>⇒</mo><mo>∗</mo></msup><mi>a</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>a</mi><mo>∈</mo><msub><mi>V</mi><mi>T</mi></msub><mo stretchy="false">}</mo><mo separator="true">,</mo><mspace linebreak="newline"></mspace><mtext>特别地</mtext><mo separator="true">,</mo><mtext>如果</mtext><mi>α</mi><msup><mo>⇒</mo><mo>∗</mo></msup><mi>ε</mi><mo separator="true">,</mo><mtext>则规定</mtext><mi>ε</mi><mo>∈</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(\alpha)=\{a|\alpha\Rightarrow^*a...,a\in V_T\}, \\特别地, 如果\alpha\Rightarrow^*\varepsilon, 则规定\varepsilon\in FIRST(\alpha)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⇒</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mpunct">,</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8831em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">特别地</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">如果</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⇒</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ε</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">则规定</span><span class="mord mathnormal">ε</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span></p>
<p>后继终结符号集: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>a</mi><mi mathvariant="normal">∣</mi><mi>S</mi><msup><mo>⇒</mo><mo>∗</mo></msup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>A</mi><mi>a</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>a</mi><mo>∈</mo><msub><mi>V</mi><mi>T</mi></msub><mo stretchy="false">}</mo><mo separator="true">,</mo><mspace linebreak="newline"></mspace><mtext>特别地</mtext><mo separator="true">,</mo><mtext>如果</mtext><mi>S</mi><msup><mo>⇒</mo><mo>∗</mo></msup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>A</mi><mo separator="true">,</mo><mtext>则规定</mtext><mi mathvariant="normal">#</mi><mo>∈</mo><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FOLLOW(A)=\{a|S\Rightarrow^*...Aa...,a\in V_T\}, \\特别地, 如果S\Rightarrow^*...A, 则规定\#\in FOLLOW(S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⇒</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">...</span><span class="mord mathnormal">A</span><span class="mord mathnormal">a</span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mpunct">,</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8831em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">特别地</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">如果</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⇒</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">...</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">则规定</span><span class="mord">#</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span></p>
<h3 id="ll-1-文法"><a class="header-anchor-1" href="#ll-1-文法">#</a>LL(1)文法</h3>
<p>可以进行无回溯的自上而下分析</p>
<ul>
<li>不含左递归</li>
<li>产生式右侧的所有非终结符的 FIRST 集无交集
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><msub><mi>α</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mi>n</mi></msub><mo>⇒</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>α</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>∩</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>α</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">Φ</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>i</mi><mo mathvariant="normal">≠</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A\rightarrow\alpha_1|\alpha_2|...|\alpha_n\Rightarrow FIRST(\alpha_i)\cap FIRST(\alpha_j)=\Phi, (i\neq j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣...∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Φ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span></li>
</ul>
</li>
<li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi><mo>∈</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\varepsilon\in FIRST(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">ε</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span>, 则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">Φ</mi></mrow><annotation encoding="application/x-tex">FIRST(A)\cap FOLLOW(A)=\Phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Φ</span></span></span></span></li>
</ul>
<h3 id="ll-1-分析方法"><a class="header-anchor-1" href="#ll-1-分析方法">#</a>LL(1)分析方法</h3>
<ul>
<li>当前输入符号为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>, 要匹配一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>, 且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><msub><mi>α</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">A\rightarrow\alpha_1|\alpha_2|...|\alpha_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣...∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
<li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>∈</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>α</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a\in FIRST(\alpha_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)集合, 则直接匹配<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><msub><mi>α</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A\rightarrow\alpha_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
<li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi><mo>∈</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\varepsilon\in FIRST(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">ε</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span>, 但是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>∈</mo><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a\in FOLLOW(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span>中, 仍可以匹配</li>
<li>否则报错</li>
</ul>
<h3 id="ll-1-程序构造"><a class="header-anchor-1" href="#ll-1-程序构造">#</a>LL(1)程序构造</h3>
<h4 id="递归下降程序"><a class="header-anchor-1" href="#递归下降程序">#</a>递归下降程序</h4>
<ul>
<li>每个递归过程对应一个非终结符</li>
</ul>
<h4 id="预测分析程序"><a class="header-anchor-1" href="#预测分析程序">#</a>预测分析程序</h4>
<p>使用分析表和符号栈实现 LL(1)分析</p>
<p>需要预先构造分析表</p>
<p>略</p>
<h2 id="规范规约"><a class="header-anchor-1" href="#规范规约">#</a>规范规约</h2>
<p><strong>短语</strong>:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>对于文法</mtext><mi>G</mi><mo separator="true">,</mo><mtext>开始符号</mtext><mi>S</mi><mo separator="true">,</mo><mtext>若</mtext><mi>α</mi><mi>β</mi><mi>δ</mi><mtext>是一个句型</mtext><mo separator="true">,</mo><mtext>如果</mtext><mi>S</mi><msup><mo>⇒</mo><mo>∗</mo></msup><mi>α</mi><mi>A</mi><mi>δ</mi><mtext>且</mtext><mi>A</mi><msup><mo>⇒</mo><mo>+</mo></msup><mi>β</mi><mo separator="true">,</mo><mtext>则称</mtext><mi>β</mi><mtext>是句型</mtext><mi>α</mi><mi>β</mi><mi>δ</mi><mtext>相对于</mtext><mi>A</mi><mtext>的短语</mtext></mrow><annotation encoding="application/x-tex">对于文法G, 开始符号S, 若\alpha\beta\delta是一个句型, 如果S\Rightarrow^*\alpha A\delta且A\Rightarrow^+\beta, 则称\beta是句型\alpha\beta\delta相对于A的短语</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">对于文法</span><span class="mord mathnormal">G</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">开始符号</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">若</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord cjk_fallback">是一个句型</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">如果</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⇒</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7713em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord cjk_fallback">且</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⇒</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">则称</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mord cjk_fallback">是句型</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord cjk_fallback">相对于</span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">的短语</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>句型语法树中每棵子树的所有叶子结点左右到右排列起来构成一个该句型相对于子树根</mtext><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mtext>的短语</mtext></mrow><annotation encoding="application/x-tex">句型语法树中每棵子树的所有叶子结点左右到右排列起来构成一个该句型相对于子树根(A)的短语</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">句型语法树中每棵子树的所有叶子结点左右到右排列起来构成一个该句型相对于子树根</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mord cjk_fallback">的短语</span></span></span></span></li>
</ul>
<p><strong>直接短语</strong>:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>⇒</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">A\Rightarrow\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>只有父子两代的子树形成的短语</mtext><mo separator="true">,</mo><mtext>一步推导出终结符的子树</mtext></mrow><annotation encoding="application/x-tex">只有父子两代的子树形成的短语, 一步推导出终结符的子树</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">只有父子两代的子树形成的短语</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">一步推导出终结符的子树</span></span></span></span></li>
</ul>
<p><strong>句柄</strong>:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>一个句型的最左直接短语</mtext></mrow><annotation encoding="application/x-tex">一个句型的最左直接短语</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">一个句型的最左直接短语</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>语法树中最左的只有父子两代的子树形成的短语</mtext></mrow><annotation encoding="application/x-tex">语法树中最左的只有父子两代的子树形成的短语</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">语法树中最左的只有父子两代的子树形成的短语</span></span></span></span></li>
</ul>
<p><img src="phrase.png" alt="" /></p>
<p>句型<code>E+T*F</code>的</p>
<ul>
<li>短语为<code>E+T*F</code>(相对于 E), <code>T*F</code>(相对于 T)</li>
<li>直接短语为<code>T*F</code></li>
<li>句柄为<code>T*F</code></li>
</ul>
<h2 id="算符优先分析法"><a class="header-anchor-1" href="#算符优先分析法">#</a>算符优先分析法</h2>
<h3 id="算符优先文法"><a class="header-anchor-1" href="#算符优先文法">#</a>算符优先文法</h3>
<p>算符文法: 任一产生式的右部都不包含两个<strong>相继(并列)的非终结符</strong></p>
<p>最多一个优先关系: 对任何一对终结符, (a,b)最多满足一个优先关系</p>
<p>算符优先文法: 满足最多一个优先关系的算符文法</p>
<h3 id="优先关系表"><a class="header-anchor-1" href="#优先关系表">#</a>优先关系表</h3>
<p>优先关系的表格</p>
<h3 id="firstvt-lastvt"><a class="header-anchor-1" href="#firstvt-lastvt">#</a>FIRSTVT, LASTVT</h3>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mi>V</mi><mi>T</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>a</mi><mi mathvariant="normal">∣</mi><mi>P</mi><msup><mo>⇒</mo><mo>+</mo></msup><mi>a</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mtext>或</mtext><mi>P</mi><msup><mo>⇒</mo><mo>+</mo></msup><mi>Q</mi><mi>a</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>a</mi><mo>∈</mo><msub><mi>V</mi><mi>T</mi></msub><mtext>而</mtext><mi>Q</mi><mo>∈</mo><msub><mi>V</mi><mi>N</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">FIRSTVT(P)=\{a|P\Rightarrow^+a...或P\Rightarrow^+Qa..., a\in V_T而Q\in V_N\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0213em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⇒</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7713em;"></span><span class="mord mathnormal">a</span><span class="mord">...</span><span class="mord cjk_fallback">或</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⇒</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mord mathnormal">a</span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">而</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>A</mi><mi>S</mi><mi>T</mi><mi>V</mi><mi>T</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>a</mi><mi mathvariant="normal">∣</mi><mi>P</mi><msup><mo>⇒</mo><mo>+</mo></msup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>a</mi><mtext>或</mtext><mi>P</mi><msup><mo>⇒</mo><mo>+</mo></msup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>Q</mi><mi>a</mi><mo separator="true">,</mo><mi>a</mi><mo>∈</mo><msub><mi>V</mi><mi>T</mi></msub><mtext>而</mtext><mi>Q</mi><mo>∈</mo><msub><mi>V</mi><mi>N</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">LASTVT(P)=\{a|P\Rightarrow^+...a或P\Rightarrow^+...Qa, a\in V_T而Q\in V_N\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">ST</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0213em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⇒</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7713em;"></span><span class="mord">...</span><span class="mord mathnormal">a</span><span class="mord cjk_fallback">或</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⇒</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">...</span><span class="mord mathnormal">Q</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">而</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p>
<h3 id="素短语"><a class="header-anchor-1" href="#素短语">#</a>素短语</h3>
<p>素短语: 至少含有一个终结符, 而且除它自身以外不含有任何更小的素短语</p>
<p>最左素短语: 句型最左边的素短语</p>
<h2 id="lr-分析法"><a class="header-anchor-1" href="#lr-分析法">#</a>LR 分析法</h2>
<p>L: 从左到右扫描输入串
R: 构造最右推导的逆过程
LR 分析法是严格的规范规约</p>
<p>原理: 在移进-规约过程中寻找句柄</p>
<p>模型:</p>
<ul>
<li>将历史和展望抽象成状态, 整体上是一个 FA</li>
<li>一张分析表
<ul>
<li>ACTION[s,a]: 状态 s 遇到输入 a 应该采取什么动作</li>
<li>GOTO[s,X]: 状态 s 遇到文法符号 X 时下一状态是什么, 构成了一个以文法符号为字母表的 DFA</li>
</ul>
</li>
</ul>
<p>分类:</p>
<ul>
<li>总控程序: 所有的 LR 分析器都相同</li>
<li>分析表: 是自动生成语法分析器的关键
<ul>
<li>LR(0)表: 基础但有局限性</li>
<li>SLR 表: 简单 LR 表, 实用</li>
<li>规范 LR 表: 能力强, 代价大</li>
<li>LALR 表: 向前 LR 表, 介于 SLR 和规范 LR 之间</li>
</ul>
</li>
</ul>
<p>ACTION 表:</p>
<ol>
<li>移进<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">sN</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>: 将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>和输入符号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>进栈, 读取下一个输入</li>
<li>规约<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">rN</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>: 用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>号产生式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>⇒</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">A\Rightarrow\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span>进行规约, 出栈<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>β</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|\beta|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mord">∣</span></span></span></span>项, 将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mi>O</mi><mi>T</mi><mi>O</mi><mo stretchy="false">[</mo><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>o</mi><mi>p</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">GOTO[s.top, A]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">GOTO</span><span class="mopen">[</span><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">]</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>进栈(规约), <strong>输入不动</strong></li>
<li>接受<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>c</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">acc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">cc</span></span></span></span>: 分析成功结束</li>
<li>报错</li>
</ol>
<p>LR 文法: 能够构造 LR 分析表, 使得每个入口都是唯一确定的文法</p>
<p>LR(k)文法: 每步至多向前检查 k 个输入符号就能用 LR 分析器进行分析的文法</p>
<ul>
<li>大多数 PL 符合 LR(1)文法</li>
<li>k=0 表示不需要展望</li>
</ul>
<h3 id="lr-0"><a class="header-anchor-1" href="#lr-0">#</a>LR(0)</h3>
<p>LR(0)项目: 在文法产生式右部中间间隔处加一个圆点</p>
<ul>
<li>指明了在分析过程的某一时刻看到了产生式的多大部分</li>
</ul>
<p>活前缀: 规范句型的最多到句柄(可以包括句柄)的前缀</p>
<ul>
<li>LR 分析时栈里的符号应该始终构成活前缀</li>
</ul>
<h4 id="1-识别活前缀的-nfa-方法"><a class="header-anchor-1" href="#1-识别活前缀的-nfa-方法">#</a>1. 识别活前缀的 NFA 方法</h4>
<ul>
<li>
<p>只有项目 1 作为初态, 其他任何项目都认为是终态</p>
</li>
<li>
<p>连接非<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi></mrow><annotation encoding="application/x-tex">\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ε</span></span></span></span>弧</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>状态</mtext><mi>i</mi><mtext>为</mtext><mi>X</mi><mo>→</mo><msub><mi>X</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>X</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>⋅</mo><msub><mi>X</mi><mi>i</mi></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>X</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">状态i为X\rightarrow X_1...X_{i-1}\cdot X_i...X_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">状态</span><span class="mord mathnormal">i</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>状态</mtext><mi>j</mi><mtext>为</mtext><mi>X</mi><mo>→</mo><msub><mi>X</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>X</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><msub><mi>X</mi><mi>i</mi></msub><mo>⋅</mo><msub><mi>X</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>X</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">状态j为X\rightarrow X_1...X_{i-1}X_i\cdot X_{i+1}...X_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">状态</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
<li>则连接状态<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>到状态<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>, 标志为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
</ul>
</li>
<li>
<p>连接<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi></mrow><annotation encoding="application/x-tex">\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ε</span></span></span></span>弧</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>状态</mtext><mi>i</mi><mtext>为</mtext><mi>X</mi><mo>→</mo><mi>α</mi><mo>⋅</mo><mi>A</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">状态i为X\rightarrow \alpha\cdot A\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">状态</span><span class="mord mathnormal">i</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></li>
<li>则连接状态<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>到所有状态<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mo>⋅</mo><mi>γ</mi></mrow><annotation encoding="application/x-tex">A\rightarrow\cdot\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.1944em;"></span><span class="mord">⋅</span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span></span></span></span>, 标志为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi></mrow><annotation encoding="application/x-tex">\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ε</span></span></span></span></li>
</ul>
<p><img src="huoqianzhui.png" alt="" /></p>
</li>
<li>
<p>确定化(NFA 转 DFA)</p>
<ul>
<li>(也可以直接看出来)</li>
</ul>
<p><img src="huoqianzhui2.png" alt="" /></p>
</li>
</ul>
<h4 id="2-lr-0-项目集规范族"><a class="header-anchor-1" href="#2-lr-0-项目集规范族">#</a>2. LR(0)项目集规范族</h4>
<ul>
<li>
<p>识别活前缀的 DFA 的项目集的全体称为文法的 LR(0)项目集规范族</p>
<ul>
<li>规约项目: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>α</mi><mo>⋅</mo></mrow><annotation encoding="application/x-tex">A\rightarrow\alpha\cdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">⋅</span></span></span></span></li>
<li>接受项目: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>→</mo><mi>α</mi><mo>⋅</mo></mrow><annotation encoding="application/x-tex">S\rightarrow\alpha\cdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">⋅</span></span></span></span></li>
<li>移进项目: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>α</mi><mo>⋅</mo><mi>a</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">A\rightarrow\alpha\cdot a\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></li>
<li>待约项目: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>α</mi><mo>⋅</mo><mi>B</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">A\rightarrow\alpha\cdot B\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">Bβ</span></span></span></span></li>
</ul>
</li>
<li>
<p>拓广文法</p>
<ul>
<li>构造一个新的文法<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>G</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>⊇</mo><mi>G</mi></mrow><annotation encoding="application/x-tex">G&#x27;\supseteq G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879em;vertical-align:-0.136em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊇</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span></li>
<li>引进一个开始符号, 非终结符<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">S&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></li>
<li>增加一个产生式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>→</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">S&#x27;\rightarrow S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></li>
<li>唯一接受态: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>→</mo><mi>S</mi><mo>⋅</mo></mrow><annotation encoding="application/x-tex">S&#x27;\rightarrow S\cdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">⋅</span></span></span></span></li>
</ul>
</li>
<li>
<p>项目集的闭包<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Closure(I)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">Cl</span><span class="mord mathnormal">os</span><span class="mord mathnormal">u</span><span class="mord mathnormal">re</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span></span>:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo>∈</mo><mi>C</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I\in Closure(I)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">Cl</span><span class="mord mathnormal">os</span><span class="mord mathnormal">u</span><span class="mord mathnormal">re</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span></span></li>
<li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>→</mo><mi>α</mi><mo>⋅</mo><mi>B</mi><mi>β</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>C</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(A\rightarrow\alpha\cdot B\beta)\in Closure(I)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">Bβ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">Cl</span><span class="mord mathnormal">os</span><span class="mord mathnormal">u</span><span class="mord mathnormal">re</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span></span>, 则对于任何<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>→</mo><mi>γ</mi></mrow><annotation encoding="application/x-tex">B\rightarrow\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>B</mi><mo>→</mo><mo>⋅</mo><mi>γ</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>C</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(B\rightarrow\cdot\gamma)\in Closure(I)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">⋅</span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">Cl</span><span class="mord mathnormal">os</span><span class="mord mathnormal">u</span><span class="mord mathnormal">re</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span></span></li>
<li>与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span>同状态的项目集合, 包括子项目</li>
</ul>
</li>
<li>
<p>状态转换函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mi>O</mi><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">GO(I,X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">GO</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mi>O</mi><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mi>C</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><mo stretchy="false">{</mo><mi>A</mi><mo>→</mo><mi>α</mi><mi>X</mi><mo>⋅</mo><mi>β</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">(</mo><mi>A</mi><mo>→</mo><mi>α</mi><mo>⋅</mo><mi>X</mi><mi>β</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>I</mi><mo stretchy="false">}</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">GO(I, X)=Closure(\{A\rightarrow\alpha X\cdot\beta|(A\rightarrow\alpha\cdot X\beta)\in I\})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">GO</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">Cl</span><span class="mord mathnormal">os</span><span class="mord mathnormal">u</span><span class="mord mathnormal">re</span><span class="mopen">({</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mord">∣</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">Xβ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">})</span></span></span></span></li>
<li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span>是对活前缀<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span></span></span></span>有效的项目集, 那么<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mi>O</mi><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">GO(I, X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">GO</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>就是对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi><mi>X</mi></mrow><annotation encoding="application/x-tex">\gamma X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>有效的项目集</li>
<li>(接受<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>之后的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">Closure</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">Cl</span><span class="mord mathnormal">os</span><span class="mord mathnormal">u</span><span class="mord mathnormal">re</span></span></span></span>集合)</li>
</ul>
</li>
<li>
<p>构造 DFA 算法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PROCEDURE ITEMSETS(G&#x27;)</span><br><span class="line">BEGIN</span><br><span class="line">  C:=&#123;Closure(&#123;S&#x27;\rightarrow\cdot S&#125;)&#125;</span><br><span class="line">  REPEAT</span><br><span class="line">    FOR C中每个项目集I和G&#x27;的每个符号X DO</span><br><span class="line">      IF GO(I, X)非空且不属于C THEN</span><br><span class="line">        C += GO(I, X)</span><br><span class="line">  UNTIL C 不再增大</span><br><span class="line">END</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>LR(0)文法:</p>
<ul>
<li>拓广文法的识别活前缀的 dfa 的项目集(LR(0)项目集规范族)不包含任何<strong>冲突</strong>的文法</li>
</ul>
<p>冲突</p>
<ul>
<li>既含移进项目又含规约项目
<ul>
<li><code>E-&gt;E·*E</code></li>
<li><code>E-&gt;E+E·</code></li>
</ul>
</li>
<li>含有多个规约项目
<ul>
<li><code>P-&gt;A·</code></li>
<li><code>Q-&gt;A·</code></li>
</ul>
</li>
</ul>
<p>构造 LR(0)分析表:</p>
<ul>
<li>每个项目集为一个状态</li>
<li>包含<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>→</mo><mo>⋅</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">S&#x27;\rightarrow\cdot S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">⋅</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>的集合为初态</li>
</ul>
<p><strong>构造 LR(0)的 ACTION 和 GOTO</strong>:</p>
<ul>
<li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>→</mo><mi>α</mi><mo>⋅</mo><mi>a</mi><mi>β</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>I</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">(A\rightarrow\alpha\cdot a\beta)\in I_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mi>O</mi><mo stretchy="false">(</mo><msub><mi>I</mi><mi>k</mi></msub><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>I</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">GO(I_k, a)=I_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">GO</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>, 则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>C</mi><mi>T</mi><mi>I</mi><mi>O</mi><mi>N</mi><mo stretchy="false">[</mo><mi>k</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">]</mo><mo>=</mo><mi>s</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">ACTION[k, a]=sj</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">CT</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">ON</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span></li>
<li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>→</mo><mi>α</mi><mo>⋅</mo><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>I</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">(A\rightarrow\alpha\cdot)\in I_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">⋅</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, 则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>C</mi><mi>T</mi><mi>I</mi><mi>O</mi><mi>N</mi><mo stretchy="false">[</mo><mi>k</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">]</mo><mo>=</mo><mi>r</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">ACTION[k, a]=rj</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">CT</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">ON</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span></li>
<li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>→</mo><mi>S</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>I</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">(S&#x27;\rightarrow S)\in I_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, 则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>C</mi><mi>T</mi><mi>I</mi><mi>O</mi><mi>N</mi><mo stretchy="false">[</mo><mi>k</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">]</mo><mo>=</mo><mi>a</mi><mi>c</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">ACTION[k, a]=acc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">CT</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">ON</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">cc</span></span></span></span></li>
<li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mi>O</mi><mo stretchy="false">(</mo><msub><mi>I</mi><mi>k</mi></msub><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>I</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">GO(I_k,A)=I_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">GO</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>, 则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mi>O</mi><mi>T</mi><mi>O</mi><mo stretchy="false">[</mo><mi>k</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">]</mo><mo>=</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">GOTO[k, a]=j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">GOTO</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span></li>
<li>其他均为报错</li>
</ul>
<p><img src="lr0_table.png" alt="" /></p>
<h3 id="slr"><a class="header-anchor-1" href="#slr">#</a>SLR</h3>
<p>LR(0)可能会误判: 即使存在项目冲突, 也不一定不合法</p>
<p>假定 LR(0)规范族的一个项目集</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>I</mi><mo>=</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>A</mi><mn>1</mn></msub><mo>→</mo><mi>α</mi><mo>⋅</mo><msub><mi>a</mi><mn>1</mn></msub><msub><mi>β</mi><mn>1</mn></msub><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>A</mi><mn>2</mn></msub><mo>→</mo><mi>α</mi><mo>⋅</mo><msub><mi>a</mi><mn>2</mn></msub><msub><mi>β</mi><mn>2</mn></msub><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>A</mi><mi>m</mi></msub><mo>→</mo><mi>α</mi><mo>⋅</mo><msub><mi>a</mi><mi>m</mi></msub><msub><mi>β</mi><mi>m</mi></msub><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>B</mi><mn>1</mn></msub><mo>→</mo><mi>α</mi><mo>⋅</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>B</mi><mn>2</mn></msub><mo>→</mo><mi>α</mi><mo>⋅</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>B</mi><mi>n</mi></msub><mo>→</mo><mi>α</mi><mo>⋅</mo><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
I=\{
&amp;A_1\rightarrow\alpha\cdot a_1\beta_1,\\
&amp;A_2\rightarrow\alpha\cdot a_2\beta_2,\\
&amp;...\\
&amp;A_m\rightarrow\alpha\cdot a_m\beta_m,\\
&amp;B_1\rightarrow\alpha\cdot,\\
&amp;B_2\rightarrow\alpha\cdot,\\
&amp;...\\
&amp;B_n\rightarrow\alpha\cdot\}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:12em;vertical-align:-5.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.25em;"><span style="top:-8.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-6.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:0.59em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:2.09em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.25em;"><span style="top:-8.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-6.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord">...</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">⋅</span><span class="mpunct">,</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">⋅</span><span class="mpunct">,</span></span></span><span style="top:0.59em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord">...</span></span></span><span style="top:2.09em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">⋅</span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>如果集合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>a</mi><mi>m</mi></msub><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\{a_1, ..., a_m\}, FOLLOW(B_1), ..., FOLLOW(B_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>两两不相交(包括不得有两个 FOLLOW 集合有#), 则</p>
<ol>
<li>若 a 是某个 ai, i=1,2,…,m, 则移进</li>
<li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>∈</mo><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">a\in FOLLOW(B_i), i=1,2,...,n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span>, 则用产生式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>i</mi></msub><mo>→</mo><mi>α</mi></mrow><annotation encoding="application/x-tex">B_i\rightarrow\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>进行归约</li>
<li>此外, 报错。</li>
</ol>
<p>冲突性动作的这种解决办法叫做 SLR(1)解决办法。上述方法构造出的 ACTION 与 GOTO 表如果不含多重入口，则称该文法为<strong>SLR(1)文法</strong></p>
<h3 id="lr-1"><a class="header-anchor-1" href="#lr-1">#</a>LR(1)</h3>
<h3 id="lalr"><a class="header-anchor-1" href="#lalr">#</a>LALR</h3>
<p>不考, 略</p>
<h2 id="二义文法的应用"><a class="header-anchor-1" href="#二义文法的应用">#</a>二义文法的应用</h2>
<h3 id="二义文法"><a class="header-anchor-1" href="#二义文法">#</a>二义文法</h3>
<ul>
<li>不是 LR 文法</li>
<li>简洁、自然</li>
<li>可以用文法以外的信息来消除二义</li>
<li>语法分析的效率高（基于消除二义后得到的分析表）</li>
</ul>
<p>举例: E → E + E | E * E | (E) | id</p>
<p>消除二义性:</p>
<ol>
<li>使用文法以外信息来解决分析动作冲突</li>
</ol>
]]></content>
      <categories>
        <category>compiler-principle</category>
      </categories>
  </entry>
  <entry>
    <title>编译原理课程笔记 - Chapter 3 语义分析和中间代码生成</title>
    <url>/2020/12/17/note3-ir/</url>
    <content><![CDATA[<h2 id="提纲"><a class="header-anchor-1" href="#提纲">#</a>提纲</h2>
<p><img src="index1.png" alt="" /></p>
<p><img src="index2.png" alt="" /></p>
<h2 id="属性文法和语法制导翻译"><a class="header-anchor-1" href="#属性文法和语法制导翻译">#</a>属性文法和语法制导翻译</h2>
<h3 id="属性文法"><a class="header-anchor-1" href="#属性文法">#</a>属性文法</h3>
<p>属性文法: 在上下文无关文法的基础上给每个文法符号增加若干属性</p>
<p>语义规则: 对于文法的每个产生式配备了<strong>一组</strong>属性的计算规则</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>:</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>c</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>c</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">b:=f(c_1,c_2,...,c_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li>产生式左边的综合属性和右边的继承属性必须提供语义规则</li>
<li>语义规则所描述的工作可以包括属性计算、符号表操作、静态语义检查、代码生成等等。</li>
</ul>
<p>属性加工的过程即是语义处理的过程</p>
<p>属性</p>
<ul>
<li>综合属性: 在语法树中, 通过子节点的属性计算出来的属性(自下而上)</li>
<li>继承属性: 在语法树中, 通过父节点和兄弟节点的属性计算出来的属性(自上而下)</li>
<li>终结符只有综合属性, 有 lexer 提供</li>
</ul>
<h4 id="s-属性文法"><a class="header-anchor-1" href="#s-属性文法">#</a>S-属性文法</h4>
<p>只包含综合属性的文法</p>
<h4 id="l-属性文法"><a class="header-anchor-1" href="#l-属性文法">#</a>L-属性文法</h4>
<p>如果每个产生式 A→X1…Xj-1Xj…Xn 的每条语义规则计算的属性或者是 A 的综合属性；或者是 Xj 的继承属性，但它仅依赖：</p>
<ul>
<li>该产生式中 Xj 左边符号 X1, X2, …, Xj-1 的属性；</li>
<li>A 的继承属性</li>
</ul>
<h3 id="语法制导翻译"><a class="header-anchor-1" href="#语法制导翻译">#</a>语法制导翻译</h3>
<p>语法制导翻译法:</p>
<ul>
<li>基于属性文法的处理过程: <code>输入串-&gt;语法树-&gt;依赖图-&gt;语义规则计算次序</code></li>
<li>由源程序的语法结构所驱动</li>
</ul>
<p>作用</p>
<ul>
<li><strong>产生中间代码</strong></li>
<li>产生目标指令</li>
<li>对输入串进行解释执行</li>
</ul>
<h4 id="依赖图"><a class="header-anchor-1" href="#依赖图">#</a>依赖图</h4>
<p>用 DAG 表示属性依赖关系</p>
<ul>
<li>每个属性一个结点</li>
<li>语义规则中左边属性依赖右边每一个属性</li>
</ul>
<p><img src="dep_tree.png" alt="" /></p>
<ol>
<li>
<p>树遍历法</p>
<ul>
<li>无环图</li>
<li>DFS</li>
<li>从左到右</li>
</ul>
</li>
<li>
<p>一遍扫描法</p>
<ul>
<li>在语法分析的同时计算属性值</li>
<li>S-属性文法适合于一遍扫描的自下而上分析</li>
<li>L-属性文法适合于一遍扫描的自上而下分析</li>
</ul>
</li>
</ol>
<h2 id="语义分析和中间代码生成"><a class="header-anchor-1" href="#语义分析和中间代码生成">#</a>语义分析和中间代码生成</h2>
<h3 id="语义分析"><a class="header-anchor-1" href="#语义分析">#</a>语义分析</h3>
<h3 id="中间语言"><a class="header-anchor-1" href="#中间语言">#</a>中间语言</h3>
<p>中间语言是复杂性界于源语言和目标语言之间的语言</p>
<p>好处:</p>
<ul>
<li>便于进行与机器无关的代码优化工作</li>
<li>易于移植</li>
<li>使编译程序的结构在逻辑上更为简单明确</li>
</ul>
<p>常用的中间语言表示法</p>
<ul>
<li>后缀式(逆波兰式)</li>
<li>图表示
<ul>
<li>DAG</li>
<li>AST</li>
</ul>
</li>
<li>三地址代码
<ul>
<li>三元式</li>
<li>四元式</li>
<li>间接三元式</li>
</ul>
</li>
</ul>
<p>后缀式:</p>
<ul>
<li>二元操作符后置</li>
<li>(一元操作符后置)</li>
<li>去括号</li>
</ul>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">a+b*(c+d/e)</span><br><span class="line">a b*(c+d/e) +</span><br><span class="line">a b (c+d/e) * +</span><br><span class="line">a b c d/e + * +</span><br><span class="line">a b c d e / + * +</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">b:=-c*a+-c*a</span><br><span class="line">b -c*a+-c*a :=</span><br><span class="line">b -c*a -c*a + :=</span><br><span class="line">b -c a * -c a * + :=</span><br><span class="line">b c Neg a * c Neg a * + :=</span><br></pre></td></tr></table></figure>
<p>抽象语法树: 去掉对翻译不必要的信息, 更有效表示源程序的语法树</p>
<p><img src="ast.png" alt="" /></p>
<p>DAG</p>
<ul>
<li>一个内部结点代表一个操作符，它的孩子代表操作数</li>
<li>一个 DAG 中代表<strong>公共子表达式</strong>的结点具有多个父结点</li>
</ul>
<p><img src="dag.png" alt="" /></p>
<p>三地址代码: <code>x:=y op z</code></p>
<ul>
<li>三地址代码可以看成是抽象语法树或 DAG 的一种线性表示</li>
<li>种类
<ul>
<li><code>x:=y op z</code></li>
<li><code>x:=op y</code></li>
<li><code>x:=y</code></li>
<li><code>goto L</code></li>
<li><code>if x rop y goto L</code></li>
<li><code>if a goto L</code></li>
</ul>
</li>
<li>计算机表示
<ul>
<li>四元式</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th>Op</th>
<th>arg1</th>
<th>arg2</th>
<th>result</th>
</tr>
</thead>
<tbody>
<tr>
<td>(0)</td>
<td>uminus</td>
<td>c</td>
<td></td>
<td>T1</td>
</tr>
<tr>
<td>(1)</td>
<td>*</td>
<td>b</td>
<td>T1</td>
<td>T2</td>
</tr>
<tr>
<td>…</td>
<td>…</td>
<td>…</td>
<td>…</td>
<td>…</td>
</tr>
</tbody>
</table>
<ul>
<li>三元式</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th>Op</th>
<th>arg1</th>
<th>arg2</th>
</tr>
</thead>
<tbody>
<tr>
<td>(0)</td>
<td>uminus</td>
<td>c</td>
<td></td>
</tr>
<tr>
<td>(1)</td>
<td>*</td>
<td>b</td>
<td>(0)</td>
</tr>
<tr>
<td>…</td>
<td>…</td>
<td>…</td>
<td>…</td>
</tr>
<tr>
<td>(4)</td>
<td>+</td>
<td>(1)</td>
<td>(3)</td>
</tr>
<tr>
<td>…</td>
<td>…</td>
<td>…</td>
<td>…</td>
</tr>
</tbody>
</table>
<ul>
<li>间接三元式
<ul>
<li>使用间接代码表来压缩存储相同的三元式</li>
<li>好处:
<ul>
<li>调整语句顺序不需要改动三元式表</li>
<li>节省存储空间</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="说明语句的翻译"><a class="header-anchor-1" href="#说明语句的翻译">#</a>说明语句的翻译</h3>
<h3 id="赋值语句的翻译"><a class="header-anchor-1" href="#赋值语句的翻译">#</a>赋值语句的翻译</h3>
<p><img src="assign_example.png" alt="" /></p>
<p>答案:</p>
<p><img src="assign_example_solution.png" alt="" /></p>
<p>三地址代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">T1:=uminus C</span><br><span class="line">T2:=T1+D</span><br><span class="line">T3:=B*T2</span><br><span class="line">A:=T3</span><br></pre></td></tr></table></figure>
<h3 id="布尔表达式的翻译"><a class="header-anchor-1" href="#布尔表达式的翻译">#</a>布尔表达式的翻译</h3>
<p>基本作用:</p>
<ul>
<li>逻辑运算</li>
<li>控制语句条件</li>
</ul>
<p>翻译方法</p>
<ul>
<li>算数方式</li>
<li>短路计算</li>
</ul>
<h4 id="逻辑运算中的布尔表达式翻译"><a class="header-anchor-1" href="#逻辑运算中的布尔表达式翻译">#</a>逻辑运算中的布尔表达式翻译</h4>
<p><img src="bool_example.png" alt="" /></p>
<p>答案:</p>
<p>三地址代码</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">0: if a&gt;b goto 3</span><br><span class="line">1: T1:=0</span><br><span class="line">2: goto 4</span><br><span class="line">3: T1:=1</span><br><span class="line">4: if a&gt;b goto 7</span><br><span class="line">5: T1:=0</span><br><span class="line">6: goto 8</span><br><span class="line">7: T1:=1</span><br><span class="line">8: T3=T1 and T2</span><br></pre></td></tr></table></figure>
<h4 id="条件控制语句中的布尔表达式翻译"><a class="header-anchor-1" href="#条件控制语句中的布尔表达式翻译">#</a>条件控制语句中的布尔表达式翻译</h4>
<p>两种出口: 一真一假</p>
<p>改写产生式</p>
<ul>
<li><code>E -&gt; E and M E</code></li>
<li><code>E -&gt; E or M E</code></li>
<li><code>M -&gt; epsilon</code></li>
</ul>
<p>增加属性</p>
<ul>
<li><code>truelist</code>/<code>falselist</code>: 布尔表达式中需要回填地址的四元式构成的(反向)列表, 从最后的需要回填地址四元式指向更靠前的四元式</li>
<li><code>nextquad</code>: 下一条即将产生的四元式的地址, 如果是 emit 过程中包含那么就是该条语句的地址</li>
</ul>
<p>增加过程</p>
<ul>
<li><code>makelist(i)</code>: 创建一个新链表<code>-&gt;i</code></li>
<li><code>merge(p1,p2)</code>: 合并两个链表</li>
<li><code>backpatch(p,t)</code>: 回填地址</li>
</ul>
<p><img src="bool1.png" alt="" /></p>
<p><img src="bool2.png" alt="" /></p>
<p>例: 写出布尔式 A or (B and not (C or D))的四元式序列</p>
<p>答案:</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">0: jnz,A,-,0</span><br><span class="line">1: j,-,-,2</span><br><span class="line">2: jnz,B,-,4</span><br><span class="line">3: j,-,-,0</span><br><span class="line">4: jnz,C,-,0</span><br><span class="line">5: j,-,-,6</span><br><span class="line">6: jnz,D,-,0</span><br><span class="line">7: j,-,-,0</span><br></pre></td></tr></table></figure>
<h3 id="控制语句的翻译"><a class="header-anchor-1" href="#控制语句的翻译">#</a>控制语句的翻译</h3>
<h4 id="条件语句"><a class="header-anchor-1" href="#条件语句">#</a>条件语句</h4>
<p>改写产生式</p>
<ul>
<li><code>S -&gt; if E then M S</code></li>
<li><code>S -&gt; if E then M S N else M S</code></li>
<li><code>M -&gt; epsilon</code></li>
<li><code>N -&gt; epsilon</code></li>
</ul>
<p>增加属性:</p>
<ul>
<li><code>nextlist</code>: 下一条执行语句的地址, 引入此变量是为了优化连续多次跳转</li>
</ul>
<p><img src="control.png" alt="" /></p>
<h4 id="循环语句-while"><a class="header-anchor-1" href="#循环语句-while">#</a>循环语句(while)</h4>
<p><img src="while.png" alt="" /></p>
<h4 id="语句列表和语句块"><a class="header-anchor-1" href="#语句列表和语句块">#</a>语句列表和语句块</h4>
<p>改写产生式</p>
<ul>
<li><code>L -&gt; L; M S</code></li>
<li><code>M -&gt; epsilon</code></li>
</ul>
<p><img src="list.png" alt="" /></p>
<p><img src="block.png" alt="" /></p>
<h4 id="标号与-goto-语句的翻译"><a class="header-anchor-1" href="#标号与-goto-语句的翻译">#</a>标号与 goto 语句的翻译</h4>
<h4 id="case-语句的翻译"><a class="header-anchor-1" href="#case-语句的翻译">#</a>case 语句的翻译</h4>
<h3 id="过程调用的翻译"><a class="header-anchor-1" href="#过程调用的翻译">#</a>过程调用的翻译</h3>
<p>不考, 略</p>
]]></content>
      <categories>
        <category>compiler-principle</category>
      </categories>
  </entry>
  <entry>
    <title>编译原理课程笔记 - Chapter 4 目标代码生成</title>
    <url>/2020/12/17/note4-codegen/</url>
    <content><![CDATA[<h2 id="目标代码生成"><a class="header-anchor-1" href="#目标代码生成">#</a>目标代码生成</h2>
<h3 id="任务"><a class="header-anchor-1" href="#任务">#</a>任务</h3>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">中间代码 --&gt; 代码生成器 --&gt; 目标程序</span><br><span class="line">                ^</span><br><span class="line">                |</span><br><span class="line">              符号表</span><br></pre></td></tr></table></figure>
<h3 id="目标代码的三种形式"><a class="header-anchor-1" href="#目标代码的三种形式">#</a>目标代码的三种形式</h3>
<ol>
<li>能立即执行的机器码(所有地址已经定位)</li>
<li>待装配的机器语言模块(连接装入后即可执行)</li>
<li>汇编语言代码(经汇编程序汇编后即可执行)</li>
</ol>
<p>此处选择汇编语言</p>
<h3 id="目标机器模型"><a class="header-anchor-1" href="#目标机器模型">#</a>目标机器模型</h3>
<p>此处假设目标计算机:</p>
<ol>
<li>具有多个通用寄存器, 可以用来运算, 也可以用来取地址</li>
<li>支持四种指令形式
<ol>
<li>直接地址型 <code>OP R, M</code> - <code>R OP M =&gt; R</code></li>
<li>寄存器型 <code>OP Ri, Rj</code> - <code>Ri OP Rj =&gt; Ri</code></li>
<li>变址型 <code>OP Ri, c(Rj)</code> - <code>Ri OP (Rj+c) =&gt; Ri</code></li>
<li>间接型
<ol>
<li><code>OP Ri, (M)</code> - <code>R OP (M) =&gt; R</code></li>
<li><code>OP Ri, (Rj)</code> - <code>Ri OP (Rj) =&gt; Ri</code></li>
<li><code>OP Ri, (c(Rj))</code> - <code>Ri OP ((Rj+c)) =&gt; Ri</code></li>
</ol>
</li>
</ol>
</li>
</ol>
<p>OP 可以是 ADD,SUB,MUL,DIV 等</p>
<h3 id="简单代码生成器"><a class="header-anchor-1" href="#简单代码生成器">#</a>简单代码生成器</h3>
<p>思路: 代码生成器在生成每一条指令时, 必须要知道每个寄存器中存储的是什么, 以及每个变量存储到什么位置</p>
<p>方法:</p>
<ol>
<li>引入<strong>待用信息</strong></li>
<li>寄存器描述数组</li>
<li>变量地址描述数组</li>
</ol>
<h3 id="待用信息"><a class="header-anchor-1" href="#待用信息">#</a>待用信息</h3>
<p>待用信息</p>
<ul>
<li>在基本块中, 四元式 i 对 A 定值, 四元式 j 对 A 取值, 且 i,j 之间无再对 A 定值, 则称 j 是 i 的变量 A 的待用信息</li>
</ul>
<p>活跃信息</p>
<ul>
<li>基本块中的一个名字在某个给定点之后仍被引用, 则称该名字在给定点是活跃的</li>
</ul>
<p>修改符号表</p>
<ul>
<li>记录待用信息和活跃信息</li>
<li>表示: (<code>待用信息[i/^]</code>,<code>活跃信息[y/^]</code>)</li>
</ul>
<table>
<thead>
<tr>
<th>变量名</th>
<th>待用/活跃信息栏</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>(…, …)</td>
</tr>
<tr>
<td>B</td>
<td>(…, …)</td>
</tr>
<tr>
<td>…</td>
<td>(…, …)</td>
</tr>
</tbody>
</table>
<p>计算待用和活跃信息</p>
<ol>
<li>开始时, 所有变量均为<code>非待用</code>, 根据基本块之后是否活跃填写<code>活跃</code>或<code>非活跃</code></li>
<li>逆序遍历每个四元式<code>i</code>
<ol>
<li>把<code>A</code>的引用信息附加到四元式<code>i</code>左值上</li>
<li><code>A</code>的引用信息附加<code>(^,^)</code></li>
<li>把<code>B</code>,<code>C</code>的引用信息附加到四元式<code>i</code>上</li>
<li><code>B</code>,<code>C</code>的引用信息附加<code>(^,^)</code></li>
</ol>
</li>
</ol>
<p>例:</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">T1:=B-C</span><br><span class="line">T2:=A*T1</span><br><span class="line">T3:=D+1</span><br><span class="line">T4:=E-F</span><br><span class="line">T5:=T3*T4</span><br><span class="line">W:=T2/T5</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>序号</th>
<th>四元式</th>
<th>左值</th>
<th>左操作数</th>
<th>右操作数</th>
</tr>
</thead>
<tbody>
<tr>
<td>(6)</td>
<td>W:=T2/T5</td>
<td>(^,y)</td>
<td>(<sup>,</sup>)</td>
<td>(<sup>,</sup>)</td>
</tr>
<tr>
<td>(5)</td>
<td>T5:=T3*T4</td>
<td>(6,y)</td>
<td>(<sup>,</sup>)</td>
<td>(<sup>,</sup>)</td>
</tr>
<tr>
<td>(4)</td>
<td>T4:=E-F</td>
<td>(3,y)</td>
<td>(<sup>,</sup>)</td>
<td>(<sup>,</sup>)</td>
</tr>
<tr>
<td>(3)</td>
<td>T3:=D+1</td>
<td>(3,y)</td>
<td>(<sup>,</sup>)</td>
<td>(<sup>,</sup>)</td>
</tr>
<tr>
<td>(2)</td>
<td>T2:=A*T1</td>
<td>(6,y)</td>
<td>(<sup>,</sup>)</td>
<td>(<sup>,</sup>)</td>
</tr>
<tr>
<td>(1)</td>
<td>T1:=B-C</td>
<td>(2,y)</td>
<td>(<sup>,</sup>)</td>
<td>(<sup>,</sup>)</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>变量名</th>
<th>待用/活跃信息栏</th>
</tr>
</thead>
<tbody>
<tr>
<td>T5</td>
<td>(<sup>,</sup>)-&gt;(6,y)-&gt;(<sup>,</sup>)</td>
</tr>
<tr>
<td>T4</td>
<td>(<sup>,</sup>)-&gt;(3,y)-&gt;(<sup>,</sup>)</td>
</tr>
<tr>
<td>T3</td>
<td>(<sup>,</sup>)-&gt;(3,y)-&gt;(<sup>,</sup>)</td>
</tr>
<tr>
<td>T2</td>
<td>(<sup>,</sup>)-&gt;(6,y)-&gt;(<sup>,</sup>)</td>
</tr>
<tr>
<td>T1</td>
<td>(<sup>,</sup>)-&gt;(2,y)-&gt;(<sup>,</sup>)</td>
</tr>
<tr>
<td>W</td>
<td>(<sup>,y)-&gt;(</sup>,^)</td>
</tr>
<tr>
<td>F</td>
<td>(<sup>,</sup>)-&gt;(4,y)</td>
</tr>
<tr>
<td>E</td>
<td>(<sup>,</sup>)-&gt;(4,y)</td>
</tr>
<tr>
<td>D</td>
<td>(<sup>,</sup>)-&gt;(3,y)</td>
</tr>
<tr>
<td>C</td>
<td>(<sup>,</sup>)-&gt;(1,y)</td>
</tr>
<tr>
<td>B</td>
<td>(<sup>,</sup>)-&gt;(1,y)</td>
</tr>
<tr>
<td>A</td>
<td>(<sup>,</sup>)-&gt;(2,y)</td>
</tr>
</tbody>
</table>
<h3 id="寄存器分配算法"><a class="header-anchor-1" href="#寄存器分配算法">#</a>寄存器分配算法</h3>
<p>寄存器描述和地址描述</p>
<ul>
<li>寄存器描述数组<code>RVALUE</code>
<ul>
<li>记录寄存器内存储的变量, 可以是多个</li>
<li><code>RVALUE[R1]=&#123;A,B&#125;</code></li>
</ul>
</li>
<li>变量地址描述数组<code>AVALUE</code>
<ul>
<li>记录变量存储的位置(寄存器/内存)</li>
<li><code>AVALUE[A]=&#123;R1,R2,A&#125;</code></li>
</ul>
</li>
</ul>
<p>代码生成算法</p>
<ul>
<li>对于四元式<code>A:=B op C</code>, 依次执行</li>
</ul>
<ol>
<li>调用<code>GETREG(i: A:=B op C)</code>获取一个寄存器<code>R</code></li>
<li>查询<code>AVALUE[B]</code>和<code>AVALUE[C]</code>, 如果在寄存器中, 假设是<code>B'</code>和<code>C'</code></li>
<li>如果<code>B'≠R</code>, 先把<code>B</code>加载到<code>R</code>中, 生成代码: <code>LD R,B'</code></li>
<li>进行运算, 生成代码: <code>op R,C'</code></li>
<li>更新描述信息
<ol>
<li>如果<code>B'</code>或<code>C'</code>是<code>R</code>, 就要把<code>AVALUE</code>中的记录删除</li>
<li>设置<code>AVALUE[A]=&#123;R&#125;, RVALUE[R]=&#123;A&#125;</code></li>
</ol>
</li>
<li>如果<code>B</code>或<code>C</code>仍存储在某个寄存器中, 但后续不再被引用且不再活跃, 就从<code>AVALUE</code>和<code>RVALUE</code>中删除<code>B</code>和<code>C</code>的记录</li>
</ol>
<p>寄存器分配原则</p>
<ul>
<li>尽可能用 B 独占的寄存器</li>
<li>尽可能用空闲的寄存器</li>
<li>抢占用非空闲寄存器
<ul>
<li><code>Ri</code>的值也存储在内存中</li>
<li><code>Ri</code>最远才会用到</li>
</ul>
</li>
</ul>
<p>寄存器分配算法<code>GETREG(i: A:=B op C)</code></p>
<ol>
<li>
<p>如果 B 独占某个寄存器</p>
<ul>
<li>如果<code>AB</code>是同一个标识符(即修改 B 的指令<code>B:=B op C</code>)
<ul>
<li>返回<code>B</code>所在的寄存器</li>
</ul>
</li>
<li>如果<code>B</code>在后面不会再引用(非待用, 非活跃)
<ul>
<li>返回<code>B</code>所在的寄存器</li>
</ul>
</li>
</ul>
</li>
<li>
<p>如果有空闲寄存器, 返回空闲寄存器</p>
</li>
<li>
<p>抢占一个寄存器<code>Ri</code>,</p>
<ul>
<li>对于<code>Ri</code>中存储的每一个变量<code>M</code>, 如果存储的不是<code>A</code>, 或者存储的是<code>A == C != B</code>且<code>Ri</code>中不存储<code>B</code>.(<code>M==A &amp;&amp; M==C &amp;&amp; M!=B &amp;&amp; B not in RVALUE[Ri]</code>)
<ol>
<li>如果<code>M</code>仅存储在<code>Ri</code>, 则要存到内存中: <code>ST Ri, M</code></li>
<li>如果<code>M == B</code>, 或者<code>M == C &amp;&amp; B in RVALUE[Ri]</code>中, 则令<code>AVALUE[M]=&#123;M,R&#125;</code>, 否则令<code>AVALUE[M]=&#123;M&#125;</code></li>
<li>删除<code>M</code>在<code>Ri</code>中的记录, <code>RVALUE[Ri].reLD e(M)</code></li>
<li>返回<code>R</code></li>
</ol>
</li>
</ul>
</li>
</ol>
<p>例:</p>
<p>寄存器: R0，R1；基本块出口活跃变量: W</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">T1:=B-C</span><br><span class="line">T2:=A*T1</span><br><span class="line">T3:=D+1</span><br><span class="line">T4:=E-F</span><br><span class="line">T5:=T3*T4</span><br><span class="line">W:=T2/T5</span><br></pre></td></tr></table></figure>
<p>答案:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">【解答】该基本块的目标代码如下(指令后面为相应的注释)：</span><br><span class="line">LD  R0, B  <span class="comment">/* 取第一个空闲寄存器 R0 */</span></span><br><span class="line">SUB R0, C  <span class="comment">/* 运算结束后R0中为T1结果，内存中无该结果 */</span></span><br><span class="line">LD  R1, A  <span class="comment">/* 取一个空闲寄存器R1 */</span></span><br><span class="line">MUL R1, R0 <span class="comment">/* 运算结束后R1中为T2结果，内存中无该结果 */</span></span><br><span class="line">LD  R0,D  <span class="comment">/* 此时R0中结果T1已经没有引用点，且临时单元T1是非活跃的，所以，寄存器R0可作为空闲寄存器使用 */</span></span><br><span class="line">ADD R0, <span class="number">1</span> <span class="comment">/* 运算结束后R0中为T3结果，内存中无该结果 */</span></span><br><span class="line">ST  R1, T2  <span class="comment">/*翻译四元式T4=E-F时，所有寄存器已经分配完毕，寄存器R0中存的T3和寄存器R1中存的T2都是有用的。由于T2的下一个引用点较T3的下一个引用点更远，所以暂时可将寄存器R1中的结果存回到内存的变量T2中，从而将寄存器R1空闲以备使用*/</span></span><br><span class="line">LD  R1, E</span><br><span class="line">SUB R1, F  <span class="comment">/*运算结束后R1中为T4结果，内存中无该结果*/</span></span><br><span class="line">MUL R0, R1 <span class="comment">/*运算结束后R0中为T5结果，内存中无该结果。注意，该指令将寄存器R0中原来的结果T3冲掉了。可以这么做的原因是，T3在该指令后不再有引用点，且是非活跃变量*/</span></span><br><span class="line">LD  R1, T2 <span class="comment">/*此时R1中结果T4已经没有引用点，且临时单元T4是非活跃的，因此寄存器R1可作为空闲寄存器使用*/</span></span><br><span class="line">DIV R1, R0</span><br><span class="line"><span class="comment">/*运算结束后R1中为W结果，内存中无该结果。此时所有指令部分已经翻译完毕*/</span></span><br><span class="line">ST  R1, W</span><br><span class="line"><span class="comment">/*指令翻译完毕时，寄存器中存有最新的计算结果，必须将它们存回到内存相应的单元中去，否则，在翻译下一个基本块时，所有的寄存器被当成空闲的寄存器使用，从而造成计算结果的丢失。考虑到寄存器R0中的T5和寄存器R1中的W，临时单元T5是非活跃的，因此只要将结果W存回对应单元即可*/</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>compiler-principle</category>
      </categories>
  </entry>
  <entry>
    <title>编译原理课程笔记 - Chapter 5 优化</title>
    <url>/2020/12/17/note5-profile/</url>
    <content><![CDATA[<h2 id="提纲"><a class="header-anchor-1" href="#提纲">#</a>提纲</h2>
<p><img src="index.png" alt="" /></p>
<h2 id="概述"><a class="header-anchor-1" href="#概述">#</a>概述</h2>
<p>优化：对程序进行各种等价变换，使得从变换后的程序出发，能生成更有效的目标代码。</p>
<p>原则</p>
<ul>
<li>等价</li>
<li>有效</li>
<li>合算</li>
</ul>
<p>级别</p>
<ul>
<li>局部优化</li>
<li>循环优化</li>
<li>全局优化</li>
</ul>
<p>种类</p>
<ul>
<li>删除公用子表达式</li>
<li>复写传播</li>
<li>删除无用赋值</li>
<li>代码外提</li>
<li>强度削弱</li>
<li>变换循环控制条件</li>
<li>合并已知量</li>
</ul>
<h2 id="局部优化"><a class="header-anchor-1" href="#局部优化">#</a>局部优化</h2>
<h3 id="基本块"><a class="header-anchor-1" href="#基本块">#</a>基本块</h3>
<p>基本块</p>
<ul>
<li>指程序中一顺序执行语句序列，其中只有一个入口和一个出口。入口就是其中第一个语句，出口就是其中最后一个语句。</li>
</ul>
<p>活跃</p>
<ul>
<li>基本块中的一个名字在某个给定点之后仍被引用, 则称该名字在给定点是活跃的</li>
</ul>
<p>局部优化</p>
<ul>
<li>局限在基本块范围内的优化</li>
</ul>
<p>划分基本块</p>
<ul>
<li>基本块入口
<ul>
<li>程序第一条语句</li>
<li><strong>能</strong>转移到的语句</li>
<li>转移语句后面的语句</li>
</ul>
</li>
<li>基本块的出口(包括)
<ul>
<li>基本块入口的前一条语句</li>
<li>转移语句(包括)</li>
<li>停语句(包括)</li>
</ul>
</li>
<li>不在基本块中的语句可以从程序中删除</li>
</ul>
<p><img src="basic_block.png" alt="" /></p>
<p>基本块中的优化</p>
<ul>
<li>删除公用子表达式</li>
<li>删除无用赋值</li>
<li>合并已知量: <code>T1=2; T2=4*T1;</code> =&gt; <code>T2=8;</code></li>
<li>临时变量改名</li>
<li>交换语句的位置</li>
<li>代数变换: 删除<code>x=x+0; x=x*1;</code>, <code>x=y^2;</code> =&gt; <code>x=y*y;</code></li>
</ul>
<h3 id="流图"><a class="header-anchor-1" href="#流图">#</a>流图</h3>
<ul>
<li>把基本块编号后按执行顺序连接成一张图</li>
<li>入口语句是流图的首结点</li>
</ul>
<p>前驱和后继</p>
<ul>
<li>在程序序列中, 若 A,B 相邻而且 A 最后一条语句不是无条件跳转, 则称 A 是 B 的前驱, B 为 A 的后继</li>
</ul>
<p><img src="program_flow.png" alt="" /></p>
<h3 id="基本块的-dag-表示"><a class="header-anchor-1" href="#基本块的-dag-表示">#</a>基本块的 DAG 表示</h3>
<ul>
<li>用带有标记或附加信息的 DAG 来表示变量间的关系</li>
<li>叶结点: 以<strong>标识符或常数</strong>作为标记</li>
<li>内部结点: 以<strong>运算符</strong>作为标记</li>
<li>每个结点可以有<strong>附加标识符</strong>: 表示附加标识符具有相同的值</li>
</ul>
<h3 id="基本块的-dag-优化算法"><a class="header-anchor-1" href="#基本块的-dag-优化算法">#</a>基本块的 DAG 优化算法</h3>
<p>基本块代码分类</p>
<ul>
<li>0 型: 单纯赋值语句<code>A:=B</code></li>
<li>1 型: 一元运算赋值<code>A:=op B</code></li>
<li>2 型: 二元运算赋值<code>A:=B op C</code>/数组取值赋值<code>A:=B[C]</code></li>
</ul>
<p>对基本块中每一四元式，依次执行以下步骤:</p>
<ol>
<li>如果是 0 型, 记<code>NODE(B)</code>的值为<code>n</code>, 转 4</li>
<li>如果存在任意一个操作数无定义, 则构造该操作数结点</li>
<li>如果所有操作数都是常数
<ol>
<li>如果<code>NODE(B)</code>(或<code>NODE(C)</code>)是新构造的结点, 删除</li>
<li>计算<code>op</code>, 记为<code>P</code></li>
<li>如果<code>NODE(P)</code>无定义, 构造之, 记为<code>n</code></li>
</ol>
</li>
<li>否则
<ol>
<li>检查 DAG 中是否已经存在结点<code>op</code>, 如果没有则构造之, 记为<code>n</code></li>
</ol>
</li>
<li>删除无用赋值
<ol>
<li>如果<code>A</code>已经在某个结点处定义, 删除之, 把<code>A</code>附在<code>n</code>结点上, 令<code>NODE(A)=n</code></li>
</ol>
</li>
</ol>
<p>DAG 优化算法</p>
<ul>
<li>执行上述算法</li>
<li>在基本块外被定值的标识符作为叶子结点上的标识符</li>
<li>在基本块内被定值且在基本块后被引用的标识符作为结点上的附加标识符</li>
</ul>
<h2 id="循环优化"><a class="header-anchor-1" href="#循环优化">#</a>循环优化</h2>
<p>不考, 略</p>
]]></content>
      <categories>
        <category>compiler-principle</category>
      </categories>
  </entry>
  <entry>
    <title>现代编译原理 阅读记录</title>
    <url>/2024/04/30/tiger-book/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>compiler-principle</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
      </tags>
  </entry>
  <entry>
    <title>ARP协议</title>
    <url>/2021/10/20/arp-protocol/</url>
    <content><![CDATA[<h2 id="arp-协议"><a class="header-anchor-1" href="#arp-协议">#</a>ARP 协议</h2>
<p>ARP 协议的全称是 Address Resolution Protocol(地址解析协议)，它是一个通过解析网络层地址来找寻数据链路层地址的网络传输协议，它在 IPv4 中<strong>极其重要</strong>。是 IPv4 能够正常工作的基础。</p>
<p>ARP 协议与 IP 协议一样，位于网络层，ARP 报文在以太网帧结构中的帧类型字段为<code>0x0806</code></p>
<p>在 IPv6 中邻居发现协议（NDP）用于代替地址解析协议（ARP）。</p>
<h3 id="arp-报文格式"><a class="header-anchor-1" href="#arp-报文格式">#</a>ARP 报文格式</h3>
<p>以太网首部：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">ether_hdr</span> &#123;</span><br><span class="line">    <span class="type">uint8_t</span> target_mac[<span class="number">6</span>];</span><br><span class="line">    <span class="type">uint8_t</span> sender_mac[<span class="number">6</span>];</span><br><span class="line">    <span class="type">uint16_t</span> ptype; <span class="comment">/* equal to 0x0806 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>ARP 报文：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">arp_hdr</span> &#123;</span><br><span class="line">    <span class="type">uint16_t</span> htype;</span><br><span class="line">    <span class="type">uint16_t</span> ptype;</span><br><span class="line">    <span class="type">uint8_t</span> hlen;</span><br><span class="line">    <span class="type">uint8_t</span> plen;</span><br><span class="line">    <span class="type">uint16_t</span> opcode;</span><br><span class="line">    <span class="type">uint8_t</span> sender_mac[<span class="number">6</span>];</span><br><span class="line">    <span class="type">uint8_t</span> sender_ip[<span class="number">4</span>];</span><br><span class="line">    <span class="type">uint8_t</span> target_mac[<span class="number">6</span>];</span><br><span class="line">    <span class="type">uint8_t</span> target_ip[<span class="number">4</span>];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="arp-表"><a class="header-anchor-1" href="#arp-表">#</a>ARP 表</h3>
<p>在每台安装有 TCP/IP 协议的电脑或路由器里都有一个 ARP 缓存表，表里的 IP 地址与 MAC 地址是一对应的，表中的每一行表示在<strong>当前局域网</strong>中，拥有<code>IP地址</code>的设备的 MAC 地址是<code>MAC地址</code>，如下表所示。</p>
<table>
<thead>
<tr>
<th>主机名称</th>
<th>IP 地址</th>
<th>MAC 地址</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>192.168.38.10</td>
<td>00-AA-00-62-D2-02</td>
</tr>
<tr>
<td>B</td>
<td>192.168.38.11</td>
<td>00-BB-00-62-C2-02</td>
</tr>
<tr>
<td>C</td>
<td>192.168.38.12</td>
<td>00-CC-00-62-C2-02</td>
</tr>
<tr>
<td>D</td>
<td>192.168.38.13</td>
<td>00-DD-00-62-C2-02</td>
</tr>
<tr>
<td>E</td>
<td>192.168.38.14</td>
<td>00-EE-00-62-C2-02</td>
</tr>
<tr>
<td>…</td>
<td>…</td>
<td>…</td>
</tr>
</tbody>
</table>
<p>ARP 缓存表采用老化机制，在一段时间内如果表中的某一行没有使用，就会被删除，这样可减少缓存表的长度，加快查询速度。</p>
<h3 id="arp-流程"><a class="header-anchor-1" href="#arp-流程">#</a>ARP 流程</h3>
<ol>
<li>
<p>当发送数据时，主机 A 会在自己的 ARP 缓存表中寻找是否有目标 IP 地址。如果找到就知道目标 MAC 地址为（00-BB-00-62-C2-02），直接把目标 MAC 地址写入帧里面发送就可。</p>
</li>
<li>
<p>如果在 ARP 缓存表中没有找到相对应的 IP 地址，主机 A 就会在网络上发送一个广播（ARP request），目标 MAC 地址是“FF.FF.FF.FF.FF.FF”，这表示向同一网段内的所有主机发出这样的询问：“192.168.38.11 的 MAC 地址是什么？”</p>
</li>
<li>
<p>网络上其他主机并不响应 ARP 询问，只有主机 B 接收到这个帧时，才向主机 A 做出这样的回应（ARP response）：“192.168.38.11 的 MAC 地址是 00-BB-00-62-C2-02”，此回应以单播方式。这样，主机 A 就知道主机 B 的 MAC 地址，它就可以向主机 B 发送信息。同时它还更新自己的 ARP 高速缓存（ARP cache），下次再向主机 B 发送信息时，直接从 ARP 缓存表里查找就可。</p>
</li>
</ol>
<h3 id="免费-arp"><a class="header-anchor-1" href="#免费-arp">#</a>免费 ARP</h3>
<p>免费 ARP（gratuitous ARP）是指主机发送 ARP 查询（广播）自己的 IP 地址，当 ARP 功能被开启或者是端口初始配置完成，主机向网络发送免费 ARP 来查询自己的 IP 地址确认地址唯一可用。</p>
<p>作用：</p>
<ol>
<li>
<p>确定网络中是否有其他主机使用了 IP 地址，如果有应答则产生错误消息。</p>
</li>
<li>
<p>免费 ARP 可以做更新 ARP 缓存用，网络中的其他主机收到该广播则在缓存中更新条目，收到该广播的主机无论是否存在与 IP 地址相关的条目都会强制更新，如果存在旧条目则会将 MAC 更新为广播包中的 MAC。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>computer-networking</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
        <tag>基础架构</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络课程笔记</title>
    <url>/2021/01/05/computer-networking-notes/</url>
    <content><![CDATA[<h2 id="按章节"><a class="header-anchor-1" href="#按章节">#</a>按章节</h2>
<h3 id="1-9-osi-七层模型"><a class="header-anchor-1" href="#1-9-osi-七层模型">#</a>1.9 OSI 七层模型</h3>
<p>设计者: 国际标准化组织 ISO, 国际电信联盟 ITU</p>
<p>OSI 七层模型: 物理层/数据链路层/网络层/传输层/会话层/表示层/应用层</p>
<p>TCP/IP 位于: 传输层/网络层</p>
<p>会话层和表示层几乎没有内容</p>
<h3 id="3-4-cs-模型"><a class="header-anchor-1" href="#3-4-cs-模型">#</a>3.4 CS 模型</h3>
<table>
<thead>
<tr>
<th>服务端程序 S</th>
<th>客户端程序 A</th>
</tr>
</thead>
<tbody>
<tr>
<td>先启动</td>
<td>后启动</td>
</tr>
<tr>
<td>不知道 C</td>
<td>必须知道 S 的位置</td>
</tr>
<tr>
<td>积极等待 C 来连接</td>
<td>需要通讯时初始化连接</td>
</tr>
<tr>
<td>通过收发数据进行通讯</td>
<td>通过收发数据进行通讯</td>
</tr>
<tr>
<td>服务之后继续运行, 等待下一个 C 来连接</td>
<td>可能结束</td>
</tr>
</tbody>
</table>
<p>Internet 只提供基本通讯, 实际上是由计算机上的程序来处理连接</p>
<h3 id="3-5-c-s-程序的特点"><a class="header-anchor-1" href="#3-5-c-s-程序的特点">#</a>3.5 C/S 程序的特点</h3>
<p>略</p>
<h3 id="3-13-网络编程-socket-api"><a class="header-anchor-1" href="#3-13-网络编程-socket-api">#</a>3.13 网络编程 Socket API</h3>
<p>事实标准: Socket API</p>
<h3 id="4-6-url-和超链接"><a class="header-anchor-1" href="#4-6-url-和超链接">#</a>4.6 URL 和超链接</h3>
<h3 id="4-7-http"><a class="header-anchor-1" href="#4-7-http">#</a>4.7 HTTP</h3>
<h3 id="4-17-dns-和域名"><a class="header-anchor-1" href="#4-17-dns-和域名">#</a>4.17 DNS 和域名</h3>
<h3 id="4-20-名字解析"><a class="header-anchor-1" href="#4-20-名字解析">#</a>4.20 名字解析</h3>
<h3 id="5-5-与数据传输相关的话题"><a class="header-anchor-1" href="#5-5-与数据传输相关的话题">#</a>5.5 与数据传输相关的话题</h3>
<ul>
<li>信息源</li>
<li>数据源编码/解码器</li>
<li>加密/解密器</li>
<li>通道编码/解码器</li>
<li>复用/解复用器</li>
<li>调制/解调器</li>
<li>物理信道和传输</li>
</ul>
<h3 id="7-18-低地卫星-leo-和集群"><a class="header-anchor-1" href="#7-18-低地卫星-leo-和集群">#</a>7.18 低地卫星(LEO)和集群</h3>
<p>LEO 卫星群协同工作以转发消息。集群成员必须知道当前在地球给定区域上的卫星，并将消息转发给适当的成员以传输到地面站。</p>
<h3 id="8-6-奇偶校验码"><a class="header-anchor-1" href="#8-6-奇偶校验码">#</a>8.6 奇偶校验码</h3>
<p>单奇偶校验（SPC）是信道编码的一种基本形式，其中发送方<strong>在每个字节上添加一个额外的位，以使 1 的个数为偶数（或奇数）</strong>，接收方验证输入的数据是否具有正确的 1 位数。</p>
<h3 id="8-12-因特网使用的-16-位校验和"><a class="header-anchor-1" href="#8-12-因特网使用的-16-位校验和">#</a>8.12 因特网使用的 16 位校验和</h3>
<p>源数据 M, 任意长度</p>
<ol>
<li>补零, 直至长度是 16 位的倍数</li>
<li>将 M 按照 16 位分组并求和, 最多允许溢出到 32 位</li>
<li>将结果对半相加(高 16 位加低 16 位), 只保留 16 位</li>
<li>将结果取反</li>
<li>如果是 0 则再取反</li>
</ol>
<p>取反的目的: 方便验证, 只要求完相加判断是否溢出剩 0 就行了</p>
<h3 id="8-13-crc"><a class="header-anchor-1" href="#8-13-crc">#</a>8.13 CRC</h3>
<p>例: data=<code>10010101010</code>, G=<code>10101</code>
多项式表示: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo>=</mo><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">G=x^5+x^3+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p>
<ol>
<li>补零</li>
</ol>
<p><code>mdata = data + '0' * (G.length - 1)</code></p>
<p>得到<code>mdata = 100101010100000</code></p>
<ol start="2">
<li>模 2 除法</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">      ___101100101100_</span><br><span class="line"><span class="number">10101</span>/<span class="number">100101010100000</span></span><br><span class="line">    / <span class="number">10101</span> |   | | |</span><br><span class="line">     =  <span class="number">11110</span>   | | |</span><br><span class="line">        <span class="number">10101</span>   | | |</span><br><span class="line">       = <span class="number">10111</span>  | | |</span><br><span class="line">         <span class="number">10101</span>  | | |</span><br><span class="line">        =   <span class="number">10010</span> | |</span><br><span class="line">            <span class="number">10101</span> | |</span><br><span class="line">           =  <span class="number">11100</span> |</span><br><span class="line">              <span class="number">10101</span> |</span><br><span class="line">             = <span class="number">10010</span>|</span><br><span class="line">               <span class="number">10101</span>|</span><br><span class="line">              =  <span class="number">1110</span></span><br></pre></td></tr></table></figure>
<p>得到 CRC=<code>1110</code></p>
<ol start="3">
<li>拼接</li>
</ol>
<p>发送的数据<code>send = data + CRC</code></p>
<p><code>send = 1000101010 1110</code></p>
<h3 id="9-12-单工-半双工-全双工传输"><a class="header-anchor-1" href="#9-12-单工-半双工-全双工传输">#</a>9.12 单工/半双工/全双工传输</h3>
<p>信道的三种类型</p>
<p>单工: 只能单向传输, 单根光纤就是单工, 类比收音机, 电视</p>
<p>全双工: 可以同时双向传输, 有两个光纤就可以组成全双工, 类比电话</p>
<p>半双工: 需要一个共享传输介质, 可以双向传输但是不能同时, 类比对讲机</p>
<h3 id="10-3-模拟调制"><a class="header-anchor-1" href="#10-3-模拟调制">#</a>10.3 模拟调制</h3>
<p>载波: 信息发送出去时以电波的形式, 负责承载信息的波就是载波</p>
<p>调制: 根据要发送的信息, 对载波进行的调整</p>
<pre><code>原始载波(输入1) --\
                (调制器) ---&gt; 调制过的载波(输出)
信息 (输入2)    --/
</code></pre>
<p>三种主要调制技术:</p>
<ul>
<li>振幅调制</li>
<li>频率调制</li>
<li>移相调制</li>
</ul>
<h3 id="10-12-modem"><a class="header-anchor-1" href="#10-12-modem">#</a>10.12 Modem</h3>
<p>为了方便网络安装, 一般将调制和解调功能集成在一个叫做调制解调器的设备中</p>
<h3 id="12-6-局部环路特性和适应"><a class="header-anchor-1" href="#12-6-局部环路特性和适应">#</a>12.6 局部环路特性和适应</h3>
<p>接入技术: ISP 到用户的连接</p>
<p>本地用户环路(local subscriber line)/本地环路(local loop): 电话公司交换局到用户之间的物理连接, 一般是使用双绞线 (其实就是电话线路?)</p>
<p>DSL: 一种利用 local loop 提供网络的技术</p>
<p>ADSL: 不对称 DSL, 利用频分复用将 local loop 的带宽分成三个区域</p>
<table>
<thead>
<tr>
<th>频率</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>0-4</td>
<td>普通老式电话业务</td>
</tr>
<tr>
<td>26-138</td>
<td>上行频带</td>
</tr>
<tr>
<td>138-1100</td>
<td>下行频带</td>
</tr>
</tbody>
</table>
<p>因为本地环路的电气特性变化各异，ADSL 采用了自适应技术，即一对调制解调器先探测彼此之间连接线路上的许多频率，然后选择在此线路上能产生最优传输质量的频率和相应的调制技术。</p>
<h3 id="12-7-adsl-的传输速率"><a class="header-anchor-1" href="#12-7-adsl-的传输速率">#</a>12.7 ADSL 的传输速率</h3>
<p>上行: 32 - 640 Kbps, 去掉控制信道: 32 - 576 Kbps</p>
<p>下行: 32 - 8448 Kbps</p>
<h3 id="12-9-电缆调制解调器技术"><a class="header-anchor-1" href="#12-9-电缆调制解调器技术">#</a>12.9 电缆调制解调器技术</h3>
<p>本地环路具有局限性: 双绞线不抗干扰,</p>
<p>因此创造了基于 同轴电缆 + FDM + 统计复用 的电缆调制解调器技术, 每一组用户共享一个数据信道, 通过 Modem 判断数据是否属于该用户</p>
<p>传输速率: 上行 512 Kbps, 下行 52 Mbps</p>
<h3 id="13-4-本地和广域包交换网络"><a class="header-anchor-1" href="#13-4-本地和广域包交换网络">#</a>13.4 本地和广域包交换网络</h3>
<table>
<thead>
<tr>
<th>类型</th>
<th>距离</th>
</tr>
</thead>
<tbody>
<tr>
<td>LAN</td>
<td>房间/建筑</td>
</tr>
<tr>
<td>MAN</td>
<td>大城市</td>
</tr>
<tr>
<td>WAN</td>
<td>多个城市</td>
</tr>
</tbody>
</table>
<h3 id="13-9-包识别-解复用-mac-地址"><a class="header-anchor-1" href="#13-9-包识别-解复用-mac-地址">#</a>13.9 包识别, 解复用, MAC 地址</h3>
<p>地址: 在包交换系统中, 解复用时使用的标识符, 每个包都包含了目的地地址</p>
<p>IEEE 地址(MAC 地址): 48 位地址, 每个 NIC 都不一样, 分为前 24 位 OUI, 24 位 NIC 地址</p>
<h3 id="13-10-单播-广播-多播"><a class="header-anchor-1" href="#13-10-单播-广播-多播">#</a>13.10 单播, 广播, 多播</h3>
<p>IEEE 保留了 MAC 地址中的一位(最高有效字节的最低位)来区分单播(0)和多播(1)</p>
<p>广播视为一种特殊的多播, 广播地址所有位全 1</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>单播</td>
<td>唯一标识一台计算机，并规定只有被标识的那台计算机才能接收分组的副本</td>
</tr>
<tr>
<td>广播</td>
<td>对应所有的计算机，并规定网络上每台计算机都应该接收分组的副本</td>
</tr>
<tr>
<td>组播</td>
<td>标识指定网络上所有计算机的一个子集，并规定该子集中的每台计算机都应该接收分组的副本</td>
</tr>
</tbody>
</table>
<h3 id="13-11-广播-多播和多点传递"><a class="header-anchor-1" href="#13-11-广播-多播和多点传递">#</a>13.11 广播, 多播和多点传递</h3>
<p>在 LAN 中, 广播和多播极大地提高了效率</p>
<h3 id="14-6-随机接入协议"><a class="header-anchor-1" href="#14-6-随机接入协议">#</a>14.6 随机接入协议</h3>
<p>接入技术: 多台相互独立的计算机如何进行协调接入一个<strong>共享介质</strong></p>
<p>MAC 层: Media <strong>Access</strong> Control 介质接入控制</p>
<p>方法: 采用复用技术的改进形式, 采用分布式算法</p>
<p>多址接入协议</p>
<ul>
<li>受控接入协议
<ul>
<li>预约</li>
<li>轮询</li>
<li>令牌传递</li>
</ul>
</li>
<li>随机接入协议
<ul>
<li>ALOHA</li>
<li>CSMA/CD</li>
<li>CSMA/CA</li>
</ul>
</li>
<li>信道分配协议
<ul>
<li>FDMA</li>
<li>TDMA</li>
<li>CDMA</li>
</ul>
</li>
</ul>
<p>在 LAN 中, 用户接入共享介质的时机是随机的, 因此可能造成冲突, 需要用合适的方法解决</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>ALOHA</td>
<td>教科书中流行的协议, 但没有实际应用, 划分上行/下行两个频段用来传输信息, 上行采用随机延迟来解决冲突问题, 下行采用广播机制</td>
</tr>
<tr>
<td>CSMA/CD</td>
<td>带冲突检测的载波侦听多址接入, 原始以太网使用, 但交换式以太网不再使用, 使用载波侦听+冲突检测+指数退避算法解决冲突问题</td>
</tr>
<tr>
<td>CSMA/CA</td>
<td>带冲突避免的载波侦听多址接入, 无线 LAN 使用, 与 CSMA/CD 类似, 不同在于分组传输前会发送一个控制报文, 接收方广播控制消息</td>
</tr>
</tbody>
</table>
<p>CSMA/CD:</p>
<ul>
<li>Carrier Sense 载波侦听</li>
<li>Multiple Access 多址接入</li>
<li>Collision Detect 冲突检测</li>
</ul>
<p>CSMA/CA:</p>
<ul>
<li>Carrier Sense 载波侦听</li>
<li>Multiple Access 多址接入</li>
<li>Collision Avoidance 冲突避免</li>
</ul>
<h3 id="15-3-以太网帧格式"><a class="header-anchor-1" href="#15-3-以太网帧格式">#</a>15.3 以太网帧格式</h3>
<p>(传统)以太网: 是一种 LAN 技术, 最早在施乐公司的 PARC 中发明, 后来被标准化</p>
<p>帧: 数据链路层的协议数据单元</p>
<p>(传统)以太网帧格式:</p>
<p><img src="ethernet_frame.png" alt="" /></p>
<ul>
<li>
<p>以太网帧(64-1518) := 头部(14) + 载荷(46-1500) + CRC(4)</p>
</li>
<li>
<p>头部 := 目的地址(MAC 地址, 6) + 源地址(MAC 地址, 6) + 类型(2)</p>
</li>
</ul>
<h3 id="15-4-以太网帧的类型域"><a class="header-anchor-1" href="#15-4-以太网帧的类型域">#</a>15.4 以太网帧的类型域</h3>
<p>以太网帧类型域包含了载荷中的报文类型, 如 IPv4/IPv6/ARP 等, 接收方检查该值来进行复用与解复用</p>
<h3 id="15-5-802-3-以太网"><a class="header-anchor-1" href="#15-5-802-3-以太网">#</a>15.5 802.3 以太网</h3>
<p>802.3 以太网: IEEE 802.3 重新修订后的以太网标准, (但不是很成功)</p>
<p><img src="8023_ethernet_frame.png" alt="" /></p>
<ul>
<li>
<p>802.3 以太网帧(64-1518) := 头部(14) + <strong>SNAP 头部(8)</strong> + 新载荷(46(存疑)-<strong>1492</strong>) + CRC(4)</p>
</li>
<li>
<p>头部 := 目的地址(MAC 地址, 6) + 源地址(MAC 地址, 6) + <strong>帧长度(2)</strong></p>
</li>
<li>
<p><strong>SNAP 头部 := LLC(3) + OUI(3) + 类型(2)</strong></p>
</li>
<li>
<p>兼容性处理: 类型域&lt;=1500 是 802.3 帧, 否则是传统以太网帧</p>
</li>
</ul>
<h3 id="15-7-粗缆布线的以太网"><a class="header-anchor-1" href="#15-7-粗缆布线的以太网">#</a>15.7 粗缆布线的以太网</h3>
<p>粗缆以太网(Thick wire Ethernet)/粗网(Thicknet, 10Base5): 最初版本的以太网布线方案, 因为其使用笨重的同轴电缆+收发器+AUI 电缆方式而得名.</p>
<p><img src="thicknet.png" alt="" /></p>
<h3 id="15-8-细缆布线的以太网"><a class="header-anchor-1" href="#15-8-细缆布线的以太网">#</a>15.8 细缆布线的以太网</h3>
<p>细缆以太网(Thin wire Ethernet)/细网(Thinnet, 10Base2): 第二代以太网布线方案, 使用细同轴电缆依次串联计算机, 不再需要 AUI 线, 收发器集成到 NIC 中, 缺点是容易单点故障</p>
<p><img src="thinnet.png" alt="" /></p>
<h3 id="15-9-双绞线布线的以太网"><a class="header-anchor-1" href="#15-9-双绞线布线的以太网">#</a>15.9 双绞线布线的以太网</h3>
<p>双绞线以太网(10BaseT): 第三代以太网布线系统, 使用了双绞线取代同轴电缆, 引入中心集线器(hub)</p>
<p><img src="twistnet.png" alt="" /></p>
<p>集线器是物理层设备, 具有一定的功能, 比如 CSMA/CD 等, 现在大部分已经被交换机取代</p>
<h3 id="16-2-无线网络的分类"><a class="header-anchor-1" href="#16-2-无线网络的分类">#</a>16.2 无线网络的分类</h3>
<p>和有线网络类似: 个域网/局域网/城域网/广域网</p>
<h3 id="16-3-个域网"><a class="header-anchor-1" href="#16-3-个域网">#</a>16.3 个域网</h3>
<p>蓝牙/红外/ISM 无线</p>
<h3 id="16-5-wlan-和-wi-fi"><a class="header-anchor-1" href="#16-5-wlan-和-wi-fi">#</a>16.5 WLAN 和 Wi-Fi</h3>
<p>WLAN 技术的种类很多, 归类于 IEEE802.11 标准</p>
<p>Wi-Fi 联盟: 一群无线设备供应商组成的非营利性组织, 使用 802.11 标准对无线设备进行测试与认证</p>
<h3 id="16-8-wlan-基础结构"><a class="header-anchor-1" href="#16-8-wlan-基础结构">#</a>16.8 WLAN 基础结构</h3>
<p>WLAN 的三个构件: 接入点(Access Point, AP, 非正式也称基站), 互联机构(交换机或路由器等), 无线主机(Station)</p>
<p><img src="wlan.png" alt="" /></p>
<p><img src="wlan2.png" alt="" /></p>
<p>WLAN 的两种类型: Adhoc 无接入点结构(很少), Infrastructure 有中心接入点</p>
<p>互联设备到 AP 的有线连接通常使用双绞线以太网</p>
<p>基本服务组(BSS): 在某一个给定 AP 范围内的计算机集合</p>
<h3 id="16-9-重叠-关联-802-11-帧格式"><a class="header-anchor-1" href="#16-9-重叠-关联-802-11-帧格式">#</a>16.9 重叠, 关联, 802.11 帧格式</h3>
<p>重叠: 两个 AP 太近, 一台 STA 可以同时触及到两个 AP</p>
<p>802.11 要求每个主机只能与一个 AP 相关联(associate), 而且在 802.11 帧中携带了 AP 的 MAC 地址</p>
<ul>
<li>接入点 MAC</li>
<li>本机地址</li>
<li>路由器 MAC</li>
<li>专用地址</li>
</ul>
<p><img src="80211_frame.png" alt="" /></p>
<h3 id="16-11-竞争与无竞争接入"><a class="header-anchor-1" href="#16-11-竞争与无竞争接入">#</a>16.11 竞争与无竞争接入</h3>
<p>802.11 定义了两种接入方法</p>
<ul>
<li>点协调功能 PCF</li>
<li>分布式协调功能 DCF</li>
</ul>
<p>隐蔽站问题: WLAN 中所用的发射机有一个受限的发射范围, 离发射机的距离超过发射范围的接收方将无法收到信号, 因而无法检测载波</p>
<p>802.11 使用 CSMA/CA 协议来解决接入中的隐蔽站问题</p>
<ul>
<li>传输分组前交换一对 RTS,CTS 控制报文</li>
<li>没有冲突检测, 而是采用确认 ACK+超时重传机制</li>
<li>设定 SIFS(发 ACK 前延时)/DIFS(传输前延时)/Slot Time 等时间间隔参数</li>
</ul>
<p><img src="csma_ca.png" alt="" /></p>
<h3 id="16-13-pan-技术与标准"><a class="header-anchor-1" href="#16-13-pan-技术与标准">#</a>16.13 PAN 技术与标准</h3>
<ul>
<li>802.15.1a 蓝牙</li>
<li>802.15.3a UWB 超宽带</li>
<li>802.15.4 Zigbee 工业无线控制标准</li>
</ul>
<h3 id="17-3-光纤猫扩展"><a class="header-anchor-1" href="#17-3-光纤猫扩展">#</a>17.3 光纤猫扩展</h3>
<p>最简单的 LAN 扩展机制: 光纤+一对光纤猫, 连接一台计算机和一个远程以太网</p>
<h3 id="17-4-中继器"><a class="header-anchor-1" href="#17-4-中继器">#</a>17.4 中继器</h3>
<p>中继器: 信号放大, 信号转发, 早期广泛应用</p>
<h3 id="17-5-网桥与桥接"><a class="header-anchor-1" href="#17-5-网桥与桥接">#</a>17.5 网桥与桥接</h3>
<p>网桥: 往往用来连接两个 LAN 网段(比如 hub), 保证两边的计算机都能互相连通</p>
<p>计算机无法分辨 LAN 中有无网桥</p>
<h3 id="17-6-自学习网桥与帧过滤"><a class="header-anchor-1" href="#17-6-自学习网桥与帧过滤">#</a>17.6 自学习网桥与帧过滤</h3>
<p>网桥与一根网线直连的区别: 网桥分隔冲突域, 但不分隔广播域 <strong>网桥仅在有必要的时候才进行转发</strong></p>
<ul>
<li>源地址和目标地址位于两个网段</li>
<li>广播帧和多播帧</li>
</ul>
<p>网桥能够自动学习设备位于网桥的哪一侧(基于分组中的源 MAC 地址)</p>
<h3 id="17-7-桥接的好处"><a class="header-anchor-1" href="#17-7-桥接的好处">#</a>17.7 桥接的好处</h3>
<p>桥接的各个网段可以同时进行传输, 使得不同建筑物之间的通讯成为了可能</p>
<h3 id="17-8-分布式生成树"><a class="header-anchor-1" href="#17-8-分布式生成树">#</a>17.8 分布式生成树</h3>
<p>如果网桥连接导致网络中存在环路, 那么广播和多播帧会被无限循环转发下去</p>
<p>因此网桥会执行生成树算法来生成一个树</p>
<h3 id="18-7-下一条转发"><a class="header-anchor-1" href="#18-7-下一条转发">#</a>18.7 下一条转发</h3>
<p>分组交换机收到一个分组后, 如果分组的目的地不是直连在交换机上, 就需要查表转发</p>
<p>交换机的转发表: 目的地址:输出接口</p>
<h3 id="18-9-广域网动态路由更新"><a class="header-anchor-1" href="#18-9-广域网动态路由更新">#</a>18.9 广域网动态路由更新</h3>
<p>转发表的要求</p>
<ul>
<li>全局通信 - 必须覆盖所有可能目的地的</li>
<li>最优路径 - 下一条必须是距目的地的最短路径</li>
</ul>
<p>路由软件: 自动重新配置转发表的软件</p>
<h3 id="18-12-分布式路径计算"><a class="header-anchor-1" href="#18-12-分布式路径计算">#</a>18.12 分布式路径计算</h3>
<p>分布式路径计算的两种常用形式:</p>
<ul>
<li>链路状态路由 LSR, 采用 Dijkstra 算法</li>
<li>距离向量路由 DVR</li>
</ul>
<p>LSR: 每台交换机定期广播一条边的状态, 相邻交换机据此更新自己的转发表</p>
<p>DVR: 每台交换机定期告诉相邻交换机自己的距离向量表(包含一对(目的,距离)), 相邻交换机据此更新自己的转发表</p>
<h3 id="18-13-最短路径的计算"><a class="header-anchor-1" href="#18-13-最短路径的计算">#</a>18.13 最短路径的计算</h3>
<p>Dijkstra 算法</p>
<h3 id="20-6-用路由器连接物理网络"><a class="header-anchor-1" href="#20-6-用路由器连接物理网络">#</a>20.6 用路由器连接物理网络</h3>
<p>路由器是一台专门完成网络互联任务的专用硬件系统, 可以将多个使用不同技术（包括不同的传输介质、物理编址方案或帧格式）的网络互相连接（互联）起来 (比如连接以太网和 WiFi 网)</p>
<h3 id="21-7-ip-有类编址方案"><a class="header-anchor-1" href="#21-7-ip-有类编址方案">#</a>21.7 IP 有类编址方案</h3>
<p>IP 地址<strong>有类编址方案</strong></p>
<table>
<thead>
<tr>
<th>类别</th>
<th>标识位</th>
<th>前缀长度</th>
<th>最大网络数量</th>
<th>后缀长度</th>
<th>最大主机数量</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>0</td>
<td>7</td>
<td>128</td>
<td>24</td>
<td>2^24</td>
</tr>
<tr>
<td>B</td>
<td>10</td>
<td>14</td>
<td>16384</td>
<td>16</td>
<td>65536</td>
</tr>
<tr>
<td>C</td>
<td>110</td>
<td>21</td>
<td>2^21</td>
<td>8</td>
<td>256</td>
</tr>
<tr>
<td>D(组播)</td>
<td>1110</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td>E(保留)</td>
<td>1111</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
</tbody>
</table>
<h3 id="21-10-ip-无类编址方案"><a class="header-anchor-1" href="#21-10-ip-无类编址方案">#</a>21.10 IP 无类编址方案</h3>
<p>IP 地址<strong>无类/子网编址方案</strong>: 引入附加的地址掩码(子网掩码)来指定网络地址和主机地址的分界线</p>
<p>无类地址 &amp; 子网掩码 == 网络地址</p>
<h3 id="21-21-ipv6-地址"><a class="header-anchor-1" href="#21-21-ipv6-地址">#</a>21.21 IPv6 地址</h3>
<p>和 IPv4 类似, IPv6 为每个接入网络的计算机分配了一个独一无二的地址</p>
<p>IPv6 的特点</p>
<ul>
<li>
<p>将<code>网络地址</code>进一步细分为<code>全球单播地址</code>和<code>子网地址</code>两部分, <code>主机地址</code>仍保留, 两者共 128 位, 用<code>/xx</code>来表示<code>网络地址</code>的长度, 如不指定默认是 64 位</p>
<p><img src="ipv6.png" alt="" /></p>
</li>
<li>
<p>取消<code>广播</code>, 支持<code>多播</code>, 增加<code>任播</code>(anycast)</p>
<p><img src="ipv6_special.png" alt="" /></p>
</li>
</ul>
<h3 id="22-4-ip-数据报"><a class="header-anchor-1" href="#22-4-ip-数据报">#</a>22.4 IP 数据报</h3>
<p>IP 数据报(-65535) := 头部 + 数据区(载荷区)</p>
<h3 id="22-5-ip-数据报头部格式"><a class="header-anchor-1" href="#22-5-ip-数据报头部格式">#</a>22.5 IP 数据报头部格式</h3>
<p><img src="ip_datagram.png" alt="" /></p>
<h3 id="22-7-网络前缀提取与数据报转发"><a class="header-anchor-1" href="#22-7-网络前缀提取与数据报转发">#</a>22.7 网络前缀提取与数据报转发</h3>
<p>根据网络地址查询转发表发给下一站</p>
<h3 id="22-8-最长前缀匹配"><a class="header-anchor-1" href="#22-8-最长前缀匹配">#</a>22.8 最长前缀匹配</h3>
<p>查询转发表时如果有多项匹配, 采用<strong>最长前缀匹配</strong>规则</p>
<h3 id="22-11-ip-封装"><a class="header-anchor-1" href="#22-11-ip-封装">#</a>22.11 IP 封装</h3>
<p>IP 数据报要被封装到一个帧里才能发送出去, 帧的目的地址是下一站的 IP 地址对应的 MAC 地址(通过 ARP 协议获得)</p>
<h3 id="22-14-ip-分片和重装机制"><a class="header-anchor-1" href="#22-14-ip-分片和重装机制">#</a>22.14 IP 分片和重装机制</h3>
<h3 id="22-15-分片数据报的收集"><a class="header-anchor-1" href="#22-15-分片数据报的收集">#</a>22.15 分片数据报的收集</h3>
<p>最大传输单元 MTU: 每种物理网络规定的一帧能够携带的最大数据量</p>
<p>IP 数据报分片机制: 当一个数据报长度大于前方网络的 MTU 时, 路由器会将数据报分成若干较小的片(fragment), 然后将每一片独立地封装发送出去</p>
<p>分片: 每个片与数据报的格式一样, 头部部分参数不同</p>
<ul>
<li>标识: 每个数据报的唯一标识, 同一个原始数据报的所有片段的标识是一样的</li>
<li>标志: 标识了该数据报是片还是完整的数据报, 以及是否是最后一片</li>
<li>片偏移: 该片在原数据报中的位置</li>
</ul>
<p>重装: 在所有片的基础上重新产生原数据报的过程, <strong>IP 规定只有最终目的主机才能对片进行重装</strong></p>
<h3 id="23-9-icmp-报文格式与封装"><a class="header-anchor-1" href="#23-9-icmp-报文格式与封装">#</a>23.9 ICMP 报文格式与封装</h3>
<p>因特网控制报文协议(ICMP): 利用 IP 来传输 IP 传输中发生的错误</p>
<p>ICMP 报文放置在 IP 数据报的数据区传输</p>
<h3 id="23-10-协议软件-参数和配置"><a class="header-anchor-1" href="#23-10-协议软件-参数和配置">#</a>23.10 协议软件, 参数和配置</h3>
<p>协议软件采用参数化设计</p>
<p>主机配置采用自举过程, 运行时获取到 IP 地址, 掩码, DNS 服务器地址等参数填入程序中运行</p>
<h3 id="24-3-udp"><a class="header-anchor-1" href="#24-3-udp">#</a>24.3 UDP</h3>
<p>UDP 的特征:</p>
<ul>
<li>端到端: UDP 是一个传输协议, 它能区分运行在给定计算机上的多个应用程序</li>
<li>无连接: UDP 提供给应用的接口遵从无连接模式</li>
<li>面向报文: 使用 UDP 的应用进程所发送和接收的数据是单个报文</li>
<li>尽力而为: UDP 提供给应用的是与 IP 一样的尽力传递机制</li>
<li>任意交互: UDP 允许应用进程给很多其他应用进程发送数据, 也允许从很多其他应用进程那里接收数据, 或者只跟一个其他应用进程相互通信</li>
<li>操作系统无关: UDP 所提供的标识应用程序的方法, 不取决于本地操作系统所使用的标识符</li>
</ul>
<p><img src="udp_segment.png" alt="" /></p>
<h3 id="24-4-无连接的通信模式"><a class="header-anchor-1" href="#24-4-无连接的通信模式">#</a>24.4 无连接的通信模式</h3>
<p>UDP 采用无连接通信模式, 可以在任何时候发送数据, 不需要维护通信状态, 也不使用控制报文, 因此传输开销极低</p>
<h3 id="24-7-交互模式和广播传递"><a class="header-anchor-1" href="#24-7-交互模式和广播传递">#</a>24.7 交互模式和广播传递</h3>
<p>UDP 支持四种交互通信方式:</p>
<ul>
<li>一对一</li>
<li>一对多</li>
<li>多对一</li>
<li>多对多</li>
</ul>
<p>底层是利用 IP 组播和广播机制实现的</p>
<h3 id="24-8-用协议端口号标识端点"><a class="header-anchor-1" href="#24-8-用协议端口号标识端点">#</a>24.8 用协议端口号标识端点</h3>
<p>协议端口号: 用来标识应用程序的<strong>标识符抽象集</strong>, 独立于底层操作系统</p>
<h3 id="25-3-tcp"><a class="header-anchor-1" href="#25-3-tcp">#</a>25.3 TCP</h3>
<p>TCP 提供的服务有 7 个主要特点:</p>
<ul>
<li>面向连接: TCP 提供面向连接的服务, 应用程序必须首先请求建立一个到目的地的连接, 然后使用这个连接来传输数据</li>
<li>点对点通信: 每个 TCP 连接上只有两个端点</li>
<li>完全的可靠性: TCP 能保证在一个连接上发送的数据被正确地传递, 且保证数据的完整和按序到达</li>
<li>全双工通信: TCP 连接允许数据在任何一个方向上流动, 并允许任何应用程序在任何时刻发送数据</li>
<li>流接口: TCP 提供一个流接口, 利用它应用进程可以在一个连接上发送连续的字节流. TCP 不必将数据组合成记录或是报文, 也不要求传递给接收应用进程的数据段大小一定要与发送端所送出的数据段大小相同</li>
<li>可靠的连接建立: TCP 允许两个应用进程可靠地开始通信</li>
<li>友好的连接关闭: 在关闭一个连接之前, TCP 必须保证所有数据已经传递完毕, 并且通信双方都要同意关闭这个连接</li>
</ul>
<p><img src="tcp_segment.png" alt="" /></p>
<h3 id="25-4-端对端服务与虚拟连接"><a class="header-anchor-1" href="#25-4-端对端服务与虚拟连接">#</a>25.4 端对端服务与虚拟连接</h3>
<p>TCP 和 UDP 都是<strong>端到端协议</strong>: 提供在一台计算机上的应用进程与另一台计算机上的应用进程之间的通信能力</p>
<p>TCP 是<strong>面向连接</strong>的协议, TCP 提供的连接是一种虚拟连接, 因为它是软件实现的连接</p>
<p>TCP 将底层因特网视为一个通信系统</p>
<h3 id="25-5-一般可靠传输协议所采用的技术"><a class="header-anchor-1" href="#25-5-一般可靠传输协议所采用的技术">#</a>25.5 一般可靠传输协议所采用的技术</h3>
<ul>
<li>
<p>分组乱序</p>
<ul>
<li>排序技术: 每个分组都附加一个序号</li>
</ul>
</li>
<li>
<p>分组丢失</p>
<ul>
<li>带重传的正向确认: 接收方发送 ACK 报文表示成功接收; 若超时仍未收到 ACK, 则重传</li>
</ul>
</li>
<li>
<p>分组重复(重放错误)</p>
<ul>
<li>每一次会话用一个唯一的 ID 标识</li>
</ul>
</li>
<li>
<p>数据过载</p>
<ul>
<li>停-走系统: 不好, 效率很低</li>
<li>滑动窗口: 定义<strong>窗口大小</strong>为接收方一次可以承载的最大数据量/发送方收到 ACK 前可以发送的最大数据量, 发送方收到 ACK 之后窗口向后移动</li>
</ul>
</li>
</ul>
<h3 id="25-11-缓冲-流控制-窗口"><a class="header-anchor-1" href="#25-11-缓冲-流控制-窗口">#</a>25.11 缓冲, 流控制, 窗口</h3>
<p>TCP 使用了以字节计量的窗口, 接收方将自己剩余的缓冲区大小放在 ACK 报文中, 发送方根据这个窗口大小来决定是继续发送还是停止</p>
<h3 id="26-4-动态路由和路由器"><a class="header-anchor-1" href="#26-4-动态路由和路由器">#</a>26.4 动态路由和路由器</h3>
<p>每个路由器都运行路由软件，该软件了解其他路由器可以到达的目的地，并向其他路由器通知其可以到达的目的地。路由软件使用传入的信息来连续更新本地转发表。</p>
<h3 id="26-7-两类因特网路由协议"><a class="header-anchor-1" href="#26-7-两类因特网路由协议">#</a>26.7 两类因特网路由协议</h3>
<p>因特网路由协议的分类:</p>
<ul>
<li>内部网关协议 IGP: 自治系统内部使用的协议, 可以自由选择, 例如 RIP, OSPF, is-is 等</li>
<li>外部网关协议 EGP: 自治系统之间使用的协议, 例如 BGP</li>
</ul>
<p>路由度量指标: 评价路由路径好坏的指标</p>
<ul>
<li>
<p>尽管大多数 Internet 路由协议都设计为使用跃点作为路由指标，网络管理员也可以覆盖该指标以实施策略。</p>
</li>
<li>
<p>在自治系统中，IGP 软件使用路由度量来选择到达每个目的地的最佳路径。 EGP 软件可以找到到达每个目的地的路径，但是找不到最佳路径，因为它无法比较来自多个自治系统的路由度量。</p>
</li>
</ul>
<h3 id="26-12-ospf-协议"><a class="header-anchor-1" href="#26-12-ospf-协议">#</a>26.12 OSPF 协议</h3>
<p>RIP 是内部网关协议, 使用<strong>距离矢量算法</strong>来传递路由信息。RIP 是在 UDP 协议之上的一种路由协议，应用于 OSI 网络七层模型的<strong>网络层</strong>。</p>
<p>OSPF 是内部网关协议，它使用<strong>链路状态算法</strong>来传播路由信息。路由器使用<strong>Dijkstra 算法</strong>计算最短路径。</p>
<h3 id="26-16-组播路由技术"><a class="header-anchor-1" href="#26-16-组播路由技术">#</a>26.16 组播路由技术</h3>
<p>IP 组播群组的成员关系构成是动态的，即计算机可以随时加入或离开一个群组。群组成员关系只是定义了一组接收者；任意一个应用进程（即使它不是一个群组成员）都能发送数据报给组播群组。</p>
<p>因特网组播的动态特性使它的组播路径传播问题变得很困难。虽然已经提出了很多协议，但是目前因特网还没有全网范围内的组播路由设施。</p>
<h3 id="29-9-私有密钥-对称-加密"><a class="header-anchor-1" href="#29-9-私有密钥-对称-加密">#</a>29.9 私有密钥(对称)加密</h3>
<h3 id="29-10-公开密钥-非对称-加密"><a class="header-anchor-1" href="#29-10-公开密钥-非对称-加密">#</a>29.10 公开密钥(非对称)加密</h3>
<h3 id="29-11-使用数字签名的鉴别"><a class="header-anchor-1" href="#29-11-使用数字签名的鉴别">#</a>29.11 使用数字签名的鉴别</h3>
<p>签名: 发送方使用自己的私钥对报文进行加密</p>
<p>验证: 接收方使用发送方的公钥进行解密</p>
<p>认证+加密: 发送者先对报文进行签名, 再用接收者的公钥进行加密</p>
<h3 id="29-13-防火墙"><a class="header-anchor-1" href="#29-13-防火墙">#</a>29.13 防火墙</h3>
<p>防火墙: 防止因特网上的问题扩散到本地内部的计算机上的技术, 一般放置在本单位的网络与外部因特网之间</p>
<h3 id="29-14-包过滤防火墙的实现"><a class="header-anchor-1" href="#29-14-包过滤防火墙的实现">#</a>29.14 包过滤防火墙的实现</h3>
<p>防火墙利用包过滤技术来防止不希望有的通信交互。每种过滤器规则都要给出数据包头部参数的组合，包括 IP 源地址、目的地址、协议端口号和传输协议类型等。</p>
<h3 id="30-7-snmp"><a class="header-anchor-1" href="#30-7-snmp">#</a>30.7 SNMP</h3>
<p>简单网络管理协议 SNMP: 基于 IP 的网络管理的标准协议</p>
<h2 id="按作业内容"><a class="header-anchor-1" href="#按作业内容">#</a>按作业内容</h2>
<h3 id="tcp-ip-的分层模型"><a class="header-anchor-1" href="#tcp-ip-的分层模型">#</a>TCP/IP 的分层模型</h3>
<p>物理层/网络接口层/网络层/传输层/应用层</p>
<h3 id="导线类型"><a class="header-anchor-1" href="#导线类型">#</a>导线类型</h3>
<ul>
<li>无屏蔽双绞线(UTP)</li>
<li>屏蔽双绞线(STP)</li>
<li>同轴电缆(CC)</li>
</ul>
<h3 id="通信卫星类型"><a class="header-anchor-1" href="#通信卫星类型">#</a>通信卫星类型</h3>
<table>
<thead>
<tr>
<th>类型</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td>低地球轨道(LEO)</td>
<td>低时延</td>
<td>相对地球移动</td>
</tr>
<tr>
<td>中地球轨道(MEO)</td>
<td>主要提供南北级通信</td>
<td>-</td>
</tr>
<tr>
<td>地球静止轨道(GEO)</td>
<td>相对地球静止</td>
<td>距离远</td>
</tr>
</tbody>
</table>
<h3 id="为什么要区分上下行通信"><a class="header-anchor-1" href="#为什么要区分上下行通信">#</a>为什么要区分上下行通信</h3>
<p>大多数因特网用户都是按非对称（asymmetric）模式使用网络的，即典型的居民用户从因特网接收的数据要多于他们发送出去的数据。例如，为了浏览一个网页，浏览器发送一个只包含几个字节的 URL，而 Web 服务器响应回来的内容可能是包含几千字节的文本或者是一个包含好几万字节的图片。运行 Web 服务器的商业用户可能具有相反的流量模式——商业用户发送的数据要多于接收的数据。</p>
<h3 id="宽带与窄带"><a class="header-anchor-1" href="#宽带与窄带">#</a>宽带与窄带</h3>
<p>窄带接入技术:</p>
<ul>
<li>拨号电话连接</li>
<li>使用调制解调器的租用电路</li>
<li>部分 T1 数据电路</li>
<li>ISDN 及其他电信数据服务</li>
</ul>
<p>宽带接入技术:</p>
<ul>
<li>DSL 技术</li>
<li>电缆调制解调器技术</li>
<li>无线接入技术</li>
<li>T1 速率或更高速率的数据线路</li>
</ul>
<h2 id=""><a class="header-anchor-1" href="#">#</a></h2>
<h2 id="背背背"><a class="header-anchor-1" href="#背背背">#</a>背背背</h2>
<h3 id="tcp-的特征"><a class="header-anchor-1" href="#tcp-的特征">#</a>TCP 的特征</h3>
<ul>
<li>面向连接: TCP 提供面向连接的服务, 应用程序必须首先请求建立一个到目的地的连接, 然后使用这个连接来传输数据</li>
<li>点对点通信: 每个 TCP 连接上只有两个端点</li>
<li>完全的可靠性: TCP 能保证在一个连接上发送的数据被正确地传递, 且保证数据的完整和按序到达</li>
<li>全双工通信: TCP 连接允许数据在任何一个方向上流动, 并允许任何应用程序在任何时刻发送数据</li>
<li>流接口: TCP 提供一个流接口, 利用它应用进程可以在一个连接上发送连续的字节流. TCP 不必将数据组合成记录或是报文, 也不要求传递给接收应用进程的数据段大小一定要与发送端所送出的数据段大小相同</li>
<li>可靠的连接建立: TCP 允许两个应用进程可靠地开始通信</li>
<li>友好的连接关闭: 在关闭一个连接之前, TCP 必须保证所有数据已经传递完毕, 并且通信双方都要同意关闭这个连接</li>
</ul>
<h3 id="udp-的特征"><a class="header-anchor-1" href="#udp-的特征">#</a>UDP 的特征</h3>
<ul>
<li>端到端: UDP 是一个传输协议，它能区分运行在给定计算机上的多个应用程序。</li>
<li>无连接: UDP 提供给应用的接口遵从无连接模式。</li>
<li>面向报文: 使用 UDP 的应用进程所发送和接收的数据是单个报文。</li>
<li>尽力而为: UDP 提供给应用的是与 IP 一样的尽力传递机制。</li>
<li>任意交互: UDP 允许应用进程给很多其他应用进程发送数据，也允许从很多其他应用进程那里接收数据，或者只跟一个其他应用进程相互通信。</li>
</ul>
<h3 id="服务端-客户端特征"><a class="header-anchor-1" href="#服务端-客户端特征">#</a>服务端-客户端特征</h3>
<p>虽然存在少量的变种，但大多数客户——服务器交互模式都具有相同的一般特征。一般情况下，客户软件具有如下特征：</p>
<ol>
<li>它是一个任意的应用程序，仅在需要进行远程访问时才暂时成为客户，同时还要完成其他的计算任务。</li>
<li>直接受用户介入操作，并且只执行一个会话过程。</li>
<li>在用户的个人计算机上进行本地运行。</li>
<li>主动地发起与服务器的连接请求。</li>
<li>能访问所需的多种服务，但通常一次只与一个远地服务器请求连接。</li>
<li>不会特别地要求功能强大的计算机硬件。</li>
</ol>
<p>而服务器软件的特征如下：</p>
<ol>
<li>它是一个专门提供某种服务的专用特权程序，但同时可以处理多个远程客户的请求。</li>
<li>在系统启动时自动被调入执行，进行多次会话并持续不断地运行。</li>
<li>运行在大型、高性能计算机上。</li>
<li>被动地等待来自任意的远端客户的通信请求。</li>
<li>接收来自任何客户的通信请求，但只提供单一的服务。</li>
<li>要求功能强大的硬件和高级复杂的操作系统支持。</li>
</ol>
<h2 id="-2"><a class="header-anchor-1" href="#-2">#</a></h2>
<h3 id="端口号"><a class="header-anchor-1" href="#端口号">#</a>端口号</h3>
<p>FTP: 20/数据流, 21/控制流
TELNET: 23
SMTP: 25
DNS: 53
SNMP: 161/162</p>
]]></content>
      <categories>
        <category>computer-networking</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 并发三件套 - future, promise, async</title>
    <url>/2024/04/20/cpp-concurrency/</url>
    <content><![CDATA[<p>C++标准库提供了很多用于并发编程的工具，不太熟悉，总结一下。</p>
<h2 id="异步计算结果-std-future-t"><a class="header-anchor-1" href="#异步计算结果-std-future-t">#</a>异步计算结果 <code>std::future&lt;T&gt;</code></h2>
<p><code>std::future&lt;T&gt;</code> 表示一个异步计算过程的结果。</p>
<p><code>std::future::wait()</code> 方法阻塞当前线程直至计算完成。如果计算已经完成，则直接返回。</p>
<p><code>std::future::get()</code> 方法等待计算完成，并获取 <code>future&lt;T&gt;</code> 表示的值或异常。<code>get()</code> 方法会消耗掉当前 future 保存的值，因此只能调用一次。</p>
<p><code>std::future::valid()</code> 方法表示当前 future 中是否还有值可以被获取，如果值已经被 get 过，则会返回 false。</p>
<p><code>std::future::share()</code> 方法返回一个 <code>std::shared_future&lt;T&gt;</code>。</p>
<p><code>std::future&lt;T&gt;</code> 是 move-only 的结构，且独占 <code>T</code> 的所有权。当多个对等的线程需要访问同一个期望值时，可以使用 copyable 的 <code>std::shared_future&lt;T&gt;</code>。注意，<code>std::shared_future&lt;T&gt;</code> 本身并不是线程安全的，需要每个线程拷贝并持有一个自己的 <code>std::shared_future&lt;T&gt;</code>。</p>
<h2 id="异步生产者-std-promise-t"><a class="header-anchor-1" href="#异步生产者-std-promise-t">#</a>异步生产者 <code>std::promise&lt;T&gt;</code></h2>
<p><code>std::promise&lt;T&gt;</code> 用于生产者提供一个 <code>std::future&lt;T&gt;</code> 及其中的值给消费者。<code>std::promise&lt;T&gt;::get_future()</code> 方法返回一个 <code>std::future&lt;T&gt;</code> 给消费者。</p>
<p>对于生产者，使用 <code>std::promise&lt;T&gt;::set_value()</code> 方法填充 <code>future</code> 中的值；或者使用 <code>std::promise&lt;T&gt;::set_exception()</code> 方法填充 <code>future</code> 中的异常；</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> std::promise&lt;<span class="type">double</span>&gt; some_promise;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  some_promise.<span class="built_in">set_value</span>(<span class="built_in">calculate_value</span>());</span><br><span class="line">&#125; <span class="built_in">catch</span>(...) &#123;</span><br><span class="line">  some_promise.<span class="built_in">set_exception</span>(std::<span class="built_in">current_exception</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="异步执行-std-async"><a class="header-anchor-1" href="#异步执行-std-async">#</a>异步执行 <code>std::async()</code></h2>
<p><code>std::async</code> 是一个函数，它启动一个异步任务去执行指定的函数，返回一个表示计算结果的 <code>std::future</code></p>
<p><code>std::async</code> 允许额外指定一个<code>std::launch</code>类型的参数来指定任务启动的方式，有以下几种启动策略：</p>
<ul>
<li><code>std::launch::async</code>: 任务必须在独立线程中执行，因此需要库去负责线程创建和销毁；</li>
<li><code>std::launch::deferred</code>: 任务可以延迟到<code>wait()</code>或者<code>get()</code>的时候，在调用者线程上同步执行 (有点类似 Rust Tokio 的设计)；</li>
<li><code>std::launch::async | std::launch::deferred</code>: 默认的方式，表示以上两种执行时机都可以，由具体实现去选择。</li>
</ul>
]]></content>
      <categories>
        <category>cpp</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>并发编程</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ `constexpr` 的限制</title>
    <url>/2024/04/21/cpp-constexpr-usage/</url>
    <content><![CDATA[<ol>
<li>
<p><code>constexpr</code>函数不能包含条件语句（if、switch）、循环（for、while）、异常处理（try、catch）等。</p>
</li>
<li>
<p><code>constexpr</code>函数不能进行动态内存分配。</p>
</li>
<li>
<p><code>constexpr</code>变量必须是编译时常量，即其值在程序运行期间不能被修改。</p>
</li>
<li>
<p><code>constexpr</code>变量不能是类的成员变量，因为类的成员变量可能不是编译时常量。</p>
</li>
<li>
<p><code>constexpr</code>变量不能是左值，因为左值在编译时无法确定其值。</p>
</li>
<li>
<p><code>constexpr</code>函数不能有副作用，即不能修改全局变量的值或调用非<code>constexpr</code>函数。</p>
</li>
<li>
<p><code>constexpr</code>函数和变量的返回类型只能是内置类型或枚举类型，不能是自定义类型或类类型。</p>
</li>
<li>
<p><code>constexpr</code>函数和变量的参数必须是编译时常量表达式或字面量。</p>
</li>
<li>
<p><code>constexpr</code>函数和变量的返回值必须是编译时常量表达式或字面量。</p>
</li>
<li>
<p><code>constexpr</code>函数和变量的定义必须在声明之前，且必须具有相同的类型和值。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>cpp</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>支持元素更新的D元最小堆模版</title>
    <url>/2024/04/21/cpp-d-ary-heap-structure/</url>
    <content><![CDATA[<p>做 CMU 15-445 的时候需要实现一个支持元素更新的堆。</p>
<p>STL 中的堆是不支持元素更新的，但是我们可以利用元素上浮和元素下沉的操作实现元素更新。具体做法也很简单，根据元素是增大还是减小，调用对应操作保证符合堆的性质即可。</p>
<p>不幸的是 STL 又没有暴露元素上浮和元素下沉的接口，于是只能自己写一个了。</p>
<p>为了能够更新元素的值，给每个元素都附带了一个<code>key</code>标签，凭<code>key</code>去更新元素值，所以最终整个数据结构演变成了类似哈希表的结构。</p>
<p>实现时顺便实现了<span class="exturl" data-url="aHR0cHM6Ly93d3cud2lraXdhbmQuY29tL2VuL0QtYXJ5X2hlYXA=">D 元堆<i class="fa fa-external-link-alt"></i></span>，元数作为模版参数。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * KeyedMinHeap is a min-heap that supports the following operations:</span></span><br><span class="line"><span class="comment"> * - Insert: Insert a key with a score into the heap</span></span><br><span class="line"><span class="comment"> * - Update: Update the score of a key in the heap</span></span><br><span class="line"><span class="comment"> * - TopKey: Get the key with the minimum score</span></span><br><span class="line"><span class="comment"> * - TopScore: Get the minimum score</span></span><br><span class="line"><span class="comment"> * - Pop: Remove the key with the minimum score</span></span><br><span class="line"><span class="comment"> * - Erase: Remove a key from the heap</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Key, std::<span class="type">size_t</span> ARITY = <span class="number">4</span>&gt;</span><br><span class="line"><span class="keyword">class</span> KeyedMinHeap &#123;</span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  <span class="keyword">using</span> <span class="type">heap_index_t</span> = std::<span class="type">size_t</span>;</span><br><span class="line">  <span class="keyword">using</span> <span class="type">score_t</span> = std::<span class="type">size_t</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  <span class="built_in">KeyedMinHeap</span>() = <span class="keyword">default</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">auto</span> <span class="title">Insert</span><span class="params">(<span class="type">const</span> Key &amp;key, <span class="type">score_t</span> score)</span> </span>&#123;</span><br><span class="line">    keys_map_[key] = heap_.<span class="built_in">size</span>();</span><br><span class="line">    heap_.<span class="built_in">emplace_back</span>(key, score);</span><br><span class="line">    <span class="built_in">BubbleUp</span>(heap_.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">auto</span> <span class="title">Increment</span><span class="params">(<span class="type">const</span> Key &amp;key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> index_iter = keys_map_.<span class="built_in">find</span>(key);</span><br><span class="line">    <span class="built_in">assert</span>(index_iter != keys_map_.<span class="built_in">end</span>() &amp;&amp; <span class="string">&quot;Key not found&quot;</span>);</span><br><span class="line">    <span class="type">heap_index_t</span> h_index = index_iter-&gt;second;</span><br><span class="line"></span><br><span class="line">    heap_[h_index].second++;</span><br><span class="line">    <span class="built_in">BubbleDown</span>(h_index);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">auto</span> <span class="title">Update</span><span class="params">(<span class="type">const</span> Key &amp;key, <span class="type">score_t</span> new_score)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> index_iter = keys_map_.<span class="built_in">find</span>(key);</span><br><span class="line">    <span class="built_in">assert</span>(index_iter != keys_map_.<span class="built_in">end</span>() &amp;&amp; <span class="string">&quot;Key not found&quot;</span>);</span><br><span class="line">    <span class="type">heap_index_t</span> h_index = index_iter-&gt;second;</span><br><span class="line"></span><br><span class="line">    <span class="type">score_t</span> old_score = heap_[h_index].second;</span><br><span class="line">    <span class="keyword">if</span> (old_score == new_score) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    heap_[h_index].second = new_score;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (new_score &lt; old_score) &#123;</span><br><span class="line">      <span class="built_in">BubbleUp</span>(h_index);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">BubbleDown</span>(h_index);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">auto</span> <span class="title">TopKey</span><span class="params">()</span> <span class="type">const</span> -&gt; Key </span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(!heap_.<span class="built_in">empty</span>() &amp;&amp; <span class="string">&quot;Heap is empty&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> heap_.<span class="built_in">front</span>().first;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">auto</span> <span class="title">TopScore</span><span class="params">()</span> <span class="type">const</span> -&gt; <span class="type">score_t</span> </span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(!heap_.<span class="built_in">empty</span>() &amp;&amp; <span class="string">&quot;Heap is empty&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> heap_.<span class="built_in">front</span>().second;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">auto</span> <span class="title">Pop</span><span class="params">()</span> -&gt; <span class="type">void</span> </span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(!heap_.<span class="built_in">empty</span>() &amp;&amp; <span class="string">&quot;Heap is empty&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> top_key = heap_.<span class="built_in">front</span>().first;</span><br><span class="line">    <span class="keyword">auto</span> last_key = heap_.<span class="built_in">back</span>().first;</span><br><span class="line"></span><br><span class="line">    keys_map_.<span class="built_in">erase</span>(top_key);</span><br><span class="line">    keys_map_[last_key] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    std::<span class="built_in">swap</span>(heap_.<span class="built_in">front</span>(), heap_.<span class="built_in">back</span>());</span><br><span class="line">    heap_.<span class="built_in">pop_back</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">BubbleDown</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">auto</span> <span class="title">Erase</span><span class="params">(<span class="type">const</span> Key &amp;key)</span> -&gt; <span class="type">void</span> </span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> entry = keys_map_.<span class="built_in">find</span>(key);</span><br><span class="line">    <span class="built_in">assert</span>(entry != keys_map_.<span class="built_in">end</span>() &amp;&amp; <span class="string">&quot;Key not found&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">heap_index_t</span> index = entry-&gt;second;</span><br><span class="line"></span><br><span class="line">    keys_map_.<span class="built_in">erase</span>(entry);</span><br><span class="line">    keys_map_[heap_.<span class="built_in">back</span>().first] = index;</span><br><span class="line"></span><br><span class="line">    std::<span class="built_in">swap</span>(heap_[index], heap_.<span class="built_in">back</span>());</span><br><span class="line">    heap_.<span class="built_in">pop_back</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">BubbleUp</span>(index);</span><br><span class="line">    <span class="built_in">BubbleDown</span>(index);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">auto</span> <span class="title">Size</span><span class="params">()</span> <span class="type">const</span> -&gt; std::<span class="type">size_t</span> </span>&#123; <span class="keyword">return</span> heap_.<span class="built_in">size</span>(); &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">auto</span> <span class="title">Empty</span><span class="params">()</span> <span class="type">const</span> -&gt; <span class="type">bool</span> </span>&#123; <span class="keyword">return</span> heap_.<span class="built_in">empty</span>(); &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span>:</span><br><span class="line">  <span class="function"><span class="keyword">auto</span> <span class="title">ParentIndex</span><span class="params">(<span class="type">heap_index_t</span> h_index)</span> <span class="type">const</span> -&gt; <span class="type">heap_index_t</span> </span>&#123; <span class="keyword">return</span> (h_index - <span class="number">1</span>) / ARITY; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Returns the index of the child_number-th child of the node at index</span></span><br><span class="line">  <span class="comment">// The children are numbered from 1 to ARITY</span></span><br><span class="line">  <span class="function"><span class="keyword">auto</span> <span class="title">ChildIndex</span><span class="params">(<span class="type">heap_index_t</span> h_index, std::<span class="type">size_t</span> child_number)</span> <span class="type">const</span> -&gt; <span class="type">heap_index_t</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ARITY * h_index + child_number;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">BubbleUp</span><span class="params">(<span class="type">heap_index_t</span> h_index)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (h_index != <span class="number">0</span>) &#123;</span><br><span class="line">      std::<span class="type">size_t</span> parent = <span class="built_in">ParentIndex</span>(h_index);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">auto</span> &amp;parent_entry = heap_[parent];</span><br><span class="line">      <span class="keyword">auto</span> &amp;entry = heap_[h_index];</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (entry.second &lt; parent_entry.second) &#123;</span><br><span class="line">        std::<span class="built_in">swap</span>(keys_map_[entry.first], keys_map_[parent_entry.first]);</span><br><span class="line">        std::<span class="built_in">swap</span>(entry, parent_entry);</span><br><span class="line">        h_index = parent;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">BubbleDown</span><span class="params">(<span class="type">heap_index_t</span> h_index)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">      <span class="type">heap_index_t</span> smallest = h_index;</span><br><span class="line">      <span class="keyword">for</span> (std::<span class="type">size_t</span> i = <span class="number">1</span>; i &lt;= ARITY; ++i) &#123;</span><br><span class="line">        <span class="type">heap_index_t</span> child = <span class="built_in">ChildIndex</span>(h_index, i);</span><br><span class="line">        <span class="keyword">if</span> (child &lt; heap_.<span class="built_in">size</span>() &amp;&amp; heap_[child].second &lt; heap_[smallest].second) &#123;</span><br><span class="line">          smallest = child;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (smallest != h_index) &#123;</span><br><span class="line">        <span class="type">const</span> <span class="keyword">auto</span> &amp;entry = heap_[h_index];</span><br><span class="line">        <span class="type">const</span> <span class="keyword">auto</span> &amp;smallest_entry = heap_[smallest];</span><br><span class="line">        std::<span class="built_in">swap</span>(keys_map_[entry.first], keys_map_[smallest_entry.first]);</span><br><span class="line">        std::<span class="built_in">swap</span>(heap_[h_index], heap_[smallest]);</span><br><span class="line">        h_index = smallest;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span>:</span><br><span class="line">  std::unordered_map&lt;Key, <span class="type">heap_index_t</span>&gt; keys_map_;</span><br><span class="line">  std::vector&lt;std::pair&lt;Key, <span class="type">score_t</span>&gt;&gt; heap_;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>cpp</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 古怪类型与容器的交互</title>
    <url>/2024/04/21/cpp-opaque-type-vs-container/</url>
    <content><![CDATA[<p>C++允许定义禁止复制和移动的类型，例如：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">OpaqueData</span> &#123;</span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  <span class="built_in">OpaqueData</span>() = <span class="keyword">default</span>;</span><br><span class="line">  ~<span class="built_in">OpaqueData</span>() = <span class="keyword">default</span>;</span><br><span class="line">  <span class="comment">// Disable copy</span></span><br><span class="line">  <span class="built_in">OpaqueData</span>(<span class="type">const</span> OpaqueData &amp;) = <span class="keyword">delete</span>;</span><br><span class="line">  <span class="keyword">auto</span> <span class="keyword">operator</span>=(<span class="type">const</span> OpaqueData &amp;) -&gt; OpaqueData &amp; = <span class="keyword">delete</span>;</span><br><span class="line">  <span class="comment">// Disable move</span></span><br><span class="line">  <span class="built_in">OpaqueData</span>(OpaqueData &amp;&amp;) = <span class="keyword">delete</span>;</span><br><span class="line">  <span class="keyword">auto</span> <span class="keyword">operator</span>=(OpaqueData &amp;&amp;) -&gt; OpaqueData &amp; = <span class="keyword">delete</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>对于这种类型，容器的很多需要元素移动的操作都是不合法的。因此需要使用 emplace 来在容器内就地构造元素。</p>
<p>这对于<code>std::list</code>是没问题的，但是对于<code>map</code>/<code>unordered_map</code>是不足够的：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">auto</span> <span class="title">main</span><span class="params">()</span> -&gt; <span class="type">int</span> </span>&#123;</span><br><span class="line">  std::list&lt;OpaqueData&gt; list;</span><br><span class="line">  list.<span class="built_in">emplace_back</span>();  <span class="comment">// ok</span></span><br><span class="line"></span><br><span class="line">  std::map&lt;<span class="type">int</span>, OpaqueData&gt; map;</span><br><span class="line">  map.<span class="built_in">emplace</span>(<span class="number">0</span>, &#123;&#125;);  <span class="comment">// Error</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>因为<code>map</code>/<code>unordered_map</code>需要在一次调用构造两个元素<code>key</code>和<code>value</code>，因此没办法区分哪些参数用于构造<code>key</code>，哪些用于构造<code>value</code>。</p>
<p>为了解决这个问题，需要使用 <code>std::piecewise_construct</code> 和 <code>std::forward_as_tuple</code> 明确哪些参数构造<code>key</code>/<code>value</code>，将上述代码修改成下面的样子，即可通过编译：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">auto</span> <span class="title">main</span><span class="params">()</span> -&gt; <span class="type">int</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    map.<span class="built_in">emplace</span>(std::piecewise_construct, std::forward_as_tuple(<span class="number">0</span>), std::forward_as_tuple());  <span class="comment">// Ok</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>那么这两个东西是什么呢？查看标准库中<code>emplace</code>的代码会发现，这些参数会不断地被<code>forward</code>，最终会原封不动地被用来构造底层元素，而底层元素实际上是<code>std::pair</code>。</p>
<p>也就是说，这些奇奇怪怪的参数其实是<code>std::pair</code>的一种构造方式，查看<code>std::pair</code>的构造函数证明了这一点：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* In stl_pair.h */</span></span><br><span class="line"><span class="comment">/// Tag type for piecewise construction of std::pair objects.</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">piecewise_construct_t</span> &#123; <span class="function"><span class="keyword">explicit</span> <span class="title">piecewise_construct_t</span><span class="params">()</span> </span>= <span class="keyword">default</span>; &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// Tag for piecewise construction of std::pair objects.</span></span><br><span class="line"><span class="keyword">constexpr</span> <span class="type">piecewise_construct_t</span> piecewise_construct = <span class="built_in">piecewise_construct_t</span>();</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* In tuple */</span></span><br><span class="line"><span class="comment">/// Create a tuple of lvalue or rvalue references to the arguments</span></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span>... _Elements&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">constexpr</span> tuple&lt;_Elements&amp;&amp;...&gt; <span class="title">forward_as_tuple</span><span class="params">(_Elements&amp;&amp;... __args)</span> <span class="keyword">noexcept</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">tuple</span>&lt;_Elements&amp;&amp;...&gt;(std::forward&lt;_Elements&gt;(__args)...);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* In stl_pair.h */</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">_T1</span>, <span class="keyword">class</span> <span class="title class_">_T2</span>&gt;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span>... _Args1, <span class="keyword">typename</span>... _Args2&gt;</span><br><span class="line">_GLIBCXX20_CONSTEXPR</span><br><span class="line"><span class="keyword">inline</span></span><br><span class="line">pair&lt;_T1, _T2&gt;::<span class="built_in">pair</span>(<span class="type">piecewise_construct_t</span>, tuple&lt;_Args<span class="number">1.</span>..&gt; __first, tuple&lt;_Args<span class="number">2.</span>..&gt; __second) : <span class="built_in">pair</span>(__first, __second,</span><br><span class="line"> <span class="keyword">typename</span> _Build_index_tuple&lt;<span class="keyword">sizeof</span>...(_Args1)&gt;::__type(),</span><br><span class="line"> <span class="keyword">typename</span> _Build_index_tuple&lt;<span class="keyword">sizeof</span>...(_Args2)&gt;::__type())</span><br><span class="line">&#123; &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>cpp</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++11（新？）特性之右值引用</title>
    <url>/2021/01/12/cpp-right-value/</url>
    <content><![CDATA[<h2 id="右值"><a class="header-anchor-1" href="#右值">#</a>右值</h2>
<p>不能放到赋值表达式左侧的值，例如:</p>
<ul>
<li>字面量 <code>1</code>，<code>&quot;Hello&quot;</code>，<code>'c'</code></li>
<li>返回值而非引用的函数调用 <code>foo()</code></li>
<li>运算结果 <code>a + b</code></li>
</ul>
<p>右值不能被直接赋值给一个<strong>非常</strong>引用，只能先赋给一个变量再取引用</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>&amp; ref = <span class="number">9</span>; <span class="comment">// error，“invalid initialization of non-const reference of type int&amp; from an rvalue of type int”</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>&amp; const_ref = <span class="number">9</span>; <span class="comment">// only allow this</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> nine = <span class="number">9</span>;</span><br><span class="line"><span class="type">int</span>&amp; ref = nine; <span class="comment">// ok</span></span><br></pre></td></tr></table></figure>
<p>上述特性在泛型函数重载时会带来一些问题，这导致我们不得不对有无 const 两种情况分别重载</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T，<span class="keyword">typename</span> A1&gt;</span><br><span class="line"><span class="function">std::unique_ptr&lt;T&gt; <span class="title">factory</span><span class="params">(A1&amp; a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> std::<span class="built_in">unique_ptr</span>&lt;T&gt;(<span class="keyword">new</span> <span class="built_in">T</span>(a1));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">factory</span>&lt;foo&gt;(<span class="number">5</span>); <span class="comment">// error，a1-&gt;int&amp;，can not bind to literal 5</span></span><br></pre></td></tr></table></figure>
<h2 id="右值引用"><a class="header-anchor-1" href="#右值引用">#</a>右值引用</h2>
<p>顾名思义，就是对右值的引用</p>
<h2 id="增加右值引用的好处"><a class="header-anchor-1" href="#增加右值引用的好处">#</a>增加右值引用的好处</h2>
<p>增加了右值引用之后，我们具备了识别和重载右值的能力</p>
<h3 id="进一步消除不必要的复制"><a class="header-anchor-1" href="#进一步消除不必要的复制">#</a>进一步消除不必要的复制</h3>
<p>在 c++11 之前，临时变量的创建一直是难以处理的问题. 有时这些临时变量可以被编译器优化（例如返回值优化），但是这并不总是可行的，通常这会导致高昂的对象复制成本.</p>
<p>考虑下面的代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function">vector&lt;string&gt; <span class="title">make_poem</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;string&gt; lines;</span><br><span class="line">    lines.<span class="built_in">push_back</span>(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">    lines.<span class="built_in">push_back</span>(<span class="string">&quot;World&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> lines; <span class="comment">// 1.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;string&gt; poem;</span><br><span class="line">    poem = <span class="built_in">make_poem</span>(); <span class="comment">// 2.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>理论上这里最多可能发生两次复制操作：</p>
<ol>
<li>
<p>返回临时变量</p>
</li>
<li>
<p>vector 赋值</p>
</li>
</ol>
<p>其中，第一次的复制操作可能会被编译器优化掉(RVO)，然而第二次复制是不可避免的</p>
<p>当然我们可以通过其他方法来避免这次复制，比如通过指针或者传递一个已经填充好的 vector</p>
<p>有了右值引用之后，我们可以就可以对右值进行特殊化处理，从而避免多余的复制(移动构造函数和=运算符重载)，例如</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// copy</span></span><br><span class="line"><span class="built_in">foo</span>(foo <span class="type">const</span>&amp; other)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;length = other.length;</span><br><span class="line">    <span class="keyword">this</span>-&gt;ptr = <span class="keyword">new</span> <span class="type">int</span>[other.length];</span><br><span class="line">    <span class="built_in">copy</span>(other.ptr，other.ptr + other.length，<span class="keyword">this</span>-&gt;ptr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 与之对应的move</span></span><br><span class="line"><span class="built_in">foo</span>(foo&amp;&amp; other)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">this</span>-&gt;length = other.length;</span><br><span class="line">   <span class="keyword">this</span>-&gt;ptr = other.ptr;</span><br><span class="line">   other.length = <span class="number">0</span>;</span><br><span class="line">   other.ptr = <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="移动语义的引入"><a class="header-anchor-1" href="#移动语义的引入">#</a>移动语义的引入</h3>
<p>可以显式指定某个资源被移交给另一个函数，自己不再需要</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Resource resource;</span><br><span class="line"><span class="built_in">foo</span>(<span class="built_in">move</span>(resource)); <span class="comment">// 不再需要resource，可以全权交给foo函数，将会调用foo(Resource&amp;&amp;)</span></span><br></pre></td></tr></table></figure>
<p>对于有些不能被复制的资源(如<code>std::unique_ptr</code>，<code>std::thread</code>等等)，这是很有用的</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">std::string s;</span><br><span class="line"><span class="function">std::string <span class="title">another</span><span class="params">(s)</span></span>;           <span class="comment">// calls std::string(const std::string&amp;);</span></span><br><span class="line"><span class="function">std::string <span class="title">more</span><span class="params">(std::string(s))</span></span>; <span class="comment">// calls std::string(std::string&amp;&amp;);</span></span><br></pre></td></tr></table></figure>
<h3 id="模板的完美转发"><a class="header-anchor-1" href="#模板的完美转发">#</a>模板的完美转发</h3>
<p>引入右值后，出现了一个新问题，观察下面的代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">bar</span><span class="params">(<span class="type">int</span>&amp; x)</span>  </span>&#123; std::cout &lt;&lt; <span class="string">&quot;左值引用\n&quot;</span>; &#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bar</span><span class="params">(<span class="type">int</span>&amp;&amp; x)</span> </span>&#123; std::cout &lt;&lt; <span class="string">&quot;右值引用\n&quot;</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">(T t)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 函数内部的具名参数变量始终是左值</span></span><br><span class="line">    <span class="built_in">bar</span>(t);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">foo</span>(<span class="number">5</span>); <span class="comment">// 5是右值，但是t是左值</span></span><br></pre></td></tr></table></figure>
<p>按照 C++ 的定义，当参数被传递到函数内部时，无论外部如何传递，函数内部的参数变量本身一定是具名的，因此被视为左值。那么就导致了：</p>
<ul>
<li>右值的语义在函数传递过程中被丢失</li>
<li>右值需要被复制成左值（函数参数），有性能损耗</li>
</ul>
<p>我们可以通过 <code>std::forward</code> 来实现完美转发，这指的是函数模板可以将自己的参数完好无损地转发给内部调用的其他函数中</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">(T&amp;&amp; t)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 如果传入参数是左值 U：则 `T = U&amp;`，`typeof(t) = T&amp;&amp; = U&amp; &amp;&amp; = U&amp;`</span></span><br><span class="line">    <span class="comment">// 如果传入参数是右值 U&amp;&amp;：则 `T = U`，`typeof(t) = T&amp;&amp; = U&amp;&amp;`</span></span><br><span class="line">    <span class="comment">// 函数内部的具名参数变量始终是左值</span></span><br><span class="line">    <span class="built_in">bar</span>(std::forward&lt;T&gt;(t));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="实现"><a class="header-anchor-1" href="#实现">#</a>实现</h2>
<p><code>move</code>函数: 提醒编译器重载时选择移动构造函数</p>
<p>利用移动交换两个变量:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">move_swap</span><span class="params">(Res &amp;a，Res &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Res t = <span class="built_in">move</span>(a);</span><br><span class="line">    a = <span class="built_in">move</span>(b);</span><br><span class="line">    b = <span class="built_in">move</span>(t);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1>RVO 和 NRVO</h1>
<p>返回值优化（Return value optimization，缩写为 RVO）是 C++的一项编译优化技术。即删除保持函数返回值的临时对象。这可能会省略两次复制构造函数，<strong>即使复制构造函数有副作用</strong>。</p>
]]></content>
      <categories>
        <category>cpp</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 模版函数重载匹配规则</title>
    <url>/2025/03/03/cpp-template-matching/</url>
    <content><![CDATA[<h2 id="1-非模板函数优先"><a class="header-anchor-1" href="#1-非模板函数优先">#</a>1. 非模板函数优先</h2>
<p>如果有非模版函数，优先调用非模版函数。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;&#125;          <span class="comment">// 非模板函数</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">(T x)</span> </span>&#123;&#125;  <span class="comment">// 模板函数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">foo</span>(<span class="number">5</span>);  <span class="comment">// 调用非模板函数 void foo(int)</span></span><br></pre></td></tr></table></figure>
<h2 id="2-更特化的模板优先"><a class="header-anchor-1" href="#2-更特化的模板优先">#</a>2. 更特化的模板优先</h2>
<p>如果多个模板可行，编译器选择更特化（更具体）的模板版本。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">(T x)</span> </span>&#123;&#125;      <span class="comment">// 通用模板</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">(T* x)</span> </span>&#123;&#125;     <span class="comment">// 更特化的指针版本</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">foo</span>(&amp;x);  <span class="comment">// 调用指针版本的 f&lt;int*&gt;(int*)</span></span><br></pre></td></tr></table></figure>
<h2 id="3-精确匹配优于类型转换"><a class="header-anchor-1" href="#3-精确匹配优于类型转换">#</a>3. 精确匹配优于类型转换</h2>
<p>若参数匹配需要隐式类型转换，模板生成的精确匹配版本优先于需要转换的非模板函数。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">(<span class="type">double</span> x)</span> </span>&#123;&#125;        <span class="comment">// 非模板函数，需要 int→double 转换</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">(T x)</span> </span>&#123;&#125;  <span class="comment">// 模板生成 f&lt;int&gt;(int)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">foo</span>(<span class="number">5</span>);  <span class="comment">// 调用模板函数 f&lt;int&gt;(int)（无需转换）</span></span><br></pre></td></tr></table></figure>
<h2 id="4-引用和值类型的优先级"><a class="header-anchor-1" href="#4-引用和值类型的优先级">#</a>4. 引用和值类型的优先级</h2>
<p>引用类型（尤其是 T&amp;&amp; 万能引用）可能影响匹配：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">(T&amp;&amp; x)</span> </span>&#123;&#125;  <span class="comment">// 万能引用</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;&#125;          <span class="comment">// 非模板函数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">foo</span>(<span class="number">5</span>);    <span class="comment">// 调用非模板函数（精确匹配）</span></span><br><span class="line"><span class="built_in">foo</span>(x);    <span class="comment">// x 是 int 变量，调用模板函数 f&lt;int&amp;&gt;(int&amp;)（更匹配左值）</span></span><br></pre></td></tr></table></figure>
<h2 id="5-若存在多个同样好的匹配，编译器报错："><a class="header-anchor-1" href="#5-若存在多个同样好的匹配，编译器报错：">#</a>5. 若存在多个同样好的匹配，编译器报错：</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="type">void</span> <span class="title">f</span><span class="params">(T x)</span> </span>&#123;&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="type">void</span> <span class="title">f</span><span class="params">(T* x)</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">f</span>(&amp;x);  <span class="comment">// 歧义：T=int*（通用模板） vs. T=int（指针模板）</span></span><br></pre></td></tr></table></figure>
<h2 id="6-可变参数模板优先级最低"><a class="header-anchor-1" href="#6-可变参数模板优先级最低">#</a>6. 可变参数模板优先级最低</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Args&gt; <span class="function"><span class="type">void</span> <span class="title">f</span><span class="params">(Args... args)</span> </span>&#123;&#125;  <span class="comment">// 最低优先级</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="type">void</span> <span class="title">f</span><span class="params">(T x)</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">f</span>(<span class="number">5</span>);  <span class="comment">// 调用非可变参数模板 f&lt;int&gt;(int)</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>cpp</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>2020年度总结</title>
    <url>/2021/01/05/2020-summary/</url>
    <content><![CDATA[<h2 id="进步"><a class="header-anchor-1" href="#进步">#</a>进步</h2>
<h3 id="装备升级"><a class="header-anchor-1" href="#装备升级">#</a>装备升级</h3>
<ul>
<li>
<p>新增显示器</p>
</li>
<li>
<p>新增一个 Pad</p>
</li>
</ul>
<h3 id="技术进步"><a class="header-anchor-1" href="#技术进步">#</a>技术进步</h3>
<ul>
<li>
<p>新开了 Blog!</p>
</li>
<li>
<p>开始刷算法题, 并已经刷了一些</p>
</li>
<li>
<p>前端技术更加熟练了</p>
<ul>
<li>
<p>Vue/React 双线操作</p>
</li>
<li>
<p>简单页面能够快速开发</p>
</li>
</ul>
</li>
<li>
<p>Python 更加熟练了</p>
<ul>
<li>
<p>爬虫技术</p>
</li>
<li>
<p>数据处理技术</p>
</li>
<li>
<p>AI/DL</p>
</li>
</ul>
</li>
<li>
<p>Java 语言入门</p>
<ul>
<li>Spring 框架</li>
</ul>
</li>
<li>
<p>iOS 应用开发入门</p>
<ul>
<li>
<p>Swift 语言入门</p>
</li>
<li>
<p>SpriteKit 游戏 * 1</p>
</li>
</ul>
</li>
</ul>
<h3 id="综合能力"><a class="header-anchor-1" href="#综合能力">#</a>综合能力</h3>
<ul>
<li>
<p>表达能力略微提升</p>
</li>
<li>
<p>管理能力略微提升</p>
</li>
</ul>
<h3 id="人际关系"><a class="header-anchor-1" href="#人际关系">#</a>人际关系</h3>
<ul>
<li>认识了很多新朋友!</li>
</ul>
<h2 id="不足"><a class="header-anchor-1" href="#不足">#</a>不足</h2>
<h3 id="任务调度"><a class="header-anchor-1" href="#任务调度">#</a>任务调度</h3>
<ul>
<li>时间利用率不高, 为完成项目曾多次通宵</li>
</ul>
<h3 id="管理-组织能力"><a class="header-anchor-1" href="#管理-组织能力">#</a>管理, 组织能力</h3>
<ul>
<li>小组合作时, 作为组长, 任务分配还有待优化</li>
</ul>
<h3 id="心态"><a class="header-anchor-1" href="#心态">#</a>心态</h3>
<ul>
<li>有时候会比较焦虑</li>
</ul>
]]></content>
      <categories>
        <category>daily</category>
      </categories>
  </entry>
  <entry>
    <title>2021目标计划</title>
    <url>/2021/01/05/2021-wishes/</url>
    <content><![CDATA[<h2 id="2021-年目标"><a class="header-anchor-1" href="#2021-年目标">#</a>2021 年目标</h2>
<h3 id="学习上"><a class="header-anchor-1" href="#学习上">#</a>学习上</h3>
<ul>
<li>先把期末考试完美解决</li>
</ul>
<h3 id="技术上"><a class="header-anchor-1" href="#技术上">#</a>技术上</h3>
<ul>
<li>
<p>想深入学习一下 C++!</p>
</li>
<li>
<p>多刷算法题目!</p>
</li>
<li>
<p>多写 Blog!</p>
</li>
<li>
<p>学习 Android 开发</p>
</li>
<li>
<p>实现大的后端架构</p>
</li>
<li>
<p>学习新语言: Go/Julia/Ruby/…</p>
</li>
</ul>
]]></content>
      <categories>
        <category>daily</category>
      </categories>
  </entry>
  <entry>
    <title>2023 年终总结</title>
    <url>/2024/01/01/2023-summary/</url>
    <content><![CDATA[<h2 id="2023-回顾"><a class="header-anchor-1" href="#2023-回顾">#</a>2023 回顾</h2>
<ul>
<li>1 月: 开源投毒</li>
<li>1-3 月: Rust 教材</li>
<li>4-5 月: 加入误报消减团队, 投 ASE/ICSE 论文</li>
<li>3,5-10 月: 相似代码片段但是有漏洞情况不同 自己搜索, 研究 PDG, Call Graph, LLVM Pass, 函数切片, 错过 FSE</li>
<li>7-11 月: 参加 GLCC 开源活动，参与进了一直以来都很崇拜的 Kata Containers 项目</li>
<li>8-12 月: 搞浦发银行的项目</li>
</ul>
<h2 id="近况"><a class="header-anchor-1" href="#近况">#</a>近况</h2>
<p>个人: 研二在读, 人在杭州, 一篇一作论文在投, 每天搬砖, 没有确定的方向, 毕业有点迷茫</p>
<p>实验室: 宁波实验室人丁兴旺, hw 稀稀拉拉, 反倒宁波更好一些</p>
<h2 id="体会"><a class="header-anchor-1" href="#体会">#</a>体会</h2>
<p>研究生比本科忙多了, 没有时间去做自己想做的事情</p>
<p>甚至不知道 2023 年都做了些什么(笑), 只能看周报回忆</p>
<h2 id="2024-希望"><a class="header-anchor-1" href="#2024-希望">#</a>2024 希望</h2>
<ul>
<li>多读书</li>
<li>多运动</li>
<li>找到好工作</li>
<li>学习唱歌</li>
</ul>
]]></content>
      <categories>
        <category>daily</category>
      </categories>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2024/05/12/2024-05-13/</url>
    <content><![CDATA[<h2 id="软链接更新"><a class="header-anchor-1" href="#软链接更新">#</a>软链接更新</h2>
<p><code>ln</code>有个<code>-f,--force</code>更新链接，再也不用<code>rm</code>再重建了。</p>
<h2 id="conda-root-less-apt"><a class="header-anchor-1" href="#conda-root-less-apt">#</a>Conda = Root-less apt</h2>
<p>升级<code>gcc</code>依赖库：<code>conda install libgcc libgcc-ng</code></p>
<p>升级<code>libstdc++</code>：<code>conda install -c conda-forge libstdcxx-ng</code></p>
]]></content>
      <categories>
        <category>daily</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>2024 年终总结 -- 记学生时代的终结</title>
    <url>/2025/03/15/2024-summary/</url>
    <content><![CDATA[<p>不知不觉 2025 年已经过去了两个多月，感觉再不写这篇总结就要忘记了。</p>
<p>那么事不宜迟，现在让我们回顾一下 2024 年。</p>
<h2 id="2024-回顾"><a class="header-anchor-1" href="#2024-回顾">#</a>2024 回顾</h2>
<ul>
<li>1 月: 似乎没什么事情</li>
<li>2 月:
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvcXR3M2hwYlBVdTFVS0xlTEJiLXBNUQ==">Kata Containers<i class="fa fa-external-link-alt"></i></span> 的项目收尾，Good Job！</li>
<li>和妈妈在杭州旅游，然后回老家过年，开心</li>
</ul>
</li>
<li>2,6-8,11 月: 科研工作论文
<ul>
<li>2 月: 过年在家编 Rebuttal</li>
<li>6-8 月: Rebuttal 见效，给了个 Major Revision，终于拨云见日…断断续续改了 好几个月</li>
<li>11 月: 二轮终于接收，如释重负 😭</li>
</ul>
</li>
<li>5 月: 实验室 kg 拿到了 ICSE Distinguished Paper，Good Job！</li>
<li>3-5 月：暑期实习疯狂投简历
<ul>
<li>被字节简历挂了 😡，原因不明，只能解释为投太晚了</li>
<li>靠 Rust 和安全方面的经验拿到了隐私计算的 Offer，但感觉和自己的方向不太符合，最终放弃了</li>
<li>由于换 HR，最后的 Offer 拖了 1.5 个月才拿到，人快麻了</li>
</ul>
</li>
<li>3-8 月: 辅助实验室学长的漏洞课题</li>
<li>5-9 月: 去某公有云大厂开始暑期实习，做 Redis &amp; Tair Persistent Memory &amp; PDB 相关 😄</li>
<li>8-11 月: 准备秋招
<ul>
<li>9 月暑期实习转正顺利</li>
<li>投+Offer 了 8 家大厂，拉扯了 3 个月，整体过程是一波三折，好在最终的结果还算满意</li>
</ul>
</li>
<li>11-12 月: 参加 <span class="exturl" data-url="aHR0cHM6Ly9vcGVuY2FtcC5jbi9hdG9tZ2l0L2NhbXAvcnVzdA==">Rust 数据结构与算法学习赛<i class="fa fa-external-link-alt"></i></span>，赢到了一个 iPad，意外之喜 😲</li>
<li>4,10-12 月: 写研究生的毕业论文</li>
</ul>
<h2 id="关于实习"><a class="header-anchor-1" href="#关于实习">#</a>关于实习</h2>
<p>实习对云计算产业有了很多新的认识。</p>
<p>对公有云的认识：本质上还是 toC 的业务（因此对于客户服务要求极高），只不过卖的产品是云资源。</p>
<p>对工区的感受：“大概是把演唱会的观众席变成办公桌，观众变成程序员的感觉”</p>
<p>实习同学还有 cvpr oral 二作哥，厉害。</p>
<p>遇到了很多 nb 的师兄，不管是人际关系方面还是技术方面都有一些收获。</p>
<h2 id="关于实验室"><a class="header-anchor-1" href="#关于实验室">#</a>关于实验室</h2>
<p>hw 实验室从 z3 三楼搬到四楼（23.12.20），然后又搬到了 z9（25.1.2），真够折腾的。</p>
<p>宁波和 hw 实验室都来了很多新朋友，不过作为老人社交方面有点摆烂了。</p>
<p>(25.1) kg 考完雅思就去了 SG，拜到了 SE 的大师 🙏。</p>
<h2 id="关于-ai"><a class="header-anchor-1" href="#关于-ai">#</a>关于 AI</h2>
<p>难以置信，24 年看来还是不可能实现的任务，过了一年就有了新的突破。</p>
<h2 id="读的书"><a class="header-anchor-1" href="#读的书">#</a>读的书</h2>
<ul>
<li>房思琪的初恋乐园</li>
<li>雪国</li>
</ul>
<p>培养了使用微信读书的习惯。</p>
<h2 id="有趣的事情"><a class="header-anchor-1" href="#有趣的事情">#</a>有趣的事情</h2>
<p>和实验室友友们 Cooking 了好多次，好好吃 😋</p>
<p>自学硬件，画了很多板子，焊接了很多电路，感谢嘉立创 🙏</p>
<h2 id="未来的祝福"><a class="header-anchor-1" href="#未来的祝福">#</a>未来的祝福</h2>
<p>工作顺利！</p>
]]></content>
      <categories>
        <category>daily</category>
      </categories>
  </entry>
  <entry>
    <title>CMU 15-445 数据库系统 实验</title>
    <url>/2024/05/03/CMU-15-445-database-systems-fall-2023-projects/</url>
    <content><![CDATA[<h2 id="project-0-c-primer"><a class="header-anchor-1" href="#project-0-c-primer">#</a>Project 0 - C++ Primer</h2>
<p>简单的 C++ 语法练习，略过。</p>
<h2 id="project-1-buffer-pool-manager"><a class="header-anchor-1" href="#project-1-buffer-pool-manager">#</a>Project 1 - Buffer Pool Manager</h2>
<h3 id="基础知识"><a class="header-anchor-1" href="#基础知识">#</a>基础知识</h3>
<p>关于<code>future</code>，<code>promise</code>的使用参见 <a href="cpp-concurrency">C++并发查漏补缺</a>。</p>
<h3 id="优化：减小锁范围"><a class="header-anchor-1" href="#优化：减小锁范围">#</a>优化：减小锁范围</h3>
<p>在拿到 Page 之后，我们可以释放 BPM 自身数据结构的锁，只要保证不会有其他操作同样的 Page 即可。</p>
<p>需要注意的是，Page 本身的锁是是保护 Page 内容用的（而不是 Page 的元数据），在 Project 1，由于其他部分的代码没有使用它，因此可以直接复用 Page 本身的锁，但是到 Project 2 就会出问题。</p>
<p>因此最好在 BPM 里面维护单独的 Page 锁。</p>
<h3 id="优化：workload-区分"><a class="header-anchor-1" href="#优化：workload-区分">#</a>优化：workload 区分</h3>
<h3 id="优化：lock-less-队列"><a class="header-anchor-1" href="#优化：lock-less-队列">#</a>优化：lock-less 队列</h3>
<h3 id="优化：多线程读写"><a class="header-anchor-1" href="#优化：多线程读写">#</a>优化：多线程读写</h3>
<p><img src="disk-scheduler.excalidraw.svg" alt="" /></p>
<h3 id="优化：块缓存"><a class="header-anchor-1" href="#优化：块缓存">#</a>优化：块缓存</h3>
<p>每个 Worker 带一小块缓存，尽可能减少对 OS 的调用。</p>
<p>缓存使用 LRU-K 策略替换。</p>
<h2 id="project-2-hash-index"><a class="header-anchor-1" href="#project-2-hash-index">#</a>Project 2 - Hash Index</h2>
<p>任务二的目标是在前面实现的换页基础上，实现一个三级可拓展哈希表。</p>
<h3 id="可拓展哈希表结构"><a class="header-anchor-1" href="#可拓展哈希表结构">#</a>可拓展哈希表结构</h3>
<p><img src="ext_hashtable_init_insert2_step3.excalidraw.svg" alt="" /></p>
<p>右侧的数字是每个 Bucket 的 Local Depth，表示该桶内的元素最多有多少个 bit 是一致的。</p>
<p>简单推论：</p>
<ul>
<li>如果<code>GD</code> = <code>LD</code>，则一定只有一个 entry 指向当前 bucket；</li>
<li>如果<code>GD</code>&lt; <code>LD</code>，则当前 bucket 被 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mo fence="true">(</mo><mtext>GD</mtext><mo>−</mo><mtext>LD</mtext><mo fence="true">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">2^{\left(\text{GD}-\text{LD}\right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">(</span></span><span class="mord text mtight"><span class="mord mtight">GD</span></span><span class="mbin mtight">−</span><span class="mord text mtight"><span class="mord mtight">LD</span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span> 个 entry 指向。</li>
</ul>
<h3 id="header"><a class="header-anchor-1" href="#header">#</a>Header</h3>
<p><code>Header</code>是 Project 相对于课本增加的内容，<code>Header</code>按照 <em>Most Significant Bits</em> 预先对<code>Directory</code>进行一次分区，目的是增大整个系统的并发度，对主要逻辑影响不大。</p>
<h3 id="初始状态"><a class="header-anchor-1" href="#初始状态">#</a>初始状态</h3>
<p>初始状态下，<code>Directory</code>和<code>Bucket</code>均不存在：</p>
<p><img src="ext_hashtable_init.excalidraw.svg" alt="" /></p>
<h3 id="插入算法"><a class="header-anchor-1" href="#插入算法">#</a>插入算法</h3>
<h4 id="算法逻辑"><a class="header-anchor-1" href="#算法逻辑">#</a>算法逻辑</h4>
<ol>
<li>
<p>根据插入元素的 hash 值；</p>
</li>
<li>
<p>根据<code>Header</code>定位到<code>Directory</code>，如不存在则创建；</p>
</li>
<li>
<p>根据<code>Directory</code>定位到<code>Bucket</code>，如不存在则创建；</p>
</li>
<li>
<p>遍历<code>Bucket</code>，如果元素已存在则直接结束；</p>
</li>
<li>
<p>检查<code>Bucket</code>是否装满，如果不满则直接插入到当前<code>Bucket</code>中，结束；</p>
<p><img src="ext_hashtable_init_insert1.excalidraw.svg" alt="" /></p>
</li>
<li>
<p>（桶装满）比较<code>Bucket</code>的<code>Local Depth (LD)</code> 和 <code>Global Depth (GD)</code>；</p>
</li>
<li>
<p>如果<code>LD == GD</code>，如果<code>Directory</code>已经达到最大深度，结束；否则拓展<code>Directory</code>，<code>GD += 1</code>，重新定位<code>Bucket Entry</code>；</p>
<p><img src="ext_hashtable_init_insert2.excalidraw.svg" alt="" /></p>
</li>
<li>
<p>如果<code>LD &lt; GD</code>，说明该桶包含了多个<code>entry</code>的元素，且元素的最后<code>LD</code>位是一样的：进行分裂操作，将这个<code>Bucket</code>拆分成两个，元素按照<code>1&lt;&lt;(LD)</code>位分散到两个桶中；然后根据<code>entry</code>的最后<code>LD</code>位，更新一半的<code>entry</code>指针到新的<code>Bucket</code>上；</p>
<p><img src="ext_hashtable_init_insert2_step2.excalidraw.svg" alt="" /></p>
</li>
<li>
<p>如果当前<code>Bucket</code>仍是满的，回到第 6 步；</p>
</li>
<li>
<p>在当前<code>Bucket</code>中插入元素，结束；</p>
</li>
</ol>
<p><img src="ext_hashtable_init_insert2_step3.excalidraw.svg" alt="" /></p>
<h4 id="示例-1：两次目录拓展"><a class="header-anchor-1" href="#示例-1：两次目录拓展">#</a>示例 1：两次目录拓展</h4>
<p>原状态：</p>
<p><img src="ext_hashtable_init_insert2_step3.excalidraw.svg" alt="" /></p>
<p>插入…1001，目录拓展：</p>
<p><img src="ext_hashtable_insert2.excalidraw.svg" alt="" /></p>
<p>桶分裂，但是仍然空间不足：</p>
<p><img src="ext_hashtable_insert2_step2.excalidraw.svg" alt="" /></p>
<p>再次拓展目录，成功插入：</p>
<p><img src="ext_hashtable_insert2_step3.excalidraw.svg" alt="" /></p>
<h4 id="示例-2：指针更新"><a class="header-anchor-1" href="#示例-2：指针更新">#</a>示例 2：指针更新</h4>
<p>原状态：</p>
<p><img src="ext_hashtable_insert2.excalidraw.svg" alt="" /></p>
<p>插入…010：</p>
<p>原来的桶(<code>...010</code>)从<code>...0</code>变成<code>...10</code>，<code>LD</code>改变<code>1-&gt;2</code>；新创建的桶(<code>...000</code>)保存<code>...00</code>，<code>LD=2</code>；
Entry <code>...000</code>和<code>...100</code>被驱逐到新的桶中：</p>
<p><img src="ext_hashtable_insert2_insert1.excalidraw.svg" alt="" /></p>
<h3 id="删除算法"><a class="header-anchor-1" href="#删除算法">#</a>删除算法</h3>
<h3 id="坑点"><a class="header-anchor-1" href="#坑点">#</a>坑点</h3>
<p>计算哈希值要调用<code>Hash()</code>而不是<code>hash_fn_.GetHash()</code>。</p>
<h2 id="project-3"><a class="header-anchor-1" href="#project-3">#</a>Project 3</h2>
<h2 id="project-4"><a class="header-anchor-1" href="#project-4">#</a>Project 4</h2>
]]></content>
      <categories>
        <category>database-system</category>
      </categories>
      <tags>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>CMU 15-445 数据库系统 课程笔记</title>
    <url>/2024/04/15/CMU-15-445-database-systems-fall-2023/</url>
    <content><![CDATA[<p>教师：Andy Pavlo</p>
<h2 id="lecture-1-背景"><a class="header-anchor-1" href="#lecture-1-背景">#</a>Lecture 1: 背景</h2>
<ul>
<li>DB vs DBMS</li>
<li>平面文件数据库 vs 关系型数据库</li>
<li>DML: 过程式 vs 声明式(SQL)</li>
<li>关系代数: Select Projection Union Intersection Difference Product Join Observation</li>
</ul>
<h2 id="lecture-2-sql"><a class="header-anchor-1" href="#lecture-2-sql">#</a>Lecture 2: SQL</h2>
<ul>
<li>
<p>关系型语言</p>
</li>
<li>
<p>SQL 标准 历史</p>
</li>
<li>
<p>Join</p>
</li>
<li>
<p>聚合函数</p>
</li>
<li>
<p>字符串操作: 大小写敏感 单引号 模式匹配</p>
</li>
<li>
<p>日期和时间</p>
</li>
<li>
<p>输出重定向</p>
</li>
<li>
<p>输出控制: ASC DESC ORDER BY LIMIT</p>
</li>
<li>
<p>嵌套子查询:</p>
<p>SELECT in SELECT</p>
<p>SELECT in FROM</p>
<p>SELECT in WHERE</p>
<p>通常难以优化</p>
<p>输出处理: ALL ANY IN EXISTS</p>
</li>
<li>
<p>窗口函数: OVER ORDER BY</p>
</li>
<li>
<p>公用表表达式(CTE): WITH 临时表, WITH RECURSIVE</p>
</li>
</ul>
<h2 id="lecture-3-存储-part-1"><a class="header-anchor-1" href="#lecture-3-存储-part-1">#</a>Lecture 3: 存储 Part 1</h2>
<h3 id="易失性设备"><a class="header-anchor-1" href="#易失性设备">#</a>易失性设备</h3>
<p>一般支持高速随机按字节访问</p>
<p>通常叫 memory</p>
<h3 id="非易失性设备"><a class="header-anchor-1" href="#非易失性设备">#</a>非易失性设备</h3>
<p>一般支持按块/页存取</p>
<p>通常顺序存取更快</p>
<p>通常叫 disk</p>
<h3 id="持久化内存-非易失性内存"><a class="header-anchor-1" href="#持久化内存-非易失性内存">#</a>持久化内存 / 非易失性内存</h3>
<p>用的少 不讲</p>
<h3 id="nvme-ssds"><a class="header-anchor-1" href="#nvme-ssds">#</a>NVMe SSDs</h3>
<p>仍然属于 disk</p>
<h3 id="面向硬盘的-dbms"><a class="header-anchor-1" href="#面向硬盘的-dbms">#</a>面向硬盘的 DBMS</h3>
<p>Buffer Pool: 把需要用到的数据页从硬盘搬到内存上</p>
<p>能否利用 OS 的<code>mmap()</code>？不好，难以控制 OS 什么时候刷盘，可以用的：<code>madvise()</code>, <code>mlock()</code>, <code>msync()</code></p>
<p>Storage Manager: 管理硬盘上存储的文件，记录文件包含的页，文件剩余的存储空间等</p>
<h3 id="页"><a class="header-anchor-1" href="#页">#</a>页</h3>
<ul>
<li>硬件页: 4K 可以保证原子写</li>
<li>OS 页：4K</li>
<li>数据库页：1-16K</li>
</ul>
<h3 id="页堆"><a class="header-anchor-1" href="#页堆">#</a>页堆</h3>
<p>堆文件组织是一种组织页的方式。包括一个堆文件，其中包含无序的页集合。</p>
<p>具体有两种组织方式：</p>
<ol>
<li>链表：每个页指向下一个页，需要 O(n)遍历，效率低</li>
<li>页目录：维护特殊的页记录每个数据页的信息</li>
</ol>
<h3 id="页结构"><a class="header-anchor-1" href="#页结构">#</a>页结构</h3>
<ul>
<li>页大小</li>
<li>校验码</li>
<li>版本</li>
<li>事务可见性</li>
<li>自包含</li>
</ul>
<p>两种页内数据组织方式：</p>
<ol>
<li>
<p>Slotted-Page</p>
<p>现在大多数 DBMS 使用的</p>
<p>每个 slot 存一个元组</p>
<p>头部保存 slot 索引，元组从后往前增长</p>
</li>
<li>
<p>Log-Structured</p>
</li>
</ol>
<h3 id="元组结构"><a class="header-anchor-1" href="#元组结构">#</a>元组结构</h3>
<p>元组是细粒度的数据，字节序列</p>
<ul>
<li>元组头</li>
<li>元组数据</li>
<li>UID</li>
<li>逆正规化元组数据</li>
</ul>
<h2 id="lecture-4-存储-part-2"><a class="header-anchor-1" href="#lecture-4-存储-part-2">#</a>Lecture 4: 存储 Part 2</h2>
<h3 id="log-structured"><a class="header-anchor-1" href="#log-structured">#</a>Log-Structured</h3>
<p>Slotted-Page 的问题：</p>
<ul>
<li>内碎片：删除元组产生一个空洞</li>
<li>写放大：需要读写整个块</li>
</ul>
<p>Log-Structured 的好处：</p>
<ul>
<li>日志保存的是对数据库的操作 (put, delete)</li>
<li>读记录的时候，DMBS 从新到旧扫描日志文件，重建元组</li>
<li>写很快，读可能会慢，已经写过的页是不可变的，减小随机 IO</li>
<li>…</li>
</ul>
<h3 id="数据表示"><a class="header-anchor-1" href="#数据表示">#</a>数据表示</h3>
<ul>
<li>整数，浮点数：INTEGER，BIGINT，SMALLINT，TINYINT，FLOAT，REAL 按照 IEEE-754 标准，与 C++类型一致</li>
<li>定点数：NUMERIC，DECIMAL，存储方式类似字符串</li>
<li>变长数据：VARCHAR，VARBINARY，TEXT，BLOB</li>
<li>日期和时间：TIME，DATE，TIMESTAMP</li>
</ul>
<h2 id="lecture-5-存储模型-压缩"><a class="header-anchor-1" href="#lecture-5-存储模型-压缩">#</a>Lecture 5: 存储模型 &amp; 压缩</h2>
<h3 id="数据库的-workload"><a class="header-anchor-1" href="#数据库的-workload">#</a>数据库的 Workload</h3>
<ul>
<li>OLTP</li>
<li>OLAP</li>
<li>HTAP</li>
</ul>
<h3 id="存储模型"><a class="header-anchor-1" href="#存储模型">#</a>存储模型</h3>
<ul>
<li>NSM n 元存储模型
<ul>
<li>…</li>
</ul>
</li>
<li>DSM 分解存储模型
<ul>
<li>…</li>
</ul>
</li>
<li>PAX 分区字段
<ul>
<li>…</li>
</ul>
</li>
</ul>
<h3 id="数据库压缩"><a class="header-anchor-1" href="#数据库压缩">#</a>数据库压缩</h3>
<ul>
<li>真实世界的数据都是高可压缩的</li>
<li>元组的字段之间有很强的关联性</li>
</ul>
<p>压缩的要求</p>
<ul>
<li>压缩完最好是固定长度</li>
<li>lazy 解压</li>
<li>必须是无损压缩</li>
</ul>
<p>压缩粒度</p>
<ul>
<li>块级别</li>
<li>元组级别</li>
<li>字段级别</li>
<li>列级别</li>
</ul>
<h3 id="简易压缩"><a class="header-anchor-1" href="#简易压缩">#</a>简易压缩</h3>
<h3 id="列式压缩"><a class="header-anchor-1" href="#列式压缩">#</a>列式压缩</h3>
<ul>
<li>游程编码</li>
<li>位编码</li>
<li>…</li>
</ul>
<h2 id="lecture-6-缓冲池"><a class="header-anchor-1" href="#lecture-6-缓冲池">#</a>Lecture 6: 缓冲池</h2>
<p>Project 1 内容，略</p>
<h3 id="os-页缓存"><a class="header-anchor-1" href="#os-页缓存">#</a>OS 页缓存</h3>
<p>大多数 DBMS 绕过 OS 的页缓存（通过直接 IO），Postgres 除外</p>
<h3 id="磁盘-io-调度"><a class="header-anchor-1" href="#磁盘-io-调度">#</a>磁盘 IO 调度</h3>
<ul>
<li>Sequencial vs. Random I/O</li>
<li>Critical Path Task vs. Background Task</li>
<li>Table vs. Index vs. Log vs. Ephemeral Data</li>
<li>Transaction Information</li>
<li>User-based SLAs</li>
</ul>
<h2 id="lecture-7-哈希表"><a class="header-anchor-1" href="#lecture-7-哈希表">#</a>Lecture 7: 哈希表</h2>
<p>数据结构课几乎都学过，略</p>
<p>SOTA 哈希函数：XXHash3</p>
<p>哈希表 = 哈希函数 + 哈希策略</p>
<p>哈希策略：解决哈希冲突的方法</p>
<p>静态哈希策略</p>
<ul>
<li>线性扫描哈希</li>
<li>Cuckoo 哈希</li>
</ul>
<p>动态哈希策略</p>
<ul>
<li>链式哈希</li>
<li>可拓展哈希</li>
<li>线性哈希</li>
</ul>
<h2 id="lecture-8-树索引"><a class="header-anchor-1" href="#lecture-8-树索引">#</a>Lecture 8: 树索引</h2>
<p>数据结构课几乎都学过，略</p>
<h2 id="lecture-9-索引并发控制"><a class="header-anchor-1" href="#lecture-9-索引并发控制">#</a>Lecture 9: 索引并发控制</h2>
<p>锁，OS 课几乎都学过，略</p>
<h2 id="lecture-10-排序-聚合算法"><a class="header-anchor-1" href="#lecture-10-排序-聚合算法">#</a>Lecture 10: 排序 &amp; 聚合算法</h2>
<h3 id="查询计划"><a class="header-anchor-1" href="#查询计划">#</a>查询计划</h3>
<p>DBMS 会首先把 SQL 编译成查询计划，编译的目标是最小化 I/O。</p>
<h3 id="排序"><a class="header-anchor-1" href="#排序">#</a>排序</h3>
<p>关系模型没有定义数据元组保存的顺序，当执行 ORDER BY, GROUP BY, JOIN, DISTINCT 运算符的时候，可能需要先对数据排序。对于小数据直接在内存中排序，大量数据就需要用到<em>外排序</em>。</p>
<p>外排序的标准算法是使用归并排序。</p>
<ul>
<li>两路归并</li>
<li>K 路归并</li>
</ul>
<p>优化思路：</p>
<ul>
<li>双倍缓冲优化</li>
<li>比较优化</li>
<li>用 B+树索引</li>
</ul>
<p>另外，当查询同时包含了 ORDER BY 和 LIMIT 时，就等价于查询数据的 Top-N 元素，可以用另外的算法。</p>
<h3 id="聚合"><a class="header-anchor-1" href="#聚合">#</a>聚合</h3>
<p>聚合运算将一个或多个元组合并成单个标量值。运算符包括 GROUP BY，</p>
<h2 id="lecture-11-连接算法"><a class="header-anchor-1" href="#lecture-11-连接算法">#</a>Lecture 11: 连接算法</h2>
<blockquote>
<p>The goal of a good database design is to minimize the amount of information repetition.</p>
</blockquote>
<p>TODO</p>
<h2 id="lecture-12-13-查询执行"><a class="header-anchor-1" href="#lecture-12-13-查询执行">#</a>Lecture 12 &amp; 13: 查询执行</h2>
<h3 id="查询计划-2"><a class="header-anchor-1" href="#查询计划-2">#</a>查询计划</h3>
<p>DBMS 首先把 SQL 命令转换成查询计划 (query plan)，然后再执行，为了方便优化和 debug；</p>
<p>查询计划按照数的结构组织，数据从叶子节点计算到跟节点。</p>
<h3 id="处理模型"><a class="header-anchor-1" href="#处理模型">#</a>处理模型</h3>
<p>处理模型决定如何执行一个查询计划，主要有三种：</p>
<ul>
<li>迭代器模型 (aka, 火山模型, Pipeline 模型)</li>
<li>物化模型</li>
<li>向量/批处理模型</li>
</ul>
<p>处理顺序可以是自顶向下，也可以是自底向上；</p>
<ol>
<li>
<p>迭代器模型</p>
<p><img src="iterator-model.png" alt="" /></p>
</li>
<li>
<p>物化模型</p>
<p>是迭代器模型的一种特例，每个 operator 在一次调用中处理完所有需要的数据；</p>
<p>为了防止数据太多，DBMS 可以传递 limit 信息给 operator</p>
</li>
<li>
<p>向量模型</p>
<p>和迭代器模型类似，但是每次 Next 函数返回一批数据，而不是单个 tuple；</p>
<p>这样允许使用 SIMD 等指令优化速度；</p>
</li>
</ol>
<h3 id="数据访问方法"><a class="header-anchor-1" href="#数据访问方法">#</a>数据访问方法</h3>
<p>DBMS 读数据有两种最基本的操作：Sequential Scan 和 Index Scan；</p>
<p>针对 Sequential Scan 的优化方法：</p>
<ul>
<li>Prefetch</li>
<li>Buffer Pool Bypass</li>
<li>Parallelization</li>
<li>Late Materialization</li>
<li>Heap Clustering</li>
<li>Approximate Queries</li>
<li>Zone Map</li>
</ul>
<h3 id="修改数据"><a class="header-anchor-1" href="#修改数据">#</a>修改数据</h3>
<p>会修改数据的 Operator 需要额外维护索引信息。</p>
<p>UPDATE/DELETE Operator 需要记录 RID，否则会有万圣节问题</p>
<p>万圣节问题：Update 操作改变了 tuple 的位置，使得一条数据被 scan 了两遍；</p>
<h3 id="表达式求值"><a class="header-anchor-1" href="#表达式求值">#</a>表达式求值</h3>
<p>每个 tuple 都执行一遍表达式很慢，成熟的 DBMS 会根据 cost 模型决定要不要把表达式 JIT 编译；</p>
<h3 id="分布式数据库"><a class="header-anchor-1" href="#分布式数据库">#</a>分布式数据库</h3>
<p>现在大部分的 DBMS 都采用了 thread per worker 的方式；</p>
<h3 id="io-并行"><a class="header-anchor-1" href="#io-并行">#</a>IO 并行</h3>
<p>多硬盘并行</p>
<p>数据库分区</p>
<h2 id="lecture-14-查询计划-查询优化"><a class="header-anchor-1" href="#lecture-14-查询计划-查询优化">#</a>Lecture 14: 查询计划 &amp; 查询优化</h2>
<p>SQL 是一种声明式语言，只说了要计算什么，但并没有说明如何去计算；</p>
<p>DBMS 需要先把 SQL 转换成实际的查询计划以便执行；</p>
<p>IBM System R 在 1970s 实现了第一个查询优化器，在此之前，人们普遍认为 DBMS 生成的查询计划不会比人写的更好；</p>
<p>两种优化的策略：</p>
<ul>
<li>基于静态规则</li>
<li>基于 cost</li>
</ul>
<p>逻辑查询计划 vs 物理查询计划</p>
<h3 id="逻辑查询优化"><a class="header-anchor-1" href="#逻辑查询优化">#</a>逻辑查询优化</h3>
<h3 id="cost-估计"><a class="header-anchor-1" href="#cost-估计">#</a>Cost 估计</h3>
<p>直方图</p>
<p>采样</p>
<h2 id="lecture-15-并发控制理论"><a class="header-anchor-1" href="#lecture-15-并发控制理论">#</a>Lecture 15: 并发控制理论</h2>
<p>两个并发的问题：</p>
<ol>
<li>并发控制：两个事务同时更新一条记录怎么处理；</li>
<li>持久性：断电怎么保证状态正确；</li>
</ol>
<h3 id="事务"><a class="header-anchor-1" href="#事务">#</a>事务</h3>
<p>最简单的实现是每次执行事务时，复制所有文件。</p>
<p>事务的特性：</p>
<ul>
<li>原子性 A：原子性确保事务中的所有操作都发生，或者不发生。</li>
<li>一致性 C：如果每个事务是一致的，并且数据库在事务开始时是一致的，那么在事务完成时保证数据库是一致的。如果数据满足所有验证规则（如约束、级联和触发器），则数据是一致的。</li>
<li>隔离性 I：隔离是指当一个事务执行时，它应该有一种错觉，即它与其他事务是隔离的。隔离可确保事务的并发执行应具有与事务的顺序执行相同的生成数据库状态。</li>
<li>持久性 D：如果事务提交，则其对数据库的影响应持续存在。</li>
</ul>
<h3 id="原子性"><a class="header-anchor-1" href="#原子性">#</a>原子性</h3>
<p>实现原子性的两种方案：</p>
<ul>
<li>用日志记录所有操作：通过日志来实现事务回滚，在内存和硬盘都保存一份，常用；</li>
<li>CoW 创建 Page 的副本：回滚性能较好，运行时性能较差，不常用；</li>
</ul>
<h3 id="一致性"><a class="header-anchor-1" href="#一致性">#</a>一致性</h3>
<ul>
<li>数据库一致性：数据库准确地表示它正在建模的真实实体，并遵循完整性约束。（例如，一个人的年龄不能是负数）。此外，将来的事务应在数据库中看到过去提交的事务的影响。</li>
<li>事务一致性：如果数据库在事务开始前是一致的，那么在事务开始之后也会保持一致。确保事务一致性是应用程序的责任。</li>
</ul>
<h3 id="隔离性"><a class="header-anchor-1" href="#隔离性">#</a>隔离性</h3>
<p>事务仿佛在系统中单独运行，看不到并发事务的影响。</p>
<p>并发控制：</p>
<ul>
<li>悲观</li>
<li>乐观</li>
</ul>
<h3 id="持久性"><a class="header-anchor-1" href="#持久性">#</a>持久性</h3>
<p>在崩溃或重新启动后，已提交事务的所有更改都必须是持久的（即持久的）。</p>
<h2 id="lecture-16-两阶段锁"><a class="header-anchor-1" href="#lecture-16-两阶段锁">#</a>Lecture 16: 两阶段锁</h2>
<ul>
<li>Shared (S)：读锁</li>
<li>Exclusive (X)：写锁</li>
</ul>
<p>两阶段锁是乐观并发控制方法的一种，特点是第一阶段只获取锁，第二阶段只释放锁；</p>
<p>2PL 能够保证冲突序列化；但是不能处理 cascading aborts（回滚事务 A 导致事务 B 读到坏数据）；</p>
<p>2PL 会有脏读的问题，依然可能导致死锁；</p>
<p>严格 2PL：在 2PL 的基础上，还要求必须 commit 之后才能释放锁；</p>
<p>严格 2PL 能处理 cascading aborts，但是会降低并发度；</p>
<p>死锁检测和死锁避免：略</p>
<p>锁粒度：数据库级别，表级别，页级别，tuple 级别</p>
<p>意向锁：保证不同粒度的锁之间的互斥（例如表锁和表中的行锁）的锁，具体分为：</p>
<ul>
<li>Intention-Shared (IS)：整块区域的读锁；</li>
<li>Intention-Exclusive (IX)：整块区域的写锁；</li>
<li>Shared+Intention-Exclusive (SIX)：S+IX，表示事务要读全部行+更新部分行；</li>
</ul>
<p><img src="intention-locks.png" alt="" /></p>
<h2 id="lecture-17-时间戳顺序"><a class="header-anchor-1" href="#lecture-17-时间戳顺序">#</a>Lecture 17: 时间戳顺序</h2>
<p>时间戳顺序 (Timestamp ordering, T/O) 是一种不需要锁的并发控制手段；</p>
<p>每个事务都会分配一个单调递增的唯一的时间戳，</p>
<h3 id="基本时间戳顺序-basic-t-o"><a class="header-anchor-1" href="#基本时间戳顺序-basic-t-o">#</a>基本时间戳顺序 (BASIC T/O)</h3>
<p>为每个 tuple 记录上一次读和写的时间戳，</p>
<p>读操作：检查时间戳，如果是过去的；</p>
<p>写操作：</p>
<p>Thomas Write Rule：</p>
<h3 id="乐观并发控制-occ"><a class="header-anchor-1" href="#乐观并发控制-occ">#</a>乐观并发控制 (OCC)</h3>
<p>乐观并发控制 (OCC) 是另一种并发控制方案，为每个事务保存要操作的数据的副本；</p>
<p>读操作：读数据复制一份</p>
<p>校验操作</p>
<p>写操作：</p>
<h3 id="幻读问题"><a class="header-anchor-1" href="#幻读问题">#</a>幻读问题</h3>
<p>因为一个事务可能会插入新数据，新的数据没有上锁；</p>
<ol>
<li>重新执行一遍 scan：Commit 的时候重新执行一遍 WHERE 字句；</li>
<li>条件加锁：根据条件判断的结果加锁；</li>
<li>索引加锁：利用索引键保护数据；
<ol>
<li>K-V 锁：对单独一条数据的锁</li>
<li>间隙锁：对两条数据之间空隙的锁，防止插入新数据；</li>
<li>范围锁：对一段数据的锁；</li>
<li>层次锁：</li>
</ol>
</li>
</ol>
<h3 id="隔离级别"><a class="header-anchor-1" href="#隔离级别">#</a>隔离级别</h3>
<p>异常现象：</p>
<ul>
<li>脏读</li>
<li>不可重复读</li>
<li>幻读</li>
<li>【NEW】丢失更新</li>
<li>【NEW】Write skew</li>
</ul>
<p>SQL-92 标准隔离级别</p>
<ol>
<li>序列化：Index Lock+严格 2PL</li>
<li>【NEW】快照隔离；</li>
<li>可重复读：严格 2PL</li>
<li>【NEW】游标稳定性：IBM DB2 默认级别，避免了丢失更新</li>
<li>读已提交：写锁执行严格 2PL，读锁在读后立即释放（Short duration）</li>
<li>读未提交：写锁执行严格 2PL，读不加锁</li>
</ol>
<p>额外的隔离级别：</p>
<h2 id="lecture-18-mvcc"><a class="header-anchor-1" href="#lecture-18-mvcc">#</a>Lecture 18: MVCC</h2>
<p>多版本并发控制 (MVCC) 是最广泛使用的数据库并发控制方法。</p>
<h2 id="lecture-19-数据库日志"><a class="header-anchor-1" href="#lecture-19-数据库日志">#</a>Lecture 19: 数据库日志</h2>
]]></content>
      <categories>
        <category>database-system</category>
      </categories>
      <tags>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>设计数据密集型应用</title>
    <url>/2024/09/18/DDIA/</url>
    <content><![CDATA[<h2 id="第三章：存储与检索"><a class="header-anchor-1" href="#第三章：存储与检索">#</a>第三章：存储与检索</h2>
<ul>
<li>KV 数据
<ul>
<li>哈希表</li>
</ul>
</li>
<li>BitCask 模型
<ul>
<li>磁盘保存 Value, 内存保存<code>&#123; Key -&gt; Value Offset &#125;</code>的索引</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>database-system</category>
      </categories>
      <tags>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>Dynamo: Amazon’s Highly Available Key-value Store 论文阅读</title>
    <url>/2025/04/13/dynamo-amazons-highly-available-key-value-store/</url>
    <content><![CDATA[<p>今天来读经典。</p>
<p>Dynamo 是 Amazon 在 2007 年发表于 SOSP 的 K-V 存储系统。作为电商领域的巨头, Amazon 较早面临巨大业务规模带来的技术挑战。
Dynamo 的技术方案在当时的分布式系统中是非常前沿的, 其设计思想和实现细节对后来的 NoSQL 系统产生了深远的影响。</p>
<h2 id="1-引言"><a class="header-anchor-1" href="#1-引言">#</a>1. 引言</h2>
<p>Amazon 运行一个全球范围的电子商务平台, 在高峰时段为数百万客户提供服务, 使用世界各地多个数据中心的数千台服务器。在这种环境下, Amazon 对性能、可靠性和效率有着严格的要求。可靠性是最重要的要求之一, 因为即使是最细微的停机, 也会产生巨大的财务后果, 并影响客户信任。此外, 为了支持平台的持续增长, 平台需要高度的可扩展性。</p>
<p>在运营 Amazon 的过程中, 我们的团队学到的一个教训是, 系统的可靠性和可扩展性取决于应用程序状态的管理方式。
Amazon 使用了一个高度去中心化、松耦合的面向服务的架构(SOA)来管理数百个服务。在这种环境中, 需要一种始终可用的数据存储技术。例如, 即使发生磁盘故障、网络路由抖动或者甚至数据中心被龙卷风摧毁的灾难, 客户也应该能够查看并添加商品到他们的购物车中。因此, 负责管理购物车的服务必须确保它总是可以写入和读取数据存储, 并且其数据需要再多个数据中心之间可用。</p>
<p>处理由数百万个组件组成的基础设施中的故障是我们的标准操作模式；在任意给定的时刻, 总有一些服务器和网络组件处于故障状态。因此, 亚马逊的软件系统需要以一种视失败如正常情况的方式来构建, 而不影响可用性或者性能。</p>
<p>为了满足这些要求, Amazon 开发了一系列存储技术。其中, Amazon S3 可能是最著名的存储系统。本文介绍了 Amazon Dynamo 系统的设计和实现, 这是另一个高可用且可扩展的分布式数据存储, 用于构建 Amazon 平台。
Dynamo 用于管理具有非常高可靠性要求的服务, 并需要严格控制在可用性、一致性、成本效益和性能之间的 Tradeoff。
Amazon 的平台有很多不同的应用程序, 它们对数据存储的要求各不相同。一组选定的应用程序需要一种灵活的技术, 以便应用设计师可以根据这些权衡配置其数据存储, 以在最有效的方式下达到最高的可用性并保证性能。</p>
<p>Amazon 平台上有许多服务只需要对数据存储进行主键访问, 例如畅销书列表、购物车、客户偏好、会话管理、销售排名和产品目录的服务。对于很多服务来说, 使用关系数据库的常见模式效率很低, 并且限制了规模和可用性。
Dynamo 提供了一个简单的主键访问接口来满足这些应用程序的需求。</p>
<p>Dynamo 使用一系列众所周知的技术来实现可扩展性和可用性: 数据通过一致性哈希进行分片和复制, 一致性由对象版本控制提供支持。在更新时, 副本之间的一致性通过类似多数表决的方法和去中心化的副本同步协议得到维护。
Dynamo 采用基于 Gossip 的分布式故障检测和成员协议。
Dynamo 是完全去中心化的, 对手动运维的需求极低。存储节点可以添加或删除, 而不需要任何手动分片或再分配。</p>
<p>在过去一年中, Dynamo 已经是 Amazon 电商平台中多个核心服务的底层存储技术。它在繁忙的假日购物季期间能够高效应对极端峰值负载, 并且从未停机。例如, 购物车服务处理了数百万个请求, 一天内处理了超过 300 万次结账；会话管理服务处理数十万个并发的会话请求。</p>
<p>本文对研究社区的主要贡献是评估了如何将不同的技术组合在一起以提供一个高可用的系统。它表明, 最终一致性的存储系统可以在生产中使用。此外, 它还提供了关于如何调优这些技术以满足生产系统需求的见解。</p>
<h2 id="2-背景"><a class="header-anchor-1" href="#2-背景">#</a>2. 背景</h2>
<p>Amazon 的电商平台由数百个协同工作的服务组成, 这些服务从推荐到订单履行再到欺诈检测, 提供各种功能。每个服务都通过良好定义的 API 进行暴露, 并且可以通过网络进行访问。这些服务托管在遍布世界各地的数据中心中的数万台服务器组成的基础设施上。其中一些服务是无状态的(聚合其他服务的服务), 其他服务则是有状态的(执行持久存储上的业务逻辑)。</p>
<p>传统生产系统将状态存储在关系数据库中。然而, 对于许多常见的使用模式而言, 关系数据库并不理想。
<strong>大多数这些服务通过主键存储和检索数据, 并不需要 RDBMS 提供的复杂查询和管理功能。</strong>
这种额外的功能需要昂贵的硬件和高度熟练的人力来操作, 使之成为一个非常低效的解决方案。此外, 可用的复制技术有限, 并且通常选择 Consistency 而不是 Availability。尽管近年来有一些进步, 但仍然很难拓展数据库或者使用智能分片方案进行 load balancing。</p>
<p>本文描述了 Dynamo, 这是一种高可用的数据存储技术, 可以满足这些重要的要求。
Dynamo 具有简单的 K/V 接口, 并且具有清晰定义的同步窗口, 资源利用率高, 横向扩展简单。每个使用 Dynamo 的服务都运行自己的 Dynamo 实例。</p>
<h3 id="2-1-系统假设和需求"><a class="header-anchor-1" href="#2-1-系统假设和需求">#</a>2.1 系统假设和需求</h3>
<p>这类服务的存储系统有如下的需求:</p>
<ul>
<li><em>查询模型</em>: 对于唯一键标识的数据项进行简单的读和写操作。状态表示为二进制对象, 并使用唯一的键进行标识。没有跨多个项的操作, 并且不需要关系型模式。对象通常较小(&lt; 1MB)。</li>
<li><em>ACID 特性</em>: Amazon 的经验表明, 提供 ACID 保证的存储系统往往具有较差的可用性, 这已经被业界和学术界广泛接受。
Dynamo 的目标是那些 A&gt;C 的应用程序。Dynamo 不提供任何隔离保证, 并且仅允许单个值更新。</li>
<li><em>效率</em>: 系统需要在商业硬件上运行。在 Amazon 的平台上, 服务有严格的延迟要求。通常是衡量 p999 延迟。鉴于状态访问在服务操作中起着至关重要的作用, 存储系统必须能够满足这些严格的 SLA。服务必须能够配置 Dynamo 的行为, 以便始终实现其延迟和吞吐量要求。权衡性能、性价比、可用性和持久性。</li>
<li><em>其他</em>: Dynamo 仅用于 Amazon 内部服务。其运行环境是可信的, 没有身份验证和授权相关的安全要求。
Dynamo 实例的初始设计目标是达到数百台服务器的规模。</li>
</ul>
<h3 id="2-2-sla"><a class="header-anchor-1" href="#2-2-sla">#</a>2.2 SLA</h3>
<p>为了保证应用程序能够在限定时间内交付其功能, 平台中的每个依赖关系都需要提供严格的边界。客户和服务商签订一个服务级别协议(SLA), 这是一个正式协商的合同,
在该合同中, 客户和服务商同意几个系统相关特性, 其中最突出的是客户对特定 API 的预期请求速率分布以及在这些条件下预期的服务延迟。一个简单的 SLA 的例子是, 一个服务承诺能够在峰值客户端负载为 500 QPS 的情况下, 保证 99.9％ 的请求响应时间不超过 300 ms。</p>
<p>在 Amazon 的去中心化面向服务的基础设施中, SLA 起着重要的作用。例如, 对一个电商网站的页面请求通常需要渲染引擎向超过 150 个服务发送请求, 然后才能返回结果。这些服务往往有多个依赖关系, 通常是其他服务, 因此应用程序的调用图中经常超过一层。为了保证页面渲染引擎能够维持页面交付的清晰界限, 调用链中的每个服务都必须遵循其 SLA。</p>
<p>在行业中, 构建面向性能的 SLA 的一个常见方法是使用<strong>平均值</strong>、<strong>中位数</strong>和<strong>预期方差</strong>来描述延迟。在 Amazon 中我们发现, 如果最终目标是要建立一个让<em>所有</em>而不是<em>大部分</em>客户都有良好体验的系统, 则这些指标还不够。例如, 如果广泛使用个性化技术, 则具有较长历史记录的客户则需要更多的处理, 这会影响分布位于高侧的性能。用 Average Latency 或者 Median Latency 的 SLA 无法解决这个问题。为了解决这个问题, Amazon 的 SLA 使用<strong>p999</strong>分位数。选择 p999 而不是更高的百分位数是基于成本效益分析得出的, 要继续提高性能, 成本会显著增加。亚马逊的经验证明, 这种 SLA 方案提供了更好的使用体验。</p>
<p>存储系统通常在确定服务的 SLA 中起着重要的作用, 尤其是在业务逻辑相对轻量级的情况下, 许多 Amazon 的服务就是这样。在这种情况下, 状态管理就成为服务 SLA 的主要组成部分之一。
Dynamo 的主要设计考虑之一是为服务提供对其系统属性(如持久性和一致性)的控制, 并让服务自行权衡功能、性能和成本效益之间的取舍。</p>
<h3 id="2-3-设计考虑因素"><a class="header-anchor-1" href="#2-3-设计考虑因素">#</a>2.3 设计考虑因素</h3>
<p>商业系统中使用的数据复制算法通常执行同步的副本协调, 以提供强一致的数据访问接口。为了达到这种<strong>一致性</strong>水平, 这些算法在某些故障场景下不得不牺牲交易数据的<strong>可用性</strong>。例如, 相对于处理不确定正确的结果, 直到绝对确定它是正确的为止, 数据才可以被使用。从早期复制数据库的工作开始, 就已知当处理网络故障的可能性时, 强一致性与高数据可用性不能同时实现。因此, 此类系统和应用程序需要了解在哪些条件下可以实现哪些属性。</p>
<p>对于容易发生服务器和网络故障的系统, 可以通过使用<strong>乐观复制技术</strong>来提高可用性, 在此过程中允许更改在后台传播到副本, 并且容忍并发、断开连接的工作。这种方法的挑战在于它可能导致<em>修改冲突</em>, 必须检测并解决这些更改。这种冲突解决过程引入了两个问题: <em>何时解决</em>以及<em>谁来解决</em>。
Dynamo 设计为<strong>最终一致性</strong>的数据存储；所有更新最终都会到达所有副本。</p>
<ol>
<li>
<p>一个重要的设计决策是决定<strong>何时执行</strong>解决更新冲突的过程, 即是否在读取或写入时解决冲突。许多传统的数据存储在写入期间执行冲突解决, 并保持读取操作简单。在这种系统中, 在给定时间点, 如果数据存储无法访问所有(或大多数)副本, 则可能拒绝写入操作。另一方面, Dynamo 目标的设计空间为持续可写的数据存储 (即数据存储对写入具有高度可用性)。对于亚马逊的某些服务而言, 拒绝客户更新可能会导致较差的客户体验。例如, 购物车服务必须允许客户在其购物车中添加和删除商品, 即使在网络故障和服务器故障期间也是如此。这一要求迫使我们把冲突解决的复杂性推到读取过程中, 以确保写入永远不会被拒绝。</p>
</li>
<li>
<p>下一个设计决策是冲突解决过程<strong>由谁执行</strong>。这可以由数据存储或应用程序完成。如果由数据存储进行冲突解决, 其选择就比较有限。在这种情况下, 数据存储只能使用简单的策略来解决冲突更新, 例如“最后写入者获胜”。另一方面, 由于应用程序知道数据模式, 它可以决定最适合其客户体验的冲突解决方法。例如, 维护客户购物车的应用程序可以选择将冲突版本“合并”, 并返回一个统一的购物车。尽管具有这种灵活性, 一些应用程序开发人员可能不想编写自己的冲突解决机制, 并将其推送到数据存储中, 而数据存储则会选择简单的方法, 如“最后写入者获胜”。</p>
</li>
</ol>
<p>设计中包含的其他关键原则是:</p>
<ul>
<li><strong>增量可扩展性</strong>: Dynamo 应该能够一次向外扩展一个存储主机(简称“节点”), 对系统运维和系统本身的影响最小。</li>
<li><strong>对称性</strong>: Dynamo 中的每个节点都应该具有与其同级节点相同的职责集；不应该有特殊的节点或节点承担特殊角色或额外的职责。在我们的经验中, 对称性简化了系统的部署和维护过程。</li>
<li><strong>去中心化</strong>: 是对称性的扩展, 设计应优先考虑分散的对等技术而不是集中控制。过去, 集中控制导致了停机, 并且目标是尽可能避免这种情况。这导致了一个更简单、更具可扩展性和可用性更强的系统。</li>
<li><strong>异质性</strong>: 系统需要能够利用其运行的基础设施中的异质性。例如, 工作分配必须与单个服务器的能力成比例。这在添加具有更高容量的新节点时至关重要, 而无需一次升级所有主机。</li>
</ul>
<h2 id="3-相关工作"><a class="header-anchor-1" href="#3-相关工作">#</a>3. 相关工作</h2>
<h3 id="3-1-p2p-系统"><a class="header-anchor-1" href="#3-1-p2p-系统">#</a>3.1 P2P 系统</h3>
<p>有几个对数据存储和分发问题进行研究的 P2P 系统。第一代 P2P 系统，如 Freenet 和 Gnutella1，主要用作文件共享系统。这些是无结构对等网络的例子，在这些网络中，对等节点之间的覆盖链接任意建立。在这些网络中，通常通过网络发送搜索查询以找到尽可能多的共享数据的对等节点。第二代 P2P 系统即广为人知的<em>结构化对等网络</em>。这些网络采用全局一致协议来确保任何节点都可以高效地将搜索查询路由到具有所需数据的某个对等节点。像 Pastry 和 Chord 这样的系统使用路由机制来保证可以在有限的跳数内回答查询。为了减少多跳路由引入的额外延迟，一些 P2P 系统采用了 <code>O(1)</code> 路由，每个对等节点都维护足够的路由信息，以便它可以在常数个跳数内将请求(访问数据项)路由到适当的对等节点。</p>
<p>基于这些路由覆盖层，构建了各种存储系统，例如 Oceanstore 和 PAST。
Oceanstore 提供了一个全球、事务性、持久的存储服务，支持对广泛复制数据进行序列化更新。为了允许并发更新并避免广域锁定固有的许多问题，它使用一种基于冲突解决的更新模型。冲突解决在[21]中引入以减少事务回滚的数量。
Oceanstore 通过处理一系列更新，选择它们之间的总排序，并然后按此顺序原子地应用它们。它是为一个数据在不可信基础设施上被复制的环境中设计的。相比之下，PAST 在 Pastry 之上提供了持久且不可变对象的简单抽象层。它假设应用程序可以在其上构建必要的存储语义(如可变文件)。</p>
<h3 id="3-2-分布式文件系统和数据库"><a class="header-anchor-1" href="#3-2-分布式文件系统和数据库">#</a>3.2 分布式文件系统和数据库</h3>
<p>为性能、可用性和持久性分配数据在文件系统和数据库系统社区中有广泛的研究。与仅支持扁平命名空间的 P2P 存储系统相比，分布式文件系统通常支持层次化的命名空间。</p>
<ul>
<li>像 Ficus 和 Coda 这样的系统通过牺牲一致性来实现高可用性而复制文件。更新冲突通常使用专门的冲突解决程序进行管理。</li>
<li>Farsite 系统 是一个不使用任何中央服务器(如 NFS)的分布式文件系统。Farsite 使用复制来实现高可用性和可扩展性。</li>
<li>Google 文件系统(GFS) 是另一个用于托管谷歌内部应用程序状态的分布式文件系统。GFS 采用简单的设计，只有一个主服务器来托管整个元数据，并将数据分成块并存储在块服务器上。</li>
<li>Bayou 是一个允许脱机操作且提供最终数据一致性的分布式关系型数据库系统。</li>
</ul>
<p>在这几个系统中，Bayou、Coda 和 Ficus 允许脱机操作，并且对网络分区和故障等问题具有鲁棒性。这些系统在冲突解决程序上有所不同。
Coda 和 Ficus 执行系统级别的冲突解决，而 Bayou 则允许应用程序级别的解决。然而，它们都保证最终一致性。与这些系统类似，Dynamo 允许读写操作即使在网络分区期间继续进行，并使用不同的冲突解决机制来解决更新冲突。</p>
<p>类似于 FAB 这样的分布式块存储系统将大对象分成较小的块并以高可用的方式存储每个块。与其他系统相比，在这种情况下，键值存储更合适，因为：</p>
<ul>
<li>(a) 键值存储旨在存储相对较小的对象(大小小于 1M)，</li>
<li>(b) 键值存储更容易根据应用进行配置。</li>
</ul>
<p>Antiquity 是一个广域分布式的存储系统，旨在处理多个服务器故障。它使用安全日志来保存数据完整性，将每个日志复制到多台服务器以确保持久性，并使用拜占庭容错协议来确保数据的一致性。相比之下，Antiquity 不专注于数据完整性和安全性问题，并且是为可信环境构建的。</p>
<p>Bigtable 是一种用于管理结构化数据的分布式存储系统。它维护一个稀疏的多维排序映射，并允许应用程序通过多个属性访问其数据。与 Bigtable 相比，Dynamo 的目标是仅需要键/值访问的应用程序，并且主要关注高可用性，即使在网络分区或服务器故障的情况下也不会拒绝更新。</p>
<p>传统的复制关系型数据库系统专注于保证复制数据的强一致性问题。尽管强一致性为应用程序编写者提供了方便的编程模型，但这些系统在可扩展性和可用性方面受到限制。由于它们通常提供强一致性的保证，因此这些系统无法处理网络分区。</p>
<h3 id="3-3-讨论"><a class="header-anchor-1" href="#3-3-讨论">#</a>3.3 讨论</h3>
<p>Dynamo 与上述去中心化存储系统在目标要求方面有所不同。</p>
<ol>
<li>Dynamo 主要针对需要<em>持续可写</em>的数据存储应用程序，这些应用程序不允许由于故障或并发写入而拒绝更新。这对于许多 Amazon 应用程序至关重要。</li>
<li>如前所述，Dynamo 是为单个管理域内的基础设施构建的，在该基础设施中所有节点都被假设为可信的。</li>
<li>使用 Dynamo 的应用程序不需要支持层次化的命名空间(许多文件系统的规范)或复杂的关联模式(由传统数据库支持)。</li>
<li>Dynamo 是为了满足对读取和写入操作至少 99.9％的要求，这些操作必须在几毫秒内完成。
<strong>为了满足这些严格的延迟要求，我们避免通过多个节点路由请求</strong>(这是几个分布式哈希表系统，例如 Chord 和 Pastry 所采用的典型设计)，这是因为<strong>多跳路由会增加响应时间的变异性，并且在更高百分位数时增加延迟</strong>。
Dynamo 可以被描述为零跳 DHT，其中每个节点在其本地维护足够的路由信息以直接将请求路由到适当的节点。</li>
</ol>
<h2 id="4-系统架构"><a class="header-anchor-1" href="#4-系统架构">#</a>4. 系统架构</h2>
<p>需要在生产环境中运行的存储系统架构非常复杂。除了实际的数据持久化组件外，该系统还需要具有可扩展且稳健的负载均衡、成员和故障检测、故障恢复、复制同步、过载处理、状态转移、并发性和作业调度、请求编排、请求路由、系统监控和报警以及配置管理解决方案。描述每个解决方案的细节是不可能的，因此本文重点介绍了 Dynamo 中使用的分布式系统技术的核心：分片、复制、版本控制、成员资格、故障处理和缩放。</p>
<table>
<thead>
<tr>
<th>问题</th>
<th>采用的解决方案技术</th>
<th>优势</th>
</tr>
</thead>
<tbody>
<tr>
<td>分片</td>
<td>一致性哈希</td>
<td>渐进可扩展性</td>
</tr>
<tr>
<td>持续可写(写高可用)</td>
<td>向量时钟</td>
<td>Version size isdecoupled fromupdate rates.</td>
</tr>
<tr>
<td>处理临时故障</td>
<td>Sloppy Quorum andhinted handoff</td>
<td>Provides highavailability anddurability guaranteewhen some of thereplicas are notavailable.</td>
</tr>
<tr>
<td>从永久故障中恢复</td>
<td>使用 Merkle 树的反熵</td>
<td>Synchronizesdivergent replicas inthe background.</td>
</tr>
<tr>
<td>成员和故障检测</td>
<td>基于 Gossip 的成员协议和故障检测</td>
<td>Preserves symmetryand avoids having acentralized registryfor storingmembership andnode livenessinformation.</td>
</tr>
</tbody>
</table>
<h3 id="4-1-系统接口"><a class="header-anchor-1" href="#4-1-系统接口">#</a>4.1 系统接口</h3>
<p>Dynamo 通过简单的接口存储与键关联的对象；它暴露了两个操作：get()和 put()。</p>
<ul>
<li>get(key)操作在存储系统中定位与键相关的对象副本，并返回单个对象或带有冲突版本的列表，以及上下文。</li>
<li>put(key，context，object)操作根据关联的键确定对象的副本应放置的位置，并将副本写入磁盘。</li>
</ul>
<p>上下文编码的是对象的系统元数据，对调用者是透明的，并包括诸如对象版本的信息。上下文信息与对象一起存储，以便系统可以验证提供的上下文对象的有效性。</p>
<p>Dynamo 将由调用者提供的键和对象都视为字节的不透明数组。它对键应用 MD5 散列以生成 128 位标识符，该标识符用于确定负责服务键的存储节点。</p>
<h3 id="4-2-数据分片算法"><a class="header-anchor-1" href="#4-2-数据分片算法">#</a>4.2 数据分片算法</h3>
<p><img src="image2.png" alt="alt text" /></p>
<p>Dynamo 的关键设计要求之一是它必须按增量方式扩展。这需要一种机制来动态地将数据分布在系统中的节点(即存储主机)上。
Dynamo 的分片方案依赖于<em>一致性哈希</em>来在多个存储主机之间分配负载。在一致性哈希中，哈希函数输出范围被处理为固定圆环空间或“环”(即最大哈希值会循环到最小哈希值)。每个系统中的节点都被分配一个随机值在这个空间内，代表其“位置”在环上。每个由键标识的数据项通过将数据项的键进行哈希以获得其在环上的位置，并然后顺时针沿着环找到第一个位置大于该数据项的位置的第一个节点而分配给一个节点。</p>
<p>因此，每个节点都负责环上其前一个节点和它之间的区域。</p>
<p>一致性哈希的优点是，节点的离开或到达仅影响其直接邻居，而其他节点不受影响。</p>
<p>基本一致性哈希算法存在一些挑战。</p>
<ol>
<li>环上的每个节点的随机位置分配导致数据和负载分布不均匀。</li>
<li>基本算法对节点性能差异视而不见。</li>
</ol>
<p>为了应对这些问题，Dynamo 使用了一种一致性哈希变体(类似于在[10, 20]中使用的那种)——虚拟节点：相对于将一个节点映射到圆圈中的单个点上，每个节点被分配到多个环上的点上。为此，Dynamo 使用了“虚拟节点”的概念。一个虚拟节点看起来像系统中的一个节点，但每个节点可以负责多个虚拟节点。简而言之，在系统中添加一个新的节点时，它会被分配到环上的多个位置(以后称为“令牌”)。
Dynamo 分区方案的微调过程将在第 6 节讨论。</p>
<p>使用虚拟节点具有以下优点：</p>
<ul>
<li>如果一个节点变得不可用(由于故障或例行维护)，由该节点处理的负载将均匀地分散到剩余可用节点上。</li>
<li>当一个节点再次可用或系统中添加了一个新节点时，新的可用节点将从其他可用节点接收大致相同数量的负载。</li>
<li>节点负责的虚拟节点数量可以根据其容量来决定，以考虑物理基础设施的异构性。</li>
</ul>
<h3 id="4-3-数据复制"><a class="header-anchor-1" href="#4-3-数据复制">#</a>4.3 数据复制</h3>
<p>为了实现高可用性和持久性，Dynamo 在多个主机上复制其数据。每个数据项都在 N 个主机上进行复制，其中 N 是一个实例级别的配置参数。每个键 k 都分配给一个<em>协调器节点</em>(如前所述)。协调器节点负责复制数据项到它应该属于的范围。除了本地存储每个范围内的键外，协调器节点还会将这些键复制到环形中的顺时针方向上的 N-1 个节点。最终系统中，每个节点对其与第 N 个前驱之间的环形区域负责。</p>
<p>负责存储特定键的节点列表称为<em>偏好列表</em>。系统被设计为每个节点都可以确定任何特定键的偏好列表。为了应对节点故障，偏好列表包含超过 N 个节点。注：在使用虚拟节点的情况下，可能第一个 N 继任者位置对于特定键由少于 N 个不同的物理节点拥有(即一个节点可能持有前 N 个位置中的多个)。为此，通过跳过环上的位置来构建偏好列表以确保列表仅包含不同的物理节点。</p>
<h3 id="4-4-数据版本控制"><a class="header-anchor-1" href="#4-4-数据版本控制">#</a>4.4 数据版本控制</h3>
<p>Dynamo 提供<em>最终一致性</em>，允许更新异步传播到所有副本。一个 put()调用可能在所有副本应用更新之前就返回给调用者，这可能导致后续的 get()操作可能返回一个旧的对象。如果没有失败，则有更新传播时间的上限。然而，在某些故障场景下(例如服务器停机或网络分区)，更新可能不会在一段时间内到达所有副本。</p>
<p>Amazon 平台中有一类应用程序可以容忍这种不一致，并且可以在这些条件下运行。例如，购物车应用程序要求“添加到购物车”的操作永远不会被遗忘或拒绝。如果最新的购物车状态不可用，并且用户对较旧版本的购物车进行了更改，则该更改仍然有意义并且应该保留。但同时它不应该取代当前不可用的购物车状态，而该状态本身可能包含应保留的变化。注：“添加到购物车”和“从购物车删除商品”操作都被翻译成 Dynamo 中的 put 请求。当客户想要将增加/删除购物车中的商品时，而且最新版本不可用，该变更会被施加到较旧版本中，并且不同的版本稍后会进行合并。</p>
<p>为了提供这种保证，Dynamo 将每个修改的结果视为数据的新的而且不可变的版本。它允许系统中同时存在多个对象的版本。大多数情况下，新版本会覆盖之前的版本(语法一致)，并且系统本身可以确定权威版本(语义一致)。然而，在失败和并发更新的情况下可能会发生分支版本，导致对象出现冲突版本。
<strong>在这种情况下，存储系统无法对同一对象的多个版本进行一致化处理，客户端必须执行一致化操作以将数据演进的多个分支合并回一个(语义一致)。</strong>
典型的合并操作示例是“合并”不同版本的客户购物车。使用这种一致化机制，“添加到购物车”的操作永远不会丢失。但是，被删除的商品可能会再次出现。</p>
<p>重要的是要理解某些故障模式可能会导致系统不仅有两份，而是多份相同的数据。在存在网络分区和节点故障的情况下进行更新可能导致对象具有不同的版本子历史记录，而该系统将来需要解决这个问题。这要求我们设计应用程序来明确承认同一数据的多个版本的可能性(以避免丢失任何更新)。</p>
<p>Dynamo 使用向量时钟来捕获同一对象的不同版本之间的因果关系。一个向量时钟实际上是一个(节点，计数器)对的列表。每个对象的所有版本都与一个向量时钟相关联。通过检查它们的向量时钟，可以确定两个对象的版本是否在并行分支上或具有因果顺序。如果第一个对象的时钟上的计数器小于等于第二个时钟中的所有节点，则第一个是第二个的祖先，并且可以被遗忘。否则，这两个更改被认为是冲突并且需要进行协调。</p>
<p>在 Dynamo 中，当客户端希望更新对象时，它必须指定正在更新哪个版本。这是通过传递先前读取操作获得的上下文来完成的，该上下文中包含向量时钟信息。处理读请求时，如果 Dynamo 访问了多个无法语法上协调的分支，它将返回所有叶子对象，并在上下文中包含相应的版本信息。使用此上下文进行更新被认为是已协调了不同的版本，并且分支会合并为一个新版本。</p>
<p><img src="image.png" alt="alt text" /></p>
<p>为了说明向量时钟的使用，让我们考虑上图所示的例子。客户端写入新对象。处理此键的节点(假设是 Sx)增加其序列号，并将其用于创建数据的向量时钟。现在系统拥有对象 D1 及其关联的时钟<code>[(Sx，1)]</code>。客户端更新该对象。假设同一节点也处理了这个请求。现在系统还拥有对象 D2 及其关联的时钟<code>[(Sx，2)]</code>。
D2 从 D1 继承而来，因此会覆盖 D1，但是可能在尚未看到 D2 的节点上仍然存在 D1 的副本。让我们假设相同的客户端再次更新该对象并由不同的服务器(假设是 Sy)处理请求。现在系统拥有数据 D3 及其关联的时钟<code>[(Sx，2)，(Sy，1)]</code>。</p>
<p>接下来假设一个不同的客户端读取 D2，然后尝试更新它，并且另一个节点(说 Sz)进行写入。现在系统中有 D4(D2 的后代)，其版本时钟为<code>[(Sx，2)，(Sz，1)]</code>。一个知道 D1 或 D2 的节点，在收到 D4 及其时钟后，可以确定 D1 和 D2 被新数据覆盖并可以进行垃圾回收。一个知道 D3 并且接收 D4 的节点会发现它们之间没有因果关系。换句话说，D3 和 D4 中的变化在彼此之间没有反映出来。这两个版本的数据必须保持并呈现给客户端(在读取时)以实现语义上的协调。</p>
<p>现在假设一些客户端读取了 D3 和 D4(上下文将反映这两个值都是通过读取找到的)。读取的上下文是 D3 和 D4 时钟的摘要，即<code>[(Sx, 2)，(Sy, 1)，(Sz, 1)]</code>。如果客户端执行协调并节点 Sx 协调写入，则 Sx 会更新其时钟中的序列号。新数据 D5 将具有以下时钟：<code>[(Sx,3)，(Sy, 1)，(Sz, 1)]</code>。</p>
<p>向量时钟的一个可能的问题是，如果许多服务器协调对同一个对象的写入，则向量时钟的大小可能会增长。在实践中，这不太可能，因为写操作通常由偏好列表中前 N 个节点中的一个处理。在网络分区或多个服务器故障的情况下，写请求可能会由不在偏好列表中前 N 个节点的节点处理，导致矢量时钟的大小增长。在这种情况下，限制矢量时钟的大小是可取的。为此，Dynamo 采用了以下计时器截断方案：与每个(node，counter)对一起，Dynamo 存储一个时间戳，指示节点最后一次更新数据项的时间。当矢量时钟中的(node，counter)对的数量达到阈值(例如 10)时，最旧的一对将从时钟中删除。显然，这种截断方案会导致合并过程中的效率低下，因为后代关系无法准确推导出来。然而，在生产环境中尚未出现这个问题，因此这个问题还没有得到彻底调查。</p>
<h3 id="4-5-执行-get-和-put-操作"><a class="header-anchor-1" href="#4-5-执行-get-和-put-操作">#</a>4.5 执行 get() 和 put()操作</h3>
<p>Dynamo 中的任何存储节点都可接收客户端的 get 和 put 操作。在本节中，为了简单起见，我们描述了这些操作如何在无故障环境中执行，并且在下一节中我们将描述在发生故障期间读写操作是如何执行的。</p>
<p>两种操作(获取和放置)都是通过使用 Amazon 的基础设施特定请求处理框架 通过 HTTP 进行调用。客户端可以使用的两个策略是：</p>
<ol>
<li>将其请求路由到一个通用 Proxy，该 Proxy 将根据负载信息选择节点
<ul>
<li>👍 客户端不需要在应用程序中链接任何与 Dynamo 相关的代码</li>
</ul>
</li>
<li>使用分区感知客户端库直接将请求路由到适当的协调节点。
<ul>
<li>👍 可以实现更低的延迟，因为它跳过了可能的转发步骤</li>
</ul>
</li>
</ol>
<p>处理读写操作的节点被称为协调节点。通常，这是偏好列表中前 N 个节点中的第一个。如果请求通过 Proxy 接收，则访问密钥的请求可能会路由到环形结构中的任何随机节点。在这种情况下，如果请求的密钥的偏好列表中没有该节点，则接收到请求的节点不会协调它。相反，该节点将请求转发给偏好列表中前 N 个节点中的第一个。</p>
<p>读写操作涉及首选列表中的前 N 个健康节点，跳过那些已下线或不可访问的节点。当所有节点都处于健康状态时，会访问一个键的首选列表中排名最高的 N 个节点。在出现节点故障或网络分区的情况下，会访问首选列表中排名较低的节点。</p>
<p>为了保持其副本的一致性，Dynamo 使用类似于在多数系统中使用的同步协议。该协议有两个关键可配置值：R 和 W。</p>
<ul>
<li>R 是必须参与成功读取操作的节点的最小数量</li>
<li>W 是必须参与成功写入操作的节点的最小数量</li>
</ul>
<p>将 R 和 W 设置为 <code>R + W &gt; N</code> 会生成一个类似多数系统的系统。在这个模型中，get(或 put)操作的延迟由 R(或 W)中的最慢副本决定。因此，通常配置时会选择 <code>R + W &lt; N</code>，以提供更好的延迟。</p>
<p>在收到对键的 put()请求时，协调器生成新版本的向量钟，并将新版本本地写入。然后，协调器发送新版本(包括新向量时钟)发送到 N 个最高排名的可访问节点。如果至少有 W-1 个节点响应，则写入操作被认为是成功的。</p>
<p>同样，对于一个 get()请求，协调器从首选列表中该键的 N 个最高排名可访问节点中请求该键的所有现有版本的数据，并且在等待 R 响应后返回结果给客户端。如果协调器最终收集了多个数据版本，则它会返回所有认为与当前版本无关的版本。然后将这些不同版本进行合并，并将合并后的版本写回。</p>
<h3 id="4-6-处理失效-提示式移交"><a class="header-anchor-1" href="#4-6-处理失效-提示式移交">#</a>4.6 处理失效: 提示式移交</h3>
<p>如果 Dynamo 使用传统的多数派方法，那么在服务器故障和网络分区期间将不可用，并且即使在最简单的故障条件下也会降低持久性。为了纠正这一点，它不强制执行严格的多数派成员资格，而是使用“松散的多数派”；所有读写操作都在首选列表中的前 N 个健康节点上进行，这些节点可能不是一致哈希环中遇到的第一个 N 个节点。</p>
<p>考虑图 2 中 <code>N = 3</code> 的 Dynamo 配置示例。在此示例中，如果在写操作期间节点 A 暂时不可用或无法访问，则原本在 A 上的数据的副本将被发送到节点 D。这是为了保持所需的可用性和持久性保证而进行的操作。发送给 D 的副本将在其元数据中包含一个提示，建议哪个节点是该副本的预期接收者(在这种情况下为 A)。接收到暗示副本的节点将将其保存在一个单独的地方，该地方定期扫描。检测到 A 已恢复后，D 会将尝试向 A 交付副本。一旦传输成功，D 可以从其本地存储中删除对象，而不必减少系统中的总副本数量。</p>
<p>使用提示式移交，Dynamo 确保读写操作不会因临时节点或网络故障而失败。需要最高可用性的应用程序可以将 W 设置为 1，这保证只要系统中的单个节点持久地将密钥写入其本地存储器，则写请求就会被接受。因此，只有所有节点都不可用，才会拒绝写入请求。然而，在实践中，大多数亚马逊服务在生产环境中设置了更高的 W 以满足所需的耐用性水平。有关配置 N、R 和 W 的更详细讨论请参见第 6 节。</p>
<p>高可用存储系统必须能够处理整个数据中心的故障。数据中心故障可能由于停电、冷却失败、网络故障或自然灾害引起。
Dynamo 通过配置，使得每个对象在多个数据中心进行复制。本质上，键的首选列表被构造以使存储节点分布在多个数据中心中。这些数据中心通过高速网络连接起来。这种跨多个数据中心复制的方法允许我们处理整个数据中心的故障而不会出现数据中断。</p>
<h3 id="4-7-处理永久性失效-副本同步"><a class="header-anchor-1" href="#4-7-处理永久性失效-副本同步">#</a>4.7 处理永久性失效: 副本同步</h3>
<p>提示式移交在系统成员流失率低且节点故障是暂时的情况下效果最好。有些场景下，提示副本可能在移交给原始节点之前也不可用。为了处理持久性方面的其他威胁，Dynamo 实现了一个反熵(复制同步)协议来保持复制节点同步。</p>
<p>为了更快地检测副本之间的不一致性和最小化传输的数据量，Dynamo 使用 Merkle 树。
Merkle 树是一种哈希树，其中叶子是单个键值的哈希。树中更高层次的父节点是其子节点的哈希。
Merkle 树的主要优点在于每个分支可以独立检查而无需节点下载整个树或整个数据集。此外，Merkle 树有助于减少在检查副本之间的一致性时需要传输的数据量。例如，如果两个树根的哈希值相等，则树中的叶节点的值也相等，并且节点不需要同步。否则，这意味着某些副本的值不同。在这种情况下，节点可能交换孩子的哈希值并继续进行直到达到树的叶子，在这一点上主机可以识别“脱节”的密钥。
Merkle 树减少了用于同步所需传输的数据量，并降低了反熵过程中读取磁盘的数量。</p>
<p>Dynamo 使用 Merkle 树来反熵，如下所示：每个节点维护一个单独的 Merkle 树，以覆盖它所托管的关键范围(虚拟节点所涵盖的一组密钥)。这允许节点比较它们是否在关键范围内具有最新的密钥。在这个方案中，两个节点交换它们共同拥有的密钥范围对应的 Merkle 树根。随后，通过上面描述的树遍历方案，节点确定是否有任何差异并执行适当的同步操作。这种方案的一个缺点是，在节点加入或离开系统时，许多关键范围会发生变化，因此需要重新计算树。然而，这个问题可以通过第 6.2 节中描述的细化分区方案得到解决。</p>
<h3 id="4-8-成员和故障检测"><a class="header-anchor-1" href="#4-8-成员和故障检测">#</a>4.8 成员和故障检测</h3>
<h4 id="4-8-1-环形成员检测"><a class="header-anchor-1" href="#4-8-1-环形成员检测">#</a>4.8.1 环形成员检测</h4>
<p>在亚马逊的环境中，由于故障和维护任务而导致的节点中断通常是短暂的，但也可能会持续更长的时间。节点中断很少意味着永久离开，因此不应该导致分区分配重新平衡或无法访问副本的修复。
<strong>同样，人为错误可能导致无意中启动新的 Dynamo 节点</strong>。因此，使用明确机制来增加和删除 Dynamo 环中的节点是合适的。管理员通过命令行工具或浏览器连接到一个 Dynamo 节点，并向该节点发出加入或离开环的成员资格更改指令。请求服务的节点将成员资格更改及其发布时间写入持久存储。成员资格更改形成历史记录，因为节点可以多次被添加和删除。基于 Gossip 协议传播成员资格更改并保持最终一致的成员资格视图。每个节点每秒都会随机选择一个 Peer 进行联系，两个节点高效地协调它们的持久成员资格更改历史记录。</p>
<p>当 Dynamo 节点首次启动时，它先选择其令牌集(一致哈希空间中的虚拟节点)并映射节点到各自的令牌集中。该映射会持久化在磁盘上，最初仅包含本地节点和令牌集。在相同通信交换中，不同 Dynamo 节点存储的映射会进行合并以解决成员变更历史记录。因此，分片和放置信息也会通过基于 Gossip 协议传播，并且每个存储节点都了解其 Peer 处理的令牌范围。这使每个节点能够直接将键的读写操作转发到正确的节点集合。</p>
<h4 id="4-8-2-外部发现"><a class="header-anchor-1" href="#4-8-2-外部发现">#</a>4.8.2 外部发现</h4>
<p>上述机制可能会暂时导致逻辑上分区的 Dynamo 环。例如，管理员可以联系节点 A 以将 A 加入到环中，然后联系节点 B 以将 B 加入到环中。在这种情况下，节点 A 和 B 都会认为自己是环的一部分，但它们都不会立即意识到对方的存在。为了防止逻辑分区，一些 Dynamo 节点扮演种子的角色。种子是通过外部机制发现的节点，并且所有节点都知道这些种子。因为最终所有节点都将与种子进行成员身份匹配，因此逻辑分区的可能性极低。种子可以从静态配置或配置服务中获取。通常，种子节点是 Dynamo 环中的完全正常工作的节点。</p>
<h4 id="4-8-3-失败检测"><a class="header-anchor-1" href="#4-8-3-失败检测">#</a>4.8.3 失败检测</h4>
<p>在 Dynamo 中失败检测用于避免在 get()、put()、分片迁移和提示副本传输期间尝试与不可达的对等方进行通信。为了防止通信失败，使用纯粹本地的故障检测概念完全足够：节点 A 可能认为节点 B 已失败，即使 B 对节点 C 的消息响应。当 Dynamo 环中有稳定的客户端请求速率时，在节点 B 失败且不响应消息的情况下，节点 A 很快就会发现节点 B 是无响应的；然后节点 A 使用备用节点来服务映射到 B 的分片的请求；定期重试 B 以检查其恢复情况。在没有客户端请求驱动两个节点之间的流量的情况下，任何节点都不需要知道另一个是否可达和响应。</p>
<p>去中心化故障检测协议使用一种简单的 Gossip 式协议，使系统中的每个节点都能了解到其他节点的到达(或离开)。有关去中心化故障检测器及其影响准确性的参数的详细信息，请参阅[8]。
Dynamo 的早期设计使用去中心化故障检测器来维护全局一致的失败状态视图。后来确定了明确的节点加入和离开方法消除了对全局失败状态视图的需求。这是因为通过明确的节点加入和离开方法通知节点永久性节点添加和删除，并且当节点无法与其他节点通信时(在转发请求时)，由单个节点检测临时节点故障。</p>
<h3 id="4-9-添加-删除存储节点"><a class="header-anchor-1" href="#4-9-添加-删除存储节点">#</a>4.9 添加/删除存储节点</h3>
<p>当一个新的节点(例如 X)被添加到系统中时，它会分配一些随机散落在环上的令牌。对于分配给节点 X 的每个键范围，可能有多个节点(小于或等于 N)目前负责处理其令牌范围内的键。由于将键范围分配给 X，一些现有节点不再需要某些键，并且这些节点将这些键转移到 X。让我们考虑一个简单的自举场景，其中节点 X 添加到图 2 中所示的环之间 A 和 B。当 X 添加到系统时，它负责存储键在范围<code>(F,G]</code>, <code>(G,A]</code> 和 <code>(A,X]</code> 。因此，节点 B、C 和 D 不再需要存储这些相应的范围中的键。因此，节点 B、C 和 D 将提供并确认从 X 转移适当的键集。当一个节点从系统中删除时，键的重新分配发生在相反的过程。</p>
<p>操作经验表明，这种方法将密钥分发的负载均匀地分布在存储节点上，这对于满足延迟要求和确保快速启动至关重要。最后，在源和目的地之间添加确认轮次，以确保目的地节点不会接收给定密钥范围内的任何重复传输。</p>
<h2 id="5-实现"><a class="header-anchor-1" href="#5-实现">#</a>5. 实现</h2>
<p>在 Dynamo 中，每个存储节点都有三个主要的软件组件：请求协调、成员资格和故障检测以及本地持久性引擎。所有这些组件都是用 Java 实现的。</p>
<p>Dynamo 的本地持久性组件允许使用不同的存储引擎。正在使用的引擎包括：</p>
<ul>
<li>Berkeley 数据库（BDB）事务数据存储</li>
<li>BDB Java 版</li>
<li>MySQL</li>
<li>具有持久存储后端的内存缓冲区</li>
</ul>
<p>设计可插拔持久性组件的主要原因是选择最适合应用程序访问模式的存储引擎。例如，BDB 可以处理通常在数十 KB 范围内的对象，而 MySQL 则可以处理更大的对象。应用程序根据其对象大小分布选择 Dynamo 的本地持久性引擎。大多数 Dynamo 生产实例都使用 BDB 事务数据存储。</p>
<p>请求协调组件建立在事件驱动的消息基础结构之上，该消息处理管道被划分为多个阶段类似于 SEDA 架构。所有通信都使用 Java NIO 通道实现。协调器通过从一个或多个节点（读取情况下）收集数据或存储数据在一个或多个节点上（写入情况下），代表客户执行读取和写入请求。每个客户端请求都会导致接收客户端请求的节点创建状态机。状态机包含所有用于识别负责键的节点、发送请求、等待响应、可能进行重试、处理答复并包装响应给客户的逻辑。每个状态机实例仅处理一个客户端请求。例如，读操作实现以下状态机：</p>
<ol>
<li>向节点发送读取请求</li>
<li>等待所需响应的最小数量</li>
<li>如果在指定的时间范围内收到太少的回复，则失败请求</li>
<li>否则收集所有数据版本，并确定要返回的版本</li>
<li>如果启用版本控制，则执行语法一致性和生成包含所有剩余版本的不可见写上下文。</li>
</ol>
<p>为了简洁起见，错误处理和重试状态被省略了。</p>
<p>在读响应已返回给调用者后，状态机等待一小段时间以接收任何未响应的响应。如果在任何响应中返回了过期版本，协调器会更新这些节点的最新版本。此过程称为读取修复，因为它会在机会时间修复错过最近更新的副本，并且可以减轻反熵协议不必执行该操作的压力。</p>
<p>如前所述，写请求由首选列表中前 N 个节点中的一个协调。尽管总是希望将第一个节点作为前 N 个节点来协调写入操作从而在单个位置上序列化所有写入操作是理想的，但这种方法导致负载不均匀分布，进而违反了服务水平协议（SLA）。这是因为请求负载不是在整个对象之间均匀分布的。为了应对这种情况，在首选列表中的任何前 N 个节点都可以协调写入操作。特别是，由于每个写通常跟随读取操作，因此选择写入协调器为回复最快到先前读取操作的节点，该读取操作存储在请求上下文中。这种优化使我们能够选择读取了先前读取操作的数据所在的节点，从而增加了获得“读取你的写入”的一致性机会。它还减少了请求处理性能的变异性，这提高了 p999 的性能。</p>
<p>Dynamo 被几个具有不同配置的服务使用。这些实例通过版本对齐逻辑和读写多数特征而有所不同。以下是在 Dynamo 中使用的主模式：</p>
<ul>
<li>业务逻辑特定的对齐：这是 Dynamo 的一个流行用例。每个数据对象在多个节点上进行复制。如果版本不同，客户端应用程序会执行自己的对齐逻辑。前面讨论过的购物车服务就是一个此类别中的典型例子。其业务逻辑通过合并客户购物车的不同版本来对齐对象。</li>
<li>基于时间戳的对齐：此案例与前面的一个案例不同之处仅在于对齐机制。在存在分歧版本的情况下，Dynamo 会执行简单的基于时间戳的“最后写入胜出”逻辑；即选择物理时间戳值最大的对象作为正确版本。维护客户会话信息的服务是一个使用这种模式的好例子。</li>
<li>高性能读取引擎：虽然 Dynamo 是为“始终可写入”的数据存储而构建的，但一些服务正在调整其共识特性并将其用作高性能读取引擎。通常，这些服务具有较高的读请求率和少量更新。在这种配置中，通常 R 设置为 1，W 设置为 N。对于这些服务，Dynamo 提供将数据在多个节点之间分区和复制的能力，从而实现增量扩展。其中一些实例充当了存储在更重负载后备存储中的数据的权威持久缓存。维护产品目录和服务项目的服务属于此类别。</li>
</ul>
<p>Dynamo 的主要优势在于，其客户端应用程序可以调整 N、R 和 W 的值以达到所需的性能、可用性和持久性水平。例如，N 的值决定了每个对象的持久性。Dynamo 用户通常使用的 N 值为 3。</p>
<p>W 和 R 的值会影响对象可用性、耐用性和一致性。例如，如果将 W 设置为 1，则只要系统中至少有一个节点可以成功处理写入请求，系统就不会拒绝任何写入请求。然而，低值的 W 和 R 可能会增加不一致的风险，因为即使大多数副本未处理写入请求，也会认为写入请求成功并将其返回给客户端。这也引入了一个持久性的脆弱窗口，当写入请求成功返回给客户端时，尽管它仅在少数节点上被持久化。</p>
<h2 id="6-经验和教训"><a class="header-anchor-1" href="#6-经验和教训">#</a>6. 经验和教训</h2>
<h3 id="6-1-平衡性能和持久性"><a class="header-anchor-1" href="#6-1-平衡性能和持久性">#</a>6.1 平衡性能和持久性</h3>
<h3 id="6-2-确保均匀负载分布"><a class="header-anchor-1" href="#6-2-确保均匀负载分布">#</a>6.2 确保均匀负载分布</h3>
<h3 id="6-3-偏离的版本-何时以及有多少"><a class="header-anchor-1" href="#6-3-偏离的版本-何时以及有多少">#</a>6.3 偏离的版本: 何时以及有多少</h3>
<h3 id="6-4-客户端驱动或服务器驱动协调"><a class="header-anchor-1" href="#6-4-客户端驱动或服务器驱动协调">#</a>6.4 客户端驱动或服务器驱动协调</h3>
<h3 id="6-5-背景任务与前景任务的平衡"><a class="header-anchor-1" href="#6-5-背景任务与前景任务的平衡">#</a>6.5 背景任务与前景任务的平衡</h3>
<h3 id="6-6-讨论"><a class="header-anchor-1" href="#6-6-讨论">#</a>6.6 讨论</h3>
<h2 id="7-结论"><a class="header-anchor-1" href="#7-结论">#</a>7. 结论</h2>
]]></content>
      <categories>
        <category>database-system</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>分布式系统</tag>
        <tag>K-V 存储</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle APEX学习</title>
    <url>/2020/12/07/oracle-apex/</url>
    <content><![CDATA[<h2 id="前言"><a class="header-anchor-1" href="#前言">#</a>前言</h2>
<p>什么垃圾软件, 毁我人生!!</p>
<h2 id="安装"><a class="header-anchor-1" href="#安装">#</a>安装</h2>
<p>略</p>
<h2 id="启动"><a class="header-anchor-1" href="#启动">#</a>启动</h2>
<p>启动 apex 安装到的数据库(PDB 默认不会自动 open)</p>
<p>启动 ords 服务</p>
<p><code>$ java -jar ords.war</code></p>
<h2 id="怎么修改密码"><a class="header-anchor-1" href="#怎么修改密码">#</a>怎么修改密码</h2>
<p><code>SQL&gt; @apxchpwd.sql</code></p>
]]></content>
      <categories>
        <category>database-system</category>
      </categories>
  </entry>
  <entry>
    <title>Oracle数据库学习</title>
    <url>/2020/12/03/oracledb/</url>
    <content><![CDATA[<h1>前言</h1>
<p>参考资料:</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vZW4vZGF0YWJhc2Uvb3JhY2xlL29yYWNsZS1kYXRhYmFzZS9pbmRleC5odG1s">Oracle官方文档<i class="fa fa-external-link-alt"></i></span></p>
<h1>Schema</h1>
<p>Schema是表, 索引, 存储过程等等数据库对象(DB Object)的存储容器</p>
<p>用户与Schema之间是<strong>一对一</strong>的关系</p>
<p>例如: 访问用户A的xxx对象就通过 <code>A.xxx</code></p>
<p><img src="user-schema-tables.png" alt="" /></p>
<h1>Oracle 表空间</h1>
<p>表空间是逻辑上, 存放数据表的容器</p>
<p>每张表一定属于某个表空间</p>
<p>每个用户(Schema)可以拥有多个表空间, 而且都有一个默认表空间</p>
<p>用户之间可以通过共享表空间的方式共享数据表</p>
<p>物理上, 表空间的存储可能不是连续的</p>
<h1>PL/SQL</h1>
<ul>
<li>A primary benefit of PL/SQL is the ability to store application logic in the database itself.</li>
</ul>
<h1>Oracle 体系结构 (重要)</h1>
<ul>
<li>Oracle Server = Oracle Instance + Oracle Database</li>
</ul>
<h2 id="1-oracle实例-oracle-instance"><a class="header-anchor-1" href="#1-oracle实例-oracle-instance">#</a>1. Oracle实例 (Oracle Instance)</h2>
<p>Oracle Instance = SGA(system global area) + Background Process</p>
<p>是一组 <strong>OS进程(线程)和一些内存(SGA)</strong> 的总称</p>
<p>可以用来mount和open一个数据库</p>
<p>一个实例在其生存期中最多只能装载和打开一个数据库。要想再打开这个（或其他）数据库，必须先丢弃这个实例，并创建一个新的实例。</p>
<p>一个数据库实例的状态分为以下几种</p>
<ul>
<li>
<p><code>started</code></p>
</li>
<li>
<p><code>mounted</code></p>
</li>
<li>
<p><code>open</code></p>
</li>
<li>
<p><code>close</code></p>
</li>
<li>
<p><code>mounted</code></p>
</li>
<li>
<p><code>open</code></p>
</li>
</ul>
<h3 id="started-状态"><a class="header-anchor-1" href="#started-状态">#</a><code>started</code> 状态</h3>
<p>在执行<code>startup nomount</code>命令后, Oracle会执行以下操作, 之后实例会进入<code>started</code>状态, 此时实例还未绑定数据库</p>
<ul>
<li>
<p>读取配置文件</p>
</li>
<li>
<p>分配<code>SGA</code></p>
</li>
<li>
<p>启动后台进程</p>
</li>
<li>
<p>打开一些用于记录的文件</p>
</li>
</ul>
<h3 id="mounted-状态"><a class="header-anchor-1" href="#mounted-状态">#</a><code>mounted</code> 状态</h3>
<p>在执行<code>startup mount</code>或者<code>alter database mount</code>命令后, 实例会进入<code>mounted</code>状态, 对应数据库的open_mode也是<code>mounted</code>。</p>
<p>数据库打开后, 执行<code>alter database close</code>命令后, 实例也会进入<code>mounted</code>状态, 对应数据库的open_mode也是<code>mounted</code>。</p>
<p>此时实例与数据库建立了联系, 但是只有DBA能够访问数据库。</p>
<h3 id="open-状态"><a class="header-anchor-1" href="#open-状态">#</a><code>open</code> 状态</h3>
<p>在执行<code>startup</code>或者<code>alter database open</code>命令后, 实例会进入<code>open</code>状态。</p>
<p>此时实例与数据库建立了联系, 数据库完全启动, 普通用户也可以访问数据库。</p>
<h2 id="2-oracle数据库-oracle-database"><a class="header-anchor-1" href="#2-oracle数据库-oracle-database">#</a>2. Oracle数据库 (Oracle Database)</h2>
<p>Oracle Database = Controlfile + datafile + logfile + spfile + …</p>
<p>是存储在<strong>磁盘</strong>上的<strong>一组数据文件</strong>的集合</p>
<p>一般来说, 一个数据库上只有一个实例对其进行操作</p>
<p>但是也有例外: RAC（Real Application Clusters）就允许在集群环境中的多台计算机上操作，这样就可以有多台实例同时装载并打开一个数据库（位于一组共享物理磁盘上）</p>
<p>例外2: 容器式数据库</p>
<h2 id="3-oracle数据库和oracle实例的关系"><a class="header-anchor-1" href="#3-oracle数据库和oracle实例的关系">#</a>3. <em>Oracle数据库</em>和<em>Oracle实例</em>的关系</h2>
<ol>
<li>
<p>一个实例一生只能够装载及打开一个数据库</p>
</li>
<li>
<p>一个数据库能够被多个实例装载并打开(RAC)</p>
</li>
<li>
<p>每个运行着的数据库一定与至少一个实例关联</p>
</li>
</ol>
<p><img src="instance-and-database.png" alt="" /></p>
<p>Oracle数据库与实例的启动过程</p>
<p><img src="startup-sequence.png" alt="" /></p>
<p>Oracle数据库与实例的关闭过程</p>
<p><img src="shutdown-sequence.png" alt="" /></p>
<h1>常用命令</h1>
<ul>
<li>
<p>名称, 版本信息查看</p>
<ul>
<li>
<p>查询数据库版本信息</p>
<pre><code>`SQL&gt; select * from v$version;`
</code></pre>
</li>
<li>
<p>查看数据库名称</p>
<pre><code>`SQL&gt; show parameter db_name;`
</code></pre>
</li>
<li>
<p>查看数据库服务名</p>
<pre><code>`SQL&gt; show parameter service_names;`
</code></pre>
</li>
<li>
<p>查询全局数据库名称</p>
<pre><code>`SQL&gt; select * from global_name;`
</code></pre>
</li>
</ul>
</li>
<li>
<p>数据库实例 (Instance)</p>
<ul>
<li>
<p>查询当前数据库实例名称</p>
<pre><code>`SQL&gt; select instance_name from v$instance;`
</code></pre>
</li>
<li>
<p>查看当前数据库实例状态(open/mount等)</p>
<pre><code>`SQL&gt; select status from v$instance;`
</code></pre>
</li>
<li>
<p>查看数据库实例启动时间</p>
<pre><code>`SQL&gt; SELECT TO_CHAR(STARTUP_TIME,'MON-DD-RR HH24:MI:SS') AS &quot;Inst Start Time&quot; FROM V$INSTANCE;`
</code></pre>
</li>
<li>
<p>创建一个新的数据库实例、加载数据库、打开数据库 (需要DBA权限)</p>
<pre><code>`SQL&gt; startup [nomount | mount | open];`
</code></pre>
</li>
<li>
<p>关闭实例绑定的数据库、卸载数据库、结束当前实例 (需要DBA权限)</p>
<pre><code>`SQL&gt; shutdown [normal | transactional | immediate];`
</code></pre>
</li>
<li>
<p>关闭实例绑定的数据库、卸载数据库</p>
<pre><code>`SQL&gt; alter database close;`
</code></pre>
</li>
<li>
<p>加载数据库/打开数据库</p>
<pre><code>`SQL&gt; alter database [mount | open];`
</code></pre>
</li>
</ul>
</li>
<li>
<p>数据库设置, 统计信息等</p>
<ul>
<li>
<p>查询数据库打开模式(mounted/open/read write)</p>
<pre><code>`SQL&gt; select open_mode from v$database;`
</code></pre>
</li>
<li>
<p>查看数据库DBF文件位置</p>
<pre><code>`SQL&gt; select name from v$datafile;`
</code></pre>
</li>
<li>
<p>查询数据文件状态</p>
<pre><code>`SQL&gt; select file#,name,status,enabled,checkpoint_change# from v$datafile;`
</code></pre>
</li>
<li>
<p>查询数据文件位置</p>
<pre><code>`SQL&gt; select name from v$datafile;`
</code></pre>
</li>
<li>
<p>查询数据文件（表空间）大小</p>
<pre><code>`SQL&gt; select sum(bytes)/1024/1024/1024 as GB from v$datafile;`
</code></pre>
</li>
<li>
<p>查询有效数据大小</p>
<pre><code>`SQL&gt; select sum(bytes)/1024/1024/1024 as GB from dba_segments;`
</code></pre>
</li>
<li>
<p>查看当前库的所有数据表</p>
<pre><code>`SQL&gt; select TABLE_NAME from all_tables;`
</code></pre>
</li>
</ul>
</li>
<li>
<p>可插拔数据库 (PDB) 管理</p>
<ul>
<li>
<p>查看数据库是CDB还是传统DB</p>
<pre><code>`SQL&gt; select name, cdb, open_mode, con_id from v$database;`
</code></pre>
</li>
<li>
<p>查看当前容器 (CDB) 名</p>
<pre><code>`SQL&gt; show con_name;`
</code></pre>
</li>
<li>
<p>列举当前容器中的所有PDB以及状态</p>
<pre><code>`SQL&gt; select con_id, dbid, guid, name, open_mode from v$pdbs;`
</code></pre>
</li>
<li>
<p>切换到某个PDB</p>
<pre><code>`SQL&gt; alter session set container=&lt;PDB&gt;;`
</code></pre>
</li>
<li>
<p>启动PDB数据库</p>
<pre><code>`SQL&gt; alter pluggable database &lt;PDB&gt; open;`

或者

`SQL&gt; alter session set container=&lt;PDB&gt;;`
`SQL&gt; startup`
</code></pre>
</li>
<li>
<p>关闭PDB数据库</p>
<pre><code>`SQL&gt; alter pluggable database &lt;PDB&gt; close;`
</code></pre>
</li>
</ul>
</li>
<li>
<p>用户管理</p>
<ul>
<li>创建用户</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>database-system</category>
      </categories>
  </entry>
  <entry>
    <title>Bigtable: A Distributed Storage System for Structured Data 论文阅读</title>
    <url>/2025/02/27/bigtable-a-distributed-storage-system/</url>
    <content><![CDATA[<p>发表于 OSDI’06</p>
<h2 id="0-摘要"><a class="header-anchor-1" href="#0-摘要">#</a>0. 摘要</h2>
<p>Bigtable 是一个分布式存储系统，用于管理结构化数据，能够扩展到巨大的规模：PB 级别的数据，数千台机器。
Google 的很多项目都保存在 Bigtable 中，包括网页索引，Google Earth 和 Google Finance。</p>
<h2 id="1-引言"><a class="header-anchor-1" href="#1-引言">#</a>1. 引言</h2>
<p>Bigtable 从很多方面像一个数据库：它与数据库有很多类似的策略。并行数据库，内存数据库已经实现了缩放性和高性能，但是 Bigtable 提供了不同的接口。
Bigtable 不支持完整的关系模型；取而代之，它提供一个简单的数据模型，还支持动态改变数据布局和格式。而且允许客户端对底层存储的数据的局部性进行推理。数据使用行和列名进行索引，行列是任意的字符串。
Bigtable 把数据视为字符串，需要客户端序列化和反序列化后使用。客户端能够通过细致地控制 schema 来控制数据的局部性。最后，Bigtable 的 schema 有参数控制能否在 OOM 的时候继续提供服务。</p>
<h2 id="2-数据模型"><a class="header-anchor-1" href="#2-数据模型">#</a>2. 数据模型</h2>
<p>Bigtable 是一个稀疏、分布式、持久化的多维排序映射表。这个表是通过行键、列键和时间戳索引的。表中的值是字节串。</p>
<p>(row:string, column:string, time:int64) -&gt; string</p>
<p>Google 分析了很多潜在的应用场景，最终敲定了这个数据模型。</p>
<h3 id="行键"><a class="header-anchor-1" href="#行键">#</a>行键</h3>
<p>表格中的行键是任意的字符串，最大可以是 64KB，典型值是 10-100 字节。</p>
<p>Bigtable 会按照字典序排序行键。表中的所有行会被动态划分为更小的段，称为 Tablet，是数据分散和负载均衡的单元。客户端能够控制行键的格式，以便于控制数据的局部性。例如，在 Google 的 Webtable 中，行键是反转的 hostname，这样 <code>maps.google.com/index.html</code> 就会存储在 <code>com.google.maps/index.html</code> 的位置。</p>
<h3 id="列族（column-family-cf）"><a class="header-anchor-1" href="#列族（column-family-cf）">#</a>列族（Column Family, CF）</h3>
<p>表格中的列被分成若干组，称为<em>列族</em>，列族是基本的 ACL 单元。一个列族中的所有数据通常都是同一种类型（同一个列族的会放在一起压缩）。列族必须在表创建时指定，一旦写入数据之后就不能修改。列族数量按预期是很小的，最多几百个，而且很少会改变。相对的，列的数量没有上限。</p>
<p>列键使用 <code>family:qualifier</code> 的形式命名。其中 <code>family</code> 必须是可打印的字符，<code>qualifier</code> 可以是任意的字节串。例如 Webtable 中的一个 CF 是 <code>language</code>，用于存储网页的语言。<code>language</code> 下只有一个列，存储语言 ID。另一个 CF 是 <code>anchor</code>，其中每一个列名是指向的站点的名字，值是链接文本。例如 Webtable 中的一条数据可能是这样的：</p>
<table>
<thead>
<tr>
<th>Row Key</th>
<th>contents</th>
<th>anchor:cnnsi.com</th>
<th>anchor:my.look.ca</th>
</tr>
</thead>
<tbody>
<tr>
<td>“com.cnn.www”</td>
<td>“&lt;html&gt;”</td>
<td>“CNN”</td>
<td>“<span class="exturl" data-url="aHR0cDovL0NOTi5jb20=">CNN.com<i class="fa fa-external-link-alt"></i></span>”</td>
</tr>
</tbody>
</table>
<p>访问控制和磁盘和内存统计都是在 CF 级别进行的。因此可以通过 CF 管理不同的应用程序：例如一部分只写入新的基本数据，一部分读基本数据然后创建衍生数据，一部分只读取已有的数据。</p>
<h3 id="时间戳"><a class="header-anchor-1" href="#时间戳">#</a>时间戳</h3>
<p>Bigtable 中的每个单元都可以包含相同数据的多个版本，这些版本通过时间戳进行索引。
Bigtable 的时间戳是 64 位整数，这个时间戳可以由 Bigtable 自动生成（使用现实世界的毫秒），也可以由客户端提供。如果由客户端提供，需要保证并发写的时候，多个客户端的时间戳是不冲突的。
Bigtable 会按照时间戳的逆序存储数据，这样最新的数据会被最先读取。</p>
<p>为了更容易地管理多版本数据，Bigtable 提供了两个 CF 级别的设置：允许 Bigtable 自动回收旧版本的数据。客户端可以选择保留多少个版本，或者只保留最新的版本。</p>
<p>在 Webtable 中，<code>contents</code> 列存储的数据的时间戳是文档的实际爬取时间，而且设置了只保存最新 3 个版本。</p>
<h2 id="3-api"><a class="header-anchor-1" href="#3-api">#</a>3. API</h2>
<p>写入 Bigtable 的代码示例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Open the table</span></span><br><span class="line">Table *T = <span class="built_in">OpenOrDie</span>(<span class="string">&quot;/bigtable/web/webtable&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Write a new anchor and delete an old anchor</span></span><br><span class="line"><span class="function">RowMutation <span class="title">r1</span><span class="params">(T, <span class="string">&quot;com.cnn.www&quot;</span>)</span></span>;</span><br><span class="line">r<span class="number">1.</span><span class="built_in">Set</span>(<span class="string">&quot;anchor:www.c-span.org&quot;</span>, <span class="string">&quot;CNN&quot;</span>);</span><br><span class="line">r<span class="number">1.</span><span class="built_in">Delete</span>(<span class="string">&quot;anchor:www.abc.com&quot;</span>);</span><br><span class="line">Operation op;</span><br><span class="line"><span class="built_in">Apply</span>(&amp;op, &amp;r1);</span><br></pre></td></tr></table></figure>
<p>读取 Bigtable 的代码示例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Scanner <span class="title">scanner</span><span class="params">(T)</span></span>;</span><br><span class="line">ScanStream *stream;</span><br><span class="line">stream = scanner.<span class="built_in">FetchColumnFamily</span>(<span class="string">&quot;anchor&quot;</span>);</span><br><span class="line">stream-&gt;<span class="built_in">SetReturnAllVersions</span>();</span><br><span class="line">scanner.<span class="built_in">Lookup</span>(<span class="string">&quot;com.cnn.www&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (; !stream-&gt;<span class="built_in">Done</span>(); stream-&gt;<span class="built_in">Next</span>()) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s %s %lld %s\n&quot;</span>,</span><br><span class="line">        scanner.<span class="built_in">RowName</span>(),</span><br><span class="line">        stream-&gt;<span class="built_in">ColumnName</span>(),</span><br><span class="line">        stream-&gt;<span class="built_in">MicroTimestamp</span>(),</span><br><span class="line">        stream-&gt;<span class="built_in">Value</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Bigtable API 提供了这些方法和特性：</p>
<ul>
<li>修改集群</li>
<li>创建和删除表</li>
<li>创建、修改和删除 CF，修改 ACL</li>
<li>读、写和扫描数据</li>
<li>把一组操作打包成一个原子操作</li>
<li>单行事务：可以对单行数据进行原子的 Read-Modify-Write 操作</li>
<li>单元格作为计数器</li>
<li>在服务器的地址空间中执行客户端提供的 Sawzall 脚本（PS. 类似 lua in redis）
Sawzall 的 API 不能写数据，但是可以进行一些复杂的数据变换、过滤和聚合操作。</li>
</ul>
<p>Bigtable 还可以和 MapReduce 结合使用，Google 写了很多包装器，用于在 MapReduce 任务中读写 Bigtable。</p>
<h2 id="4-基本构建块"><a class="header-anchor-1" href="#4-基本构建块">#</a>4. 基本构建块</h2>
<p>Bigtable 是建立在其他几个已有的 Google 系统之上的：</p>
<ol>
<li>GFS（Google File System）：用于存储日志和数据</li>
<li>集群管理系统：调度任务，管理资源，处理机器故障，和监控集群状态</li>
<li>Chubby：分布式锁服务</li>
</ol>
<p>Bigtable 使用了 Google <em>SSTable</em> 文件格式。SSTable 提供一个持久化的、有序的、不可变的 K-V 映射，其中 K 和 V 都是任意的字节串。SSTable 文件能提供的操作有：</p>
<ul>
<li>按 key 查找 value</li>
<li>迭代特定范围内的所有 key-value 对</li>
</ul>
<p>SSTable 内部包含一个块序列（块大小可变，默认 64KB）。SSTable 文件末尾存储着块索引，用于定位块。当 SSTable 文件被打开时，块索引会被读入内存。每次查询操作只需要一次磁盘 seek 操作：首先在内存索引中二分查找到块的位置，然后读取该块即可。可选地，SSTable 还可以被完全映射到内存中，这样就不需要访问磁盘了。</p>
<p>Bigtable 还依赖于高可用和持久化地分布式锁服务 Chubby。
Chubby 服务包含 5 个副本，其中一个会被选举为 Master，依赖于 Paxos 算法保证副本数据一致性。Chubby 提供了一个由目录和文件组成的命名空间，每个目录或文件都可以用作锁，而且读写文件的操作是原子的。
Chubby 客户端库提供对 Chubby 文件的一致性缓存，每个客户端都维持着一个 <em>session</em>。如果客户端在超时时间内没有成功续约，则会过期，并失去所有的锁。
Chubby 客户端还可以注册 callback，当锁的状态发生变化时，这个 callback 会被调用。</p>
<p>Bigtable 用 Chubby 实现这些任务：</p>
<ul>
<li>保证任意时刻最多只有一个 Master；</li>
<li>保存 Bigtable 的 bootstrap 位置；</li>
<li>发现新 Tablet Server 的位置；处理 Tablet Server 的后事；</li>
<li>存储 schema 信息：每个表的 CF；</li>
<li>存储 ACL；</li>
</ul>
<p>Bigtable 强依赖于 Chubby，如果 Chubby 不可用，Bigtable 也不可用。
Google 衡量了由于 Chubby 问题导致的 Bigtable 不可用的平均时间，在 14 个 Bigtable 集群，使用 11 个 Chubby 实例，这个时间只占 0.0047%。受影响最严重的单个集群，这个时间也只占 0.00326%。</p>
<h2 id="5-实现"><a class="header-anchor-1" href="#5-实现">#</a>5. 实现</h2>
<p>Bigtable 的实现包含三部分：链接到应用程序中的客户端库、一个 Master 进程和若干个 Tablet Server 进程。Tablet Server 可以动态地增加或删除。</p>
<p>Bigtable 的 Master 进程负责：</p>
<ul>
<li>分配 Tablet 到 Tablet Server</li>
<li>检测 Tablet Server 的增删</li>
<li>均衡 Tablet Server 的负载</li>
<li>垃圾回收 GFS 中的文件</li>
<li>处理 Schema 变更（例如表和 CF 的增删）。</li>
</ul>
<p>Tablet Server 负责管理 Tablet，每个 Tablet Server 通常会管理 10 个到 1000 个 Tablet。
Tablet Server 还要负责处理客户端的读写请求，还有分裂过大的 Tablet。</p>
<p>和许多单主节点的分布式存储系统（比如 GFS）一样，客户端数据是不会流过 Master 节点的，而是直接和 Tablet Server 交互。因为客户端不依赖于 Master 来获取 Tablet 位置信息，大多数客户端从来不会和 Master 通信。因此 Master 的任务是很轻松的。</p>
<p>一个 Bigtable 集群存储多个表，每个表由一系列的 Tablet 组成，每个 Tablet 包含了一段行范围的数据。初始时，每个表只有一个 Tablet。随着表的增长，Tablet 会被分裂成更多更小的 Tablet，默认 Tablet 的大小是 100-200 MB。</p>
<h3 id="5-1-tablet-位置"><a class="header-anchor-1" href="#5-1-tablet-位置">#</a>5.1 Tablet 位置</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Level 0  |         Chubby file</span><br><span class="line">         |              |</span><br><span class="line">         |              v</span><br><span class="line">Level 1  |         Root Tablet (META1)</span><br><span class="line">         |        /   |    |   \</span><br><span class="line">         |       v    v    v    v</span><br><span class="line">Level 2  |   META2 META3 META4 ...</span><br><span class="line">         |    /|\   /|\   /|\  ...</span><br><span class="line">         |    vvv   vvv   vvv  ...</span><br><span class="line">Level 3  | USER1..  ...   ...  ...</span><br></pre></td></tr></table></figure>
<p>Bigtable 使用了三级层次结构来存储 Tablet 位置信息。第 0 级是一个保存于 Chubby 中的文件，保存着 <em>Root Tablet</em> 的位置信息。</p>
<p>Root Tablet 是 METADATA 表的第一个 Tablet，而且不会被分裂。</p>
<p>METADATA 表是整个系统的元数据表，其中保存着所有其他表的 Tablet 位置信息。其行键是表名和末尾行的编码，值是 Tablet 的位置信息。
METADATA 中的每一行数据大约占用 1KB。按照保守估计，每个 Tablet 大小 128MB 的话，三级的 METADATA 表可以存储 2^34 个 Tablet 的位置。</p>
<p>客户端库会缓存 Tablet 的位置信息。如果客户端没有缓存，或者发现缓存的位置信息不正确，那么它就会递归地到上一级查找。按照这种算法，如果当前没有缓存，定位需要 3 个 RT，加上 1 次 Chubby 读。如果缓存不对，那么最多需要 6 个 RT，加上 1 次 Chubby 读。虽然 Tablet 位置是保存在内存中的，即不需要访问 GFS，但是这种定位方法还是很慢。为了加速一般情况，Bigtable 会让客户端预取 Tablet 位置信息，每次读的时候都多读几个 Tablet 的位置信息。</p>
<p>为方便 debug，METADATA 表中还会存储每个 Tablet 的时间日志。</p>
<h3 id="5-2-tablet-分配"><a class="header-anchor-1" href="#5-2-tablet-分配">#</a>5.2 Tablet 分配</h3>
<p>每个 Tablet 最多只会分配给一个 Tablet Server。
Master 负责记录活着的 Tablet Server，以及 Tablet 到 Tablet Server 的映射关系。如果一个 Tablet 还没有分配，而且某个 Tablet Server 有空闲空间，那么 Master 就会向这个 Tablet Server 发送一个 Tablet load 请求，把这个 Tablet 分配给他。</p>
<p>Bigtable 使用 Chubby 追踪 Tablet Server 的状态。当一个 Tablet Server 启动时，它会在 Chubby 的特定目录下创建一个名字唯一的文件（Server file），并且获取文件的排他锁。Master 会监听这个目录来发现新的 Tablet Server。如果一个 Tablet Server 丢失了这个排它锁，那么它就不再对外提供服务。它会先检查 Server file 是否存在，如果存在就尝试重新获取锁，否则就会直接退出。当 Tablet Server 结束时，它会释放锁，就会被 Master 拿到。</p>
<p>Master 需要周期性地监测 Tablet Server 是否在正常工作，如果不是，就要尽快把它负责的 Tablet 分配给其他 Tablet Server。为此，Master 会定期询问 Tablet Server 是否还持有 Server file 的锁，如果没有，或者多次尝试都超时，Master 就会尝试拿一下这个 Tablet 的锁。如果拿到了，说明 Chubby 服务正常，Tablet Server 挂了，就会把这个 Server file 删掉，让 Tablet Server 自行退出；然后把它负责的 Tablet 添加到未分配集合中。为了确保 Bigtable 集群不会受 Master 和 Chubby 之间网络的影响，Master 的 Chubby session 过期，就会直接退出。</p>
<p>当一个新 Master 被集群管理系统拉起的时候，它需要先检查有哪些 Tablet，按照如下步骤：</p>
<ol>
<li>Master 获取一个 Master lock；</li>
<li>扫描 Server file 目录，找到所有活着的 Tablet Server；</li>
<li>与每一个 Tablet Server 通信，询问它们负责的 Tablet 列表；</li>
<li>扫描 METADATA 表，找到所有的 Tablet：此时就可以找到哪些 Tablet 还未分配。</li>
</ol>
<p>一个小问题是如果 METADATA Tablet 还没有分配的话，Master 就没办法找到 METADATA 表的位置，那步骤 4 就无法进行。因此在步骤 4 之前，Master 会额外检查一下 Root Tablet 有没有分配，如果没有分配，就会额外把 Root Tablet 添加到未分配集合中，最终 Root Tablet 会被分配给空闲的 Tablet Server。</p>
<p>已有 Tablet 的集合只有当以下时候才会变化：</p>
<ol>
<li>创建或删除表；</li>
<li>Tablet 合并：两个已有的 Tablet 合并成一个大的 Tablet；</li>
<li>Tablet 分裂：一个 Tablet 被分裂成两个更小的 Tablet；</li>
</ol>
<p>情况 1 和 2 都是由 Master 初始化的，Master 自然能够追踪这些变更；情况 3 是由 Tablet Server 完成的，Tablet Server 会把分裂出来的新 Tablet 信息记录在 METADATA 表中，然后通知 Master。即使这条通知消息丢失了，当 Master 要求 Tablet Server 加载分裂出来的 Tablet 时，Master 也会找到这个新 Tablet。</p>
<h3 id="5-3-tablet-服务"><a class="header-anchor-1" href="#5-3-tablet-服务">#</a>5.3 Tablet 服务</h3>
<p>Tablet 的持久化状态是保存在 GFS 中的。更新操作会被记录成操作日志（Commit log），其中保存着 redo 记录。在这些更新中，最近提交的更新会被保存在内存中的一个称为 Memtable 的有序数据结构中。为了恢复一个 Tablet，Tablet Server 需要先从 METADATA 表中找到这个 Tablet 的元数据，包括组成这个 Tablet 的一系列 SSTable 文件，还有一系列 redo 点，即指向操作日志的指针。
Tablet Server 会把这些 SSTable 文件的索引加载到内存中，然后通过应用自 redo 点开始的所有更新来重建 Memtable。</p>
<p>写操作：</p>
<ol>
<li>Server 检查是否合法，是否有权限（通过读取 Chubby 中的 ACL）</li>
<li>有效的变更会被写入操作日志：会分批写入提高吞吐量</li>
<li>变更会被写入 Memtable</li>
</ol>
<p>读操作：</p>
<ol>
<li>Server 检查是否合法，是否有权限（通过读取 Chubby 中的 ACL）</li>
<li>在由一系列 SSTable 和 Memtable 组成的数据视图中查找数据</li>
</ol>
<p>Tablet 分裂和合并不影响读写操作。</p>
<h3 id="5-4-数据回收"><a class="header-anchor-1" href="#5-4-数据回收">#</a>5.4 数据回收</h3>
<p><em>Minor compaction</em>：写入数据的时候，Memtable 会增大，当增加到一定程度时，就会被冻结，然后转换成 SSTable 写入 GFS。与此同时，一个新的 Memtable 会被创建。</p>
<p>Minor compaction 的目的是：</p>
<ul>
<li>减小内存占用</li>
<li>减少重启时的恢复时间</li>
</ul>
<p>Minor compaction 不影响读写操作。</p>
<p>每次 Minor compaction 都会创建一个新的 SSTable。如果一直增加下去，读的时候就需要合并很多 SSTable。因此 Bigtable 会定期在后台执行 <em>Merging compaction</em>，也叫 <em>Major compaction</em>。
Major compaction 会把多个 SSTable + Memtable 合并成一个 SSTable。合并的时候，会把被删除的数据去掉。</p>
<p>Major compaction 的目的是：</p>
<ul>
<li>回收删除数据占用的空间</li>
<li>保证被删除的数据能够及时消失（对于敏感数据）</li>
</ul>
<h2 id="6-细化"><a class="header-anchor-1" href="#6-细化">#</a>6 细化</h2>
<p>为了实现高性能，高可用，高可靠性，Bigtable 实现上还做了很多细节优化。</p>
<h3 id="局部性群组"><a class="header-anchor-1" href="#局部性群组">#</a>局部性群组</h3>
<p>客户端可以把多个 CF 设置成一个局部性群组。在每个 Tablet 中，每个局部性群组都会有一个单独的 SSTable。将不经常一起访问的 CF 划分成多个局部性群组，能够提高读性能。例如，Webtable 中的页面元数据（例如 langauge 和 chunksums）可以放进一个局部性群组，而网页内容可以放进另一个局部性群组：因为一个读元数据的应用程序往往不会读取内容。</p>
<p>此外，局部性群组有一些有用的调优参数，例如，局部性群组可以被声明为 <em>in-memory</em>。这样的话，这个局部性群组的 SSTable 在用到时就会被加载到内存中，在读取这个局部性群组内的 CF 时就不用访问磁盘了。这个特性对于频繁访问的小块数据很有用：METADATA 表中的 <code>location</code> CF 就是一个 in-memory 的局部性群组。</p>
<h3 id="压缩"><a class="header-anchor-1" href="#压缩">#</a>压缩</h3>
<p>客户端可以控制一个局部性群组的 SSTable 是否压缩，以及使用什么算法。压缩的粒度是 SSTable 中的块，而不是整个 SSTable，这样读的时候就不用解压整个 SSTable。很多客户端会使用一个两趟压缩算法，第一趟用 Bentley-McIlroy 模式，用一个长窗口压缩长的重复串，第二趟用一个快速的算法，在 16KB 的小窗口内压缩剩下的数据。这种两趟压缩算法是很快的，在现代机器上，压缩速度可以达到 100-200MB/s，解压速度可以达到 400-1000MB/s。</p>
<p>虽然我们在选择压缩算法的时候更倾向于压缩速度而不是压缩率。这种两趟压缩算法的压缩率也不错。在 Webtable 中进行测试，压缩 html 文档，每个文档只保存一个版本，两趟压缩算法的压缩率能达到 10:1，比 gzip 的 3:1 或者 4:1 好的多。如果保存多个版本，压缩率会更高。</p>
<h3 id="缓存以提升读性能"><a class="header-anchor-1" href="#缓存以提升读性能">#</a>缓存以提升读性能</h3>
<p>为了提升读性能，Tablet Server 使用了两级缓存。</p>
<ul>
<li>Scan 缓存是 high-level 的缓存，缓存 SSTable 返回的 kv 对。</li>
<li>Block 缓存是 low-level 的缓存，缓存从 GFS 中读出来的 SSTable 块。</li>
</ul>
<h3 id="布隆过滤器"><a class="header-anchor-1" href="#布隆过滤器">#</a>布隆过滤器</h3>
<p>读操作必须要从所有的 SSTable 中查找数据，如果 SSTable 不在内存中，就会需要多次磁盘访问。
Bigtable 允许客户端指定创建一个布隆过滤器，用于快速判断一个 key 是否在 SSTable 中。</p>
<h3 id="提交日志实现"><a class="header-anchor-1" href="#提交日志实现">#</a>提交日志实现</h3>
<p>如果我们把每个 Tablet 的提交日志都放在单独的 log 文件中，就需要往 GFS 里面写大量的文件。再加上 GFS 实现，可能导致大量磁盘访问。另外，用多个 log 文件也不容易做 group commit 优化。因此 Bigtable 设计成每个 Tablet Server 使用一个 log 文件。</p>
<p>使用单个 log 文件提供了正常路径下的性能优势，但是会让恢复变得麻烦。当 Tablet Server 挂了，它负责的 Tablet 需要被迁移走，而每个接管的 Server 通常只会分到其中一部分。为了进行恢复，每个 Server 都需要读取一遍完整的 log 文件，会导致巨量的读放大。</p>
<p>为了避免这种读放大，首先，Bigtable 会按照 <code>&lt;table, row name, log sequence number&gt;</code> 顺序排序 log 文件。排序后，对于单个 Tablet 的变更就是连续存储的，因此新 owner 只需要进行一次 seek 加顺序读就可以了。为了并行化这种排序过程，log 文件会按照 64MB 大小分段，然后分散在不同的 Tablet Server 上并行排序。这种排序过程是由 Master 协调的。当任意 Tablet Server 需要从 log 文件恢复 Tablet 的时候，就会开始这种排序过程。</p>
<p>由于各种各样的原因，有时往 GFS 上写日志的时候，会有性能抖动。例如 GFS 正在故障恢复，或者网络拥塞，或者单纯就是负载太重。为了避免 GFS 延迟尖峰，每个 Tablet Server 实际上会有两个写 log 的线程，每个线程写自己的日志文件，同一时刻只会有一个线程被使用。如果写入的性能太差，就会切换到另一个线程。队列里面后续的变更也会由另一个线程来处理。日志条目中包含了自增序列号以防止线程切换的时候重复应用相同的日志。</p>
<h3 id="加速-tablet-恢复"><a class="header-anchor-1" href="#加速-tablet-恢复">#</a>加速 Tablet 恢复</h3>
<p>如果 Master 要把一个 Tablet 从一个 Server 迁移到另一个，源 Server 会先对这个 Tablet 进行一次 Minor compaction。这次 compaction 能够缩短恢复时间，因为需要恢复的 log 变少了。在 compaction 之后，源 Tablet Server 就会停止服务这个 Tablet。在真正卸载这个 Tablet 之前，Server 会再做一次（通常是很快的）Minor compaction，目的是消除第一次 compaction 期间收到的变更。第二次 compaction 之后，就没有剩余的 log 了，目标 Server 只需加载 Tablet 就可以了。</p>
<h3 id="利用不可变性"><a class="header-anchor-1" href="#利用不可变性">#</a>利用不可变性</h3>
<p>除了 SSTable 缓存以外，Bigtable 系统的各种其他部分也利用了 SSTable 文件的不可变性。比如，并发读 SSTable 的时候不需要任何同步机制。因此行之间的并发控制就可以实现得非常高效。唯一的例外是 Memtable。为了减少 Memtable 的读争抢，我们让每个 Memtable 的行都是 CoW 的，这样读和写就可以并行进行。</p>
<p>因为 SSTable 是不可变的，所以移除已经删除的数据就转换成了垃圾回收过时 SSTable 的问题。每个 Tablet 的 SSTable 都被注册到 METADATA 表中。Master 在 SSTable 文件集合上使用标记-清除算法来回收过时的 SSTable。</p>
<p>SSTable 的不可变性还允许我们快速地分裂 Tablet。相对于给每个 Tablet 生成一组新的 SSTable 文件，Bigtable 让子 Tablet 共享父 Tablet 的 SSTable 文件。</p>
<h2 id="7-性能评估"><a class="header-anchor-1" href="#7-性能评估">#</a>7 性能评估</h2>
<p>评估实验使用了一个 N 个 Tablet Server 的 Bigtable 集群。用来评估性能和可拓展性随 N 的变化。每个 Tablet Server 使用 1GB 内存，写入一个 1,786 机器的 GFS 集群，每个 GFS 节点配置两块 400GB 的 IDE 硬盘。还有 N 个客户端用于生成读写负载。N 个客户端相对于 N 个 Tablet Server 是非常充足的，这样可以保证客户端的负载不会成为瓶颈。每个机器有两颗双核 Opteron 2GHz 的 CPU。</p>
<p>（略）</p>
<h2 id="8-现实世界的应用"><a class="header-anchor-1" href="#8-现实世界的应用">#</a>8 现实世界的应用</h2>
<p>截至 2006 年 8 月，Google 内部有 388 个生产 Bigtable 集群，一共有 24,500 个 Tablet Server。其中大部分都是供开发使用，因此经常是闲置的。大部分集群都有很少的机器数。有 14 个忙的集群，一共由 8069 个 Tablet Server 组成，服务了 1.2M 的 QPS，进的 RPC 流量大约是 741MB/s，出的是 16GB/s。</p>
<h2 id="8-1-google-analytics"><a class="header-anchor-1" href="#8-1-google-analytics">#</a>8.1 Google Analytics</h2>
<p>Google Analytics 用于帮助网站所有者分析流量模式。包括聚合统计，例如每天的 UV，每个 URL 的 PV，还有支付的用户比例。为了启用这个功能，网站所有者需要在网站上插入一个 JavaScript 代码片段。每次页面被访问的时候，这个代码片段就会执行。这个代码会记录各种各样的信息，例如用户 id 和页面的信息，发送到 Google Analytics。
Google Analytics 总结这些信息，然后提供给网站所有者。</p>
<p>Google Analytics 使用的 Bigtable 表包括：</p>
<ul>
<li>raw click 表：~200TB，每个用户会话一行，行名字是网站名+Session 创建时间。这样保证了访问相同站点的用户会话会被存储在一起，而且是按照时间排序的。这个表的压缩率是 14%。</li>
<li>summary 表：~20TB，包含每个网站的各种聚合统计信息。这个表是被周期调度的 MapReduce 任务从 raw click 表中生成的。每个 MR 任务从 raw click 表中提取最近的会话数据。这个表的压缩率是 29%。</li>
</ul>
<h2 id="8-2-google-earth"><a class="header-anchor-1" href="#8-2-google-earth">#</a>8.2 Google Earth</h2>
<p>Google 运营着一系列服务，提供地球表面高解析度的卫星图像。这个服务既通过基于 web 的 Google Maps 提供，也通过 Google Earth 软件客户端提供。</p>
<p>Google Earth 的预处理流水线使用了一个 Bigtable 表存储原始图像数据。在预处理过程中，图像被清理和合并，形成最终提供服务的图像。这个表包含了约 70TB 的数据，因此是存储在磁盘中的。这些图像已经被有效地压缩过了，因此 Bigtable 的压缩被关闭了。</p>
<p>图像表的每一行对应一个地理区域，行名字保证了相邻区域的行是相邻的。这个表包含了一个 CF，用于追踪每个区域的数据来源。这个 CF 有很多列：基本上每个原始图像都有一个列。因为每个区域的图像是从很少几张原始图像中合成的，这个 CF 非常稀疏。</p>
<p>预处理流水线重度依赖 MapReduce over Bigtable 来处理图像数据。</p>
<p>服务系统使用一个表来索引 GFS 中的数据。这个表相对较小，只有 ~500GB，但是要保证每个数据中心能低延迟地提供上万的 QPS。因此这个表跨越了数百个 Tablet Server，还开启了 in-memory 选项。</p>
<h2 id="8-3-个性化搜索"><a class="header-anchor-1" href="#8-3-个性化搜索">#</a>8.3 个性化搜索</h2>
<p>Personalized Search 是一个 Google 的实验性服务，记录用户的查询和点击行为，跨越 Google 的多种服务，例如搜索，图片和新闻。用户可以浏览搜索历史来找到他们之前搜索和点击过的内容，然后他们可以寻求个性化的搜索结果，根据他们的历史行为。</p>
<p>个性化搜索把每个用户的数据保存在 Bigtable 中。每个用户有一个唯一的 userid，和一个对应的行。所有用户的行为都会被记录在这个行中。每种行为都有一个单独的 CF 保存（例如有一个 CF 保存搜索历史）。数据元素是行为发生的时间戳。个性化搜索用 MapReduce over Bigtable 来生成用户的资料。</p>
<p>个性化搜索数据在多个 Bigtable 集群之间复制，以增加可用性和减少延迟。个性化搜索团队原本在 Bigtable 之上实现了一个自己的复制系统，但是后来改成了使用 Bigtable 的复制功能。</p>
<p>个性化搜索的存储系统允许其他组在他们的列中添加每个用户的信息，然后这个系统也被很多其他的，需要为每个用户保存数据的 Google 业务使用。在很多组之间共享一个表导致了不寻常的 CF 数量。为了解决这个问题，Bigtable 增加了一个简单的 Quota 机制来限制单个客户端在共享表中的空间消耗，提供了一定的隔离性。</p>
<h2 id="faq"><a class="header-anchor-1" href="#faq">#</a>FAQ</h2>
<h3 id="1-gfs-可能出现重复记录或者-padding，bigtable-如何处理这种情况？"><a class="header-anchor-1" href="#1-gfs-可能出现重复记录或者-padding，bigtable-如何处理这种情况？">#</a>1. GFS 可能出现重复记录或者 padding，Bigtable 如何处理这种情况？</h3>
<p>Bigtable 写入 GFS 的数据分为两种：</p>
<ol>
<li>操作日志，当 Tablet Server 发生故障时，它上面服务的 Tablet 会被迁移到集群中的其他 Tablet Server 上继续提供服务，加载 Tablet 可能需要回放操作日志，每条操作日志唯一的序号，通过它可以去除重复的操作日志。</li>
<li>每个 Tablet 包含的 SSTable 数据，如果写入 GFS 失败可以重试并产生多条重复记录，但是 Bigtable 只会索引最后一条写入成功的记录。</li>
</ol>
<h3 id="2-如何保证同一个-tablet-不会被多台机器同时服务？"><a class="header-anchor-1" href="#2-如何保证同一个-tablet-不会被多台机器同时服务？">#</a>2. 如何保证同一个 Tablet 不会被多台机器同时服务？</h3>
<p>利用 Chubby 保证互斥性。</p>
]]></content>
      <categories>
        <category>distributed-system</category>
      </categories>
      <tags>
        <tag>分布式系统</tag>
        <tag>Bigtable</tag>
      </tags>
  </entry>
  <entry>
    <title>MIT 6.824/6.5840 分布式系统 Lab 1: MapReduce</title>
    <url>/2024/03/25/mit-6.824-distributed-system-lab1/</url>
    <content><![CDATA[<p>本次 Lab 1 讲的是分布式计算的 MapReduce。</p>
<h2 id="1-背景"><a class="header-anchor-1" href="#1-背景">#</a>1. 背景</h2>
<p>MapReduce 源自 Google 在 OSDI '04 发表的论文，论文的作者是 Jeff Dean 和 Sanjay。主要提出了一种简单、可拓展的分布式计算编程模型。</p>
<p>对于用户来说，只需要实现 <code>Map()</code> 和 <code>Reduce()</code> 两个函数，即可享受到分布式计算的好处，这就是 MapReduce 的设计理念。</p>
<h3 id="思想"><a class="header-anchor-1" href="#思想">#</a>思想</h3>
<p>MapReduce 需要用户将计算过程表达成以下两个函数：</p>
<ul>
<li><code>Map(key, value) -&gt; list(ikey, ivalue)</code></li>
<li><code>Reduce(ikey, list(ivalue)) -&gt; list(ivalue)</code></li>
</ul>
<p>到这里大家可能已经感受到一点并行的思想，其实 MapReduce 是把一个任务分解成一系列子任务，每个子任务由 <code>Map</code> 函数去执行。这些子任务的输出会被重组，然后分门别类送到 <code>Reduce</code> 函数去执行。</p>
<p>MapReduce 的 Motivation 是：</p>
<ul>
<li>很多大数据计算任务都是大量输入对应到小量的输出；</li>
<li>分而治之，一个复杂计算任务往往可以分成多个更简单的部分；</li>
<li>子任务之间往往可以并行执行； -&gt; <code>Map</code></li>
</ul>
<p>怎么区分”多个更简单的部分”？使用<code>ikey</code>标示子任务。</p>
<h2 id="2-mapreduce-程序示例"><a class="header-anchor-1" href="#2-mapreduce-程序示例">#</a>2. MapReduce 程序示例</h2>
<h3 id="word-count"><a class="header-anchor-1" href="#word-count">#</a>Word Count</h3>
<p>Word count任务是统计一批文本中每个词出现的数量</p>
<p>Map任务：统计一个分块中的词频</p>
<p>Reduce任务：合并所有分块的词频</p>
<h3 id="grep"><a class="header-anchor-1" href="#grep">#</a>Grep</h3>
<p>Map任务：对一个分块做grep</p>
<p>Reduce任务：合并所有的grep结果</p>
<h3 id="计算图的逆"><a class="header-anchor-1" href="#计算图的逆">#</a>计算图的逆</h3>
<p>已知所有的<code>&lt;source, target&gt;</code>边，计算每个<code>target</code>被哪些<code>source</code>引用</p>
<p>Map任务：逆转一组边，得到<code>&lt;target, source&gt;</code></p>
<p>Reduce任务：按<code>target</code>合并所有的<code>source</code></p>
<h3 id="分布式排序"><a class="header-anchor-1" href="#分布式排序">#</a>分布式排序</h3>
<p>Map任务：原样输出</p>
<p>Reduce任务：原样输出</p>
<h2 id="3-框架实现"><a class="header-anchor-1" href="#3-框架实现">#</a>3. 框架实现</h2>
<p>MapReduce 框架负责调度和执行用户编写的 Map 和 Reduce 任务。</p>
<p>根据环境（机器配置，网络拓扑，故障概率，和存储成本）不同，可以有很多不同的实现方案</p>
<h3 id="概览"><a class="header-anchor-1" href="#概览">#</a>概览</h3>
<p>框架首先将输入数据分成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>块，然后对每一块分别执行<code>map</code>过程，这个过程是在多个机器上并行执行的；</p>
<p>在<code>map</code>全部完成后，将中间结果按照某些策略分成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>块，然后并行执行<code>reduce</code>过程；</p>
<h3 id="主控节点数据结构"><a class="header-anchor-1" href="#主控节点数据结构">#</a>主控节点数据结构</h3>
<ul>
<li>任务状态：任务类型（<code>Map</code> or <code>Reduce</code>），执行状态（进行中 or 已完成），所在的机器</li>
<li>数据状态：中间结果的存储位置和大小</li>
</ul>
<h3 id="分布式容错设计"><a class="header-anchor-1" href="#分布式容错设计">#</a>分布式容错设计</h3>
<p>Worker节点的保障：Master节点会周期性地ping Worker节点；失联Worker节点已完成的任务会重新调度。</p>
<p>Master节点的保障：Master节点会周期性做checkpoint方便故障时重新开始。</p>
<p>出错时的语义保证：需要实现<code>Map/Reduce</code>任务提交是原子性的</p>
<ul>
<li><code>Map</code>任务通过提交临时文件名，由master做改名实现。</li>
<li><code>Reduce</code>任务完成时会把工作临时文件改名为目标文件。</li>
</ul>
<h3 id="程序局部性"><a class="header-anchor-1" href="#程序局部性">#</a>程序局部性</h3>
<p>分析局部性主要是考虑到带宽资源的限制。</p>
<p>论文中实现的 MapReduce 框架是建立在 GFS (Google File System) 上的，GFS 会对文件进行分块然后保存三份副本。</p>
<p>作者在实现时考虑到了底层GFS的影响，会尽量调度任务到有副本或者距离副本近的机器上。</p>
<h3 id="任务划分粒度"><a class="header-anchor-1" href="#任务划分粒度">#</a>任务划分粒度</h3>
<p>首先，输入数据会被划分成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span> 个分块调用 <code>Map</code>，然后中间结果会被划分成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span> 个分块调用 <code>Reduce</code>。</p>
<p>理想情况下，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span> 应该<strong>远远大于</strong> Worker 机器数量：利于负载均衡、故障恢复、和任务均匀分发；</p>
<p>取值上界：受限于主控节点的Memory，空间复杂度=<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>M</mi><mo>×</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(M\times R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></p>
<p>实践经验：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span> 影响中间结果文件的数量</p>
<p>Google经验：2,000台Worker机器；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>=</mo><mn>200</mn><mo separator="true">,</mo><mn>000</mn></mrow><annotation encoding="application/x-tex">M=200,000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">200</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">000</span></span></span></span>；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>=</mo><mn>5</mn><mo separator="true">,</mo><mn>000</mn></mrow><annotation encoding="application/x-tex">R=5,000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">000</span></span></span></span></p>
<h3 id="备用任务"><a class="header-anchor-1" href="#备用任务">#</a>备用任务</h3>
<p>一般来说，MapReduce框架计算的整体速度受制于少数“掉队者”，掉队的原因有很多，例如机器故障；</p>
<p>当整个计算过程将要完成时，主控节点会将剩余的任务多安排一次（备用任务）。</p>
<h2 id="4-一些细节优化"><a class="header-anchor-1" href="#4-一些细节优化">#</a>4. 一些细节优化</h2>
<h3 id="分区函数"><a class="header-anchor-1" href="#分区函数">#</a>分区函数</h3>
<p>提供给用户的分区函数，方便开发用；</p>
<h3 id="数据处理顺序"><a class="header-anchor-1" href="#数据处理顺序">#</a>数据处理顺序</h3>
<p>MapReduce框架保证同一个分区内，数据是按照key有序处理的，方便用户通过key访问结果文件；</p>
<h3 id="合并器-combiner"><a class="header-anchor-1" href="#合并器-combiner">#</a>合并器 <code>Combiner</code></h3>
<p>在一些任务中，中间结果划分不是均匀的，可能会导致大量中间结果分配到同一个<code>Reduce</code>任务去，打满网络带宽。</p>
<p>例如Word count任务，会有大量的<code>&lt;the, 1&gt;</code>记录；</p>
<p>为此MapReduce框架设计了一个可选的 <code>Combiner</code> 函数，在 <code>Map</code> 之后先对结果进行一次合并，再通过网络发出去；</p>
<h3 id="输入输出类型"><a class="header-anchor-1" href="#输入输出类型">#</a>输入输出类型</h3>
<p>MapReduce框架是支持多种输入文件格式，也支持用户自己实现一个<code>reader</code>接口。</p>
<h3 id="副作用"><a class="header-anchor-1" href="#副作用">#</a>副作用</h3>
<p>有时候用户在处理数据时可能想要一些辅助文件，这些是通过统一的一层<code>Application Writer</code>完成，这一层会处理原子更新文件（先写到临时文件然后再改名）之类的细节；</p>
<p>对于多文件的情况，没有提供原子的两阶段提交，这一点需要用户自己保证；</p>
<h3 id="跳过坏记录"><a class="header-anchor-1" href="#跳过坏记录">#</a>跳过坏记录</h3>
<p>有时候用户的<code>Map</code>，<code>Reduce</code>可能会由于bug崩溃，MapReduce框架提供了一种可选的执行模式，可以自动检测确定性的崩溃数据，然后跳过这些记录；</p>
<p>框架每次调度任务时会附带一个Sequence Number。每个Worker进程都会注册Signal Handler，捕获SegFault和BusError。当程序崩溃时，框架会给主控节点发一个&quot;Last gasp&quot;UDP数据包带上这个Seq Number。当框架检测到某一个记录崩溃超过一次，下次就会跳过。</p>
<h3 id="本地执行"><a class="header-anchor-1" href="#本地执行">#</a>本地执行</h3>
<p>为了方便用户Debug，框架提供了一种本地执行模式。</p>
<h3 id="状态信息"><a class="header-anchor-1" href="#状态信息">#</a>状态信息</h3>
<p>主控节点跑了一个HTTP服务，暴露内部的一些状态信息。</p>
<h3 id="计数器"><a class="header-anchor-1" href="#计数器">#</a>计数器</h3>
<p>框架提供了一个Counter对象，方便用户实现一些计数需求（可能是为了san check）</p>
<h2 id="5-性能测试"><a class="header-anchor-1" href="#5-性能测试">#</a>5. 性能测试</h2>
<h2 id="6-实践经验"><a class="header-anchor-1" href="#6-实践经验">#</a>6. 实践经验</h2>
<h3 id="大规模索引任务"><a class="header-anchor-1" href="#大规模索引任务">#</a>大规模索引任务</h3>
<p>收益巨大：</p>
<ul>
<li><strong>简化业务逻辑</strong>：索引代码更简单、更小、更容易理解，因为处理容错、分布和并行化的代码隐藏在 MapReduce 库中。</li>
<li><strong>关注点分离</strong>：MapReduce 库的性能足够好，我们可以将概念上不相关的计算分开，而不是将它们混合在一起以避免对数据进行额外的传递。这使得更改索引过程变得容易。</li>
<li><strong>简化横向拓展</strong>：机器、网络导致的问题被框架处理了，使得横向拓展更简单，只需要加机器即可。</li>
</ul>
<h2 id="回到-lab-1"><a class="header-anchor-1" href="#回到-lab-1">#</a>回到 Lab 1</h2>
<p>Lab 1 是实现 MapReduce 框架的两个组件 Coordinator（Master）和 Worker。</p>
<ul>
<li>Master 负责分发任务给 Worker，会启动一个 RPC Server；</li>
<li>Worker 从 Master 那里获取 <code>Map</code> 或 <code>Reduce</code> 任务并执行。</li>
</ul>
<p>整个 MapReduce 框架包括：</p>
<ul>
<li><code>main/mrcoordinator.go</code> 是 Master 的入口，会调用 <code>MakeCoordinator()</code> 然后等待；</li>
<li><code>main/mrworker.go</code> 是 Worker 的入口，会加载用户程序（so库）获得 <code>Mapf</code> 和 <code>Reducef</code>，然后调用 Worker；</li>
<li><code>mr/coordinator.go</code> 实现 Master 的逻辑；</li>
<li><code>mr/worker.go</code> 实现 Worker 的逻辑；</li>
<li>用户程序会被编译成 go plugin，被框架加载然后调用。</li>
</ul>
]]></content>
      <categories>
        <category>distributed-system</category>
      </categories>
      <tags>
        <tag>分布式系统</tag>
        <tag>MapReduce</tag>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title>MIT 6.824/6.5840 分布式系统 Lab 2</title>
    <url>/2025/02/20/mit-6.824-distributed-system-lab2/</url>
    <content><![CDATA[<h2 id="lab-2-key-value-server"><a class="header-anchor-1" href="#lab-2-key-value-server">#</a>Lab 2: Key/Value Server</h2>
<p>新版本 6.824 课程添加了一个 Lab 2，实现一个请求幂等的简单 KV 存储服务，还有对应的 Client 端。</p>
<p>幂等性：题目依赖的底层 RPC 网络是不可靠的。为此，在请求中携带一个递增的 Sequence Number，在服务端忽略每个 Client 的旧 Request 即可。</p>
<p>服务端实现：维护一个 <code>map[int]int</code>，记录每一个 Client 发来的最大的 Sequence Number；注意 Append 命令还需要缓存执行的结果。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> Last <span class="keyword">struct</span> &#123;</span><br><span class="line">    Seq   <span class="type">int</span></span><br><span class="line">    Value <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> KVServer <span class="keyword">struct</span> &#123;</span><br><span class="line">    last  <span class="keyword">map</span>[<span class="type">int</span>]Last</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Get 命令无需考虑幂等性，直接返回即可：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(kv *KVServer)</span></span> Get(args *GetArgs, reply *GetReply) &#123;</span><br><span class="line">    kv.mu.Lock()</span><br><span class="line">    <span class="keyword">defer</span> kv.mu.Unlock()</span><br><span class="line">    reply.Value = kv.store[args.Key]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Put 命令需要保证幂等性：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(kv *KVServer)</span></span> Put(args *PutAppendArgs, reply *PutAppendReply) &#123;</span><br><span class="line">    <span class="comment">// log.Println(&quot;Put&quot;, args)</span></span><br><span class="line">    kv.mu.Lock()</span><br><span class="line">    <span class="keyword">defer</span> kv.mu.Unlock()</span><br><span class="line">    <span class="keyword">if</span> last, ok := kv.last[args.ClientId]; ok &#123;</span><br><span class="line">        <span class="keyword">if</span> args.Seq &lt; last.Seq &#123;</span><br><span class="line">            <span class="built_in">panic</span>(<span class="string">&quot;seq &lt; last&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> args.Seq == last.Seq &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    kv.last[args.ClientId] = Last&#123;Seq: args.Seq&#125;</span><br><span class="line">    kv.store[args.Key] = args.Value</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Append 命令不仅需要保证幂等性，还需要缓存执行的结果：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(kv *KVServer)</span></span> Append(args *PutAppendArgs, reply *PutAppendReply) &#123;</span><br><span class="line">    <span class="comment">// log.Println(&quot;Append&quot;, args)</span></span><br><span class="line">    kv.mu.Lock()</span><br><span class="line">    <span class="keyword">defer</span> kv.mu.Unlock()</span><br><span class="line">    <span class="keyword">if</span> last, ok := kv.last[args.ClientId]; ok &#123;</span><br><span class="line">        <span class="keyword">if</span> args.Seq &lt; last.Seq &#123;</span><br><span class="line">            <span class="built_in">panic</span>(<span class="string">&quot;seq &lt; last&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> args.Seq == last.Seq &#123;</span><br><span class="line">            reply.Value = last.Value</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Reply with the old value</span></span><br><span class="line">    reply.Value = kv.store[args.Key]</span><br><span class="line">    kv.last[args.ClientId] = Last&#123;Seq: args.Seq, Value: kv.store[args.Key]&#125;</span><br><span class="line">    kv.store[args.Key] += args.Value</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>distributed-system</category>
      </categories>
      <tags>
        <tag>分布式系统</tag>
        <tag>Raft</tag>
      </tags>
  </entry>
  <entry>
    <title>MIT 6.824/6.5840 分布式系统 Lab 3 - Raft 论文阅读</title>
    <url>/2025/02/20/mit-6.824-distributed-system-lab3-1/</url>
    <content><![CDATA[<p>Raft 是一种经典的分布式共识算法（Consensus algorithm）。</p>
<h2 id="复制状态机"><a class="header-anchor-1" href="#复制状态机">#</a>复制状态机</h2>
<p>复制状态机是一组服务器上，计算相同的状态，而且可以容忍部分机器下线的状态机。复制状态机是解决分布式系统中一系列容错问题的基础，例如选主。通常通过 Replicated Log 实现，共识算法的职责就是维护 Replicated Log 的一致性。</p>
<p>实际应用中，对于共识算法的要求：</p>
<ul>
<li><strong>正确性</strong>：在非拜占庭条件下，永远不会返回错误的结果；</li>
<li><strong>可用性</strong>：只要多数机器正常工作，就可以正常工作；</li>
<li>一致性不依赖于操作的时序，最坏情况下，只会导致可用性的问题；</li>
<li><strong>快速</strong>：一般情况下，一旦大多数机器响应了一轮 RPC，命令即可完成；</li>
</ul>
<h2 id="paxos-的问题"><a class="header-anchor-1" href="#paxos-的问题">#</a>Paxos 的问题</h2>
<ul>
<li>难以理解</li>
</ul>
<h2 id="raft-共识算法"><a class="header-anchor-1" href="#raft-共识算法">#</a>Raft 共识算法</h2>
<p>Raft 将共识问题分解成三个子问题：（1）选主、（2）日志复制、（3）安全性；</p>
<h3 id="raft-基本定义"><a class="header-anchor-1" href="#raft-基本定义">#</a>Raft 基本定义</h3>
<p>Raft 规定的节点状态：</p>
<ul>
<li><strong>Follower</strong>：被动响应 C 和 L 的请求；</li>
<li><strong>Leader</strong>：处理所有客户端的请求；</li>
<li><strong>Candidate</strong>：选主过程中使用；</li>
</ul>
<p>Raft 将时间划分为任意长度的任期（Term），任期用连续整数编号，起到逻辑时钟的功能。每个任期开始时先进行选举，选举出来的 Leader 会在这个任期内进行服务；否则继续下一个任期和选举。</p>
<h3 id="选主"><a class="header-anchor-1" href="#选主">#</a>选主</h3>
<p>Raft 利用心跳机制触发选主，Leader 会周期性地给所有 Follower 发送心跳宣布权威性。如果 Follower 一段时间没有收到心跳，则会开始尝试发起选主。</p>
<p>选主过程中，Follower 会将 Term++，然后请求所有 Peer 投票（自己当然会给自己投票）。结果可能有几种：</p>
<ol>
<li><strong>收到的选票数量超过半数</strong>：自己成为 Leader；</li>
<li><strong>收到了 Term 更大的 Candidate 或者 Leader 的任意 RPC</strong>：自己被强制降级为 Follower，发起的选举失效；</li>
<li><strong>收到的选票数量不到半数</strong>：没有 Leader，继续下一轮选举；</li>
</ol>
<p>节点投票时遵循简单的规则：</p>
<ul>
<li>每个 Term 最多投给一个人</li>
<li>先来后到</li>
</ul>
<p>Raft 采用随机选举超时，保证多个节点不会在同一时间启动选举。</p>
<h3 id="日志复制"><a class="header-anchor-1" href="#日志复制">#</a>日志复制</h3>
<p>当一个 Leader 被选出来之后，就开始负责这些事情：</p>
<ul>
<li><strong>给每个 Follower 发送日志</strong>：同步 Log；</li>
<li><strong>决定什么时候可以提交 Log</strong>：当 Leader 确信一条日志已经被同步到多数机器上，则认为可以提交它，Raft 机制保证了剩余机器<strong>最终</strong>将会提交相同的日志，即所谓<strong>最终一致性</strong>。</li>
</ul>
<p>Raft 的<strong>Log Matching Property</strong>：</p>
<ul>
<li>两个不同 Log 中的条目，如果 term 和 index 相同，则存储的 command 相同；</li>
<li>两个不同 Log 中的条目，如果 term 和 index 相同，则之前的所有 log 相同；</li>
</ul>
<p>在 Raft 执行过程中，由于机器崩溃重启，Follower 可能会缺失部分 Log，可能会有多的未提交的 Log，也可能两者兼有；这种情况下，Leader 会<strong>覆盖</strong>Follower 上不一致的 Log：首先两者会找到第一条不一致的 Log，然后 Leader 发送后续的 Log 给 Follower。<code>nextIndex</code>就是 Leader 用于记录每一个 Follower 同步位置的变量，初始值为 Leader 的 nextLogIndex。然后会根据<code>AppendEntries</code>的结果减小<code>nextIndex</code>。</p>
<p>一个可能的优化点是：Follower 反馈更加精确的冲突日志数量。作者怀疑这种策略在现实情况中的必要性。</p>
<p>Raft 的<strong>Leader Append-Only Property</strong>：Raft Leader 从来不需要更改或者删除自己的日志；</p>
<h3 id="安全性"><a class="header-anchor-1" href="#安全性">#</a>安全性</h3>
<p>上面描述的 Raft 不足以保证命令的顺序性，原因是多个日志冲突的 Follower 可能会交替成为 Leader，导致已经提交的 Log 被覆盖。为此还需要增加一个新的限制：</p>
<ul>
<li><strong>Leader Completeness Property</strong>：Candidate 必须拥有前一个 Term 中所有<strong>已经提交的</strong>Log，才能被选为 Leader；</li>
</ul>
<h4 id="选主限制"><a class="header-anchor-1" href="#选主限制">#</a>选主限制</h4>
<p>Raft 利用选主过程保证<strong>Leader Completeness Property</strong>，<code>RequestVote</code> RPC 请求中会包含 Candidate 的 Log 信息，如果 Log 不够新，则在投篇时会被多数节点拒绝。</p>
<p>Raft 定义的“新（Up-to-date）”：</p>
<ul>
<li>如果最后一条 Log 的 Term 不同，Term 大的更新</li>
<li>否则，Log 长的更新</li>
</ul>
<h4 id="提交前一个-term-的-log"><a class="header-anchor-1" href="#提交前一个-term-的-log">#</a>提交前一个 Term 的 Log</h4>
<p>只是 Log 被同步到多数节点，仍然不足以能够提交这个 Log。</p>
<p>Raft 要求：只有当前 Term 的 Log 才通过多数原则确认提交，非当前 Term 的不会这样。</p>
<h4 id="安全证明"><a class="header-anchor-1" href="#安全证明">#</a>安全证明</h4>
<p>略</p>
<h4 id="follower-和-candidate-崩溃重启"><a class="header-anchor-1" href="#follower-和-candidate-崩溃重启">#</a>Follower 和 Candidate 崩溃重启</h4>
<p>略</p>
<h4 id="时序和可用性"><a class="header-anchor-1" href="#时序和可用性">#</a>时序和可用性</h4>
<p>略</p>
<h3 id="集群成员变更-联合共识"><a class="header-anchor-1" href="#集群成员变更-联合共识">#</a>集群成员变更 &amp; 联合共识</h3>
<p>集群变更配置的场景是很常见的。</p>
<p>TODO</p>
<h3 id="日志压缩"><a class="header-anchor-1" href="#日志压缩">#</a>日志压缩</h3>
]]></content>
      <categories>
        <category>distributed-system</category>
      </categories>
      <tags>
        <tag>分布式系统</tag>
        <tag>Raft</tag>
      </tags>
  </entry>
  <entry>
    <title>MIT 6.824/6.5840 分布式系统 Lab 3: Raft 实现</title>
    <url>/2025/02/20/mit-6.824-distributed-system-lab3-2/</url>
    <content><![CDATA[<h2 id="基本框架"><a class="header-anchor-1" href="#基本框架">#</a>基本框架</h2>
<p>在 6.824 中，一个 Raft 应用程序的基本框架分为两层，分别是：</p>
<ul>
<li>Raft 层：处理 Raft 算法逻辑，作为底层框架，负责节点间协商；</li>
<li>Service 层：负责业务逻辑，对外提供用户服务；</li>
</ul>
<p>Service 层需要将业务逻辑表示成<code>状态机</code>和<code>对状态机的修改操作</code>，然后将需要进行的操作发送到 Raft 层，当操作被 Raft 集群多数节点确认后，再从 Raft 层接收达成共识的操作，并按照操作修改状态机；</p>
<p><code>状态机</code>：由于 Raft 有 Snapshot 的设计，因此需要业务逻辑层能够回滚到任何一个状态。</p>
<h3 id="基本设施"><a class="header-anchor-1" href="#基本设施">#</a>基本设施</h3>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> Raft <span class="keyword">struct</span> &#123;</span><br><span class="line">    mu        sync.RWMutex        <span class="comment">// Lock to protect shared access to this peer&#x27;s state</span></span><br><span class="line">    peers     []*labrpc.ClientEnd <span class="comment">// RPC end points of all peers</span></span><br><span class="line">    persister *Persister          <span class="comment">// Object to hold this peer&#x27;s persisted state</span></span><br><span class="line">    me        <span class="type">int</span>                 <span class="comment">// this peer&#x27;s index into peers[]</span></span><br><span class="line">    dead      <span class="type">int32</span>               <span class="comment">// set by Kill()</span></span><br><span class="line">    applyCh   <span class="keyword">chan</span> ApplyMsg</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Your data here (3A, 3B, 3C).</span></span><br><span class="line">    leader         <span class="type">bool</span></span><br><span class="line">    electionTimer  *time.Timer</span><br><span class="line">    heartbeatTimer *time.Timer</span><br><span class="line">    commitCond     *sync.Cond</span><br><span class="line">    replicateCond  []*sync.Cond</span><br><span class="line"></span><br><span class="line">    currentTerm <span class="type">int</span></span><br><span class="line">    votedFor    <span class="type">int</span></span><br><span class="line">    <span class="comment">// log[0] is dummy, log[0].Command is the logStartIndex</span></span><br><span class="line">    <span class="comment">// log[i] is the (logStartIndex+i)-th log entry, numbered from 1</span></span><br><span class="line">    log []LogEntry</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Volatile state on all servers</span></span><br><span class="line">    commitIndex <span class="type">int</span></span><br><span class="line">    lastApplied <span class="type">int</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Volatile state on leaders</span></span><br><span class="line">    nextIndex  []<span class="type">int</span></span><br><span class="line">    matchIndex []<span class="type">int</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>论文提及的字段：</p>
<ul>
<li><code>currentTerm int</code> – 记录当前的 Term</li>
<li><code>votedFor int</code> – 选主时使用，记录给谁投了票</li>
<li><code>log []LogEntry</code> – Raft 的核心 Log 序列</li>
</ul>
<p>可变状态：</p>
<ul>
<li><code>commitIndex int</code> – 已经达成共识的 Log 序号</li>
<li><code>lastApplied int</code> – 提交给上层的最后一个 Log 序号</li>
</ul>
<p>作为 Leader 时需要额外维护的状态：</p>
<ul>
<li><code>nextIndex []int</code> – 每个 Follower 的 nextIndex</li>
<li><code>matchIndex []int</code> – 每个 Follower 的 matchIndex</li>
</ul>
<p>我在实现时添加的额外状态：</p>
<ul>
<li><code>leader         bool</code> – 记录自己是不是 Leader</li>
<li><code>electionTimer  *time.Timer</code> – 选举 Timer</li>
<li><code>heartbeatTimer *time.Timer</code> – 作为 Leader 时使用的心跳 Timer</li>
<li><code>commitCond     *sync.Cond</code> – 异步提交的通知信号量</li>
<li><code>replicateCond  []*sync.Cond</code> – 异步同步 Log 的通知信号量</li>
</ul>
<h3 id="log-结构"><a class="header-anchor-1" href="#log-结构">#</a>Log 结构</h3>
<p>为了方便最终实现 Log Compaction，我在最开始就设计成不保存全量 Log，而是只保存中间一段。整体结构如下图所示：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">:rf.log Structure:</span><br><span class="line">    +---------+---------+------------+-----+----------+</span><br><span class="line">    | (dummy) |  Log-p  |  Log-(p+1) | ... |  Log-(n) |</span><br><span class="line">    +---------+---------+------------+-----+----------+</span><br><span class="line">   /           \___</span><br><span class="line">  /                \___</span><br><span class="line"> /                     \___</span><br><span class="line">/                          \</span><br><span class="line">+---------------------------+</span><br><span class="line">| Term:    prevLogTerm      |</span><br><span class="line">| Command: prevLogIndex=p-1 |</span><br><span class="line">+---------------------------+</span><br></pre></td></tr></table></figure>
<p>Log 序列从 1 开始计数，<code>log[0]</code> 作为哨兵节点，保存 Log 序列的起点信息。初始时，<code>rf.log[0]</code>中保存的值均为 0。</p>
<h2 id="3a-election"><a class="header-anchor-1" href="#3a-election">#</a>3A - Election</h2>
<h3 id="节点选举-心跳定时器"><a class="header-anchor-1" href="#节点选举-心跳定时器">#</a>节点选举 &amp; 心跳定时器</h3>
<p>通过 Golang 的 Timer 实现超时选举和 Leader 心跳；</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// In Make()</span></span><br><span class="line">rf.electionTimer = time.NewTimer(makeElectionTimeout())</span><br><span class="line">rf.heartbeatTimer = time.NewTimer(HeartbeatIntervalMs * time.Millisecond)</span><br></pre></td></tr></table></figure>
<p>由于超时选举和 Leader 心跳不会同时发生，这里利用 golang 的<code>select</code>语法同时监听两个 Timer：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rf *Raft)</span></span> ticker() &#123;</span><br><span class="line">    <span class="keyword">for</span> !rf.killed() &#123;</span><br><span class="line">        <span class="keyword">select</span> &#123;</span><br><span class="line">        <span class="keyword">case</span> &lt;-rf.electionTimer.C:</span><br><span class="line">            rf.electionTimer.Reset(makeElectionTimeout())</span><br><span class="line">            rf.doElection()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> &lt;-rf.heartbeatTimer.C:</span><br><span class="line">            rf.heartbeatTimer.Reset(HeartbeatIntervalMs * time.Millisecond)</span><br><span class="line">            rf.doReplicate(<span class="literal">true</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="投票逻辑"><a class="header-anchor-1" href="#投票逻辑">#</a>投票逻辑</h3>
<p>选主过程主要是要实现 <code>RequestVote</code> 这个 RPC，注意如果投出了赞成票，需要重置自己的选举 Timer，否则有可能出现节点在投出赞成票后，又立即开始选举，Leader 反复横跳的情况。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// example RequestVote RPC arguments structure.</span></span><br><span class="line"><span class="comment">// field names must start with capital letters!</span></span><br><span class="line"><span class="keyword">type</span> RequestVoteArgs <span class="keyword">struct</span> &#123;</span><br><span class="line">    Term         <span class="type">int</span></span><br><span class="line">    CandidateId  <span class="type">int</span></span><br><span class="line">    LastLogIndex <span class="type">int</span></span><br><span class="line">    LastLogTerm  <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// example RequestVote RPC reply structure.</span></span><br><span class="line"><span class="comment">// field names must start with capital letters!</span></span><br><span class="line"><span class="keyword">type</span> RequestVoteReply <span class="keyword">struct</span> &#123;</span><br><span class="line">    Term        <span class="type">int</span></span><br><span class="line">    VoteGranted <span class="type">bool</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rf *Raft)</span></span> RequestVote(args *RequestVoteArgs, reply *RequestVoteReply) &#123;</span><br><span class="line">    rf.mu.Lock()</span><br><span class="line">    <span class="keyword">defer</span> rf.mu.Unlock()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// outdated client</span></span><br><span class="line">    <span class="keyword">if</span> args.Term &lt;= rf.currentTerm &#123;</span><br><span class="line">        reply.Term = rf.currentTerm</span><br><span class="line">        reply.VoteGranted = <span class="literal">false</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// we are outdated, become follower</span></span><br><span class="line">    persist := <span class="literal">false</span></span><br><span class="line">    <span class="keyword">if</span> args.Term &gt; rf.currentTerm &#123;</span><br><span class="line">        rf.beFollower(args.Term)</span><br><span class="line">        persist = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    reply.Term = rf.currentTerm</span><br><span class="line"></span><br><span class="line">    <span class="comment">// check if we can vote for the candidate</span></span><br><span class="line">    <span class="comment">// 1. candidate&#x27;s log is at least as up-to-date as receiver&#x27;s log</span></span><br><span class="line">    <span class="comment">// 2. receiver hasn&#x27;t voted for another candidate</span></span><br><span class="line">    <span class="keyword">if</span> (rf.votedFor == <span class="number">-1</span> || rf.votedFor == args.CandidateId) &amp;&amp; rf.isPeerUpToDate(args) &#123;</span><br><span class="line">        rf.votedFor = args.CandidateId</span><br><span class="line">        rf.electionTimer.Reset(makeElectionTimeout())</span><br><span class="line">        reply.VoteGranted = <span class="literal">true</span></span><br><span class="line">        persist = <span class="literal">true</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// No need to set it to false</span></span><br><span class="line">        <span class="comment">// reply.VoteGranted = false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> persist &#123;</span><br><span class="line">        rf.persist()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>投赞成票的判据有二：首先是自己没有投给其他节点，其次是 Candidate 的日志必须比自己更新或者相同：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rf *Raft)</span></span> isPeerUpToDate(args *RequestVoteArgs) <span class="type">bool</span> &#123;</span><br><span class="line">    lastLogTerm := rf.lastLogTerm()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// client from future, we are outdated</span></span><br><span class="line">    <span class="keyword">if</span> args.LastLogTerm &gt; lastLogTerm &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// client from past, they are outdated</span></span><br><span class="line">    <span class="keyword">if</span> args.LastLogTerm &lt; lastLogTerm &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// client in the same term, check log index</span></span><br><span class="line">    <span class="keyword">return</span> args.LastLogIndex &gt;= rf.lastLogIndex()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>为了保证 Follower 不会继续超时选主，还需要实现 <code>AppendEntries</code> 这个 RPC，刷新自己的选举 Timer。详细实现见接下来的 3B。</p>
<h3 id="角色-任期切换"><a class="header-anchor-1" href="#角色-任期切换">#</a>角色 &amp; 任期切换</h3>
<p>切换角色，核心是处理 leader 和非 leader 状态之间的切换：</p>
<ul>
<li><strong>非 leader -&gt; leader</strong>：开启心跳 Timer，关闭选举 Timer，初始化 leader 状态；</li>
<li><strong>leader -&gt; 非 leader</strong>：关闭心跳 Timer，开启选举 Timer；</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rf *Raft)</span></span> switchLeader(leader <span class="type">bool</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> rf.leader == leader &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    rf.leader = leader</span><br><span class="line">    <span class="keyword">if</span> leader &#123;</span><br><span class="line">        <span class="comment">// initialize leader state</span></span><br><span class="line">        <span class="comment">// all followers are behind, send logs from the beginning</span></span><br><span class="line">        nextLogIndex := rf.nextLogIndex()</span><br><span class="line">        <span class="keyword">for</span> i := <span class="keyword">range</span> rf.peers &#123;</span><br><span class="line">            rf.nextIndex[i] = nextLogIndex</span><br><span class="line">            rf.matchIndex[i] = <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        rf.electionTimer.Stop()</span><br><span class="line">        rf.heartbeatTimer.Reset(HeartbeatIntervalMs * time.Millisecond)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        rf.heartbeatTimer.Stop()</span><br><span class="line">        rf.electionTimer.Reset(makeElectionTimeout())</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>任期更新主要是处理自己落后的情况，例如收到 Term 更大的 AppendEntries、InstallSnapshot、RequestVote 请求。此时我们需要更新自己的任期：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rf *Raft)</span></span> beFollower(term <span class="type">int</span>) &#123;</span><br><span class="line">    rf.currentTerm = term</span><br><span class="line">    rf.votedFor = <span class="number">-1</span></span><br><span class="line">    rf.switchLeader(<span class="literal">false</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3b-agreement"><a class="header-anchor-1" href="#3b-agreement">#</a>3B - Agreement</h2>
<p>在 Raft 中，一共有两种复制日志的方式：<code>AppendEntries</code> 和 <code>InstallSnapshot</code>；</p>
<p>默认情况下，Leader 利用 <code>AppendEntries</code> RPC 请求把自己的日志推给 Follower，Follower 根据 Term 大小、以及 Log 是否冲突等因素反馈是否采纳。如果不采纳，Leader 再根据反馈的结果调整自己发送的日志范围。</p>
<h3 id="replicator-goroutine"><a class="header-anchor-1" href="#replicator-goroutine">#</a>Replicator Goroutine</h3>
<p>为每个 Follower 创建一个单独的 Replicator 协程，并发推送日志。
Replicator 协程负责发送正确的 RPC 把日志同步到目标节点上。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Replicator is a goroutine that replicates logs to a peer by batch.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rf *Raft)</span></span> replicator(i <span class="type">int</span>) &#123;</span><br><span class="line">    rf.replicateCond[i].L.Lock()</span><br><span class="line">    <span class="keyword">defer</span> rf.replicateCond[i].L.Unlock()</span><br><span class="line">    <span class="keyword">for</span> !rf.killed() &#123;</span><br><span class="line">        <span class="keyword">for</span> !rf.needReplicateTo(i) &#123;</span><br><span class="line">            rf.replicateCond[i].Wait()</span><br><span class="line">        &#125;</span><br><span class="line">        rf.replicateTo(i)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 是否需要推送日志到目标节点</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rf *Raft)</span></span> needReplicateTo(i <span class="type">int</span>) <span class="type">bool</span> &#123;</span><br><span class="line">    rf.mu.RLock()</span><br><span class="line">    <span class="keyword">defer</span> rf.mu.RUnlock()</span><br><span class="line">    <span class="keyword">return</span> rf.leader &amp;&amp; rf.matchIndex[i] &lt; rf.lastLogIndex()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// In Main()</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> rf.peers &#123;</span><br><span class="line">    <span class="keyword">if</span> i == rf.me &#123;</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    &#125;</span><br><span class="line">    rf.replicateCond[i] = sync.NewCond(&amp;sync.Mutex&#123;&#125;)</span><br><span class="line">    <span class="keyword">go</span> rf.replicator(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>RPC 判断逻辑，根据 Follower 的 <code>nextIndex</code> 判断应该调用 <code>AppendEntries</code> 或者 <code>InstallSnapshot</code>：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rf *Raft)</span></span> replicateTo(i <span class="type">int</span>) &#123;</span><br><span class="line">    <span class="comment">// Use read lock to avoid blocking other replicators</span></span><br><span class="line">    rf.mu.RLock()</span><br><span class="line">    <span class="keyword">if</span> !rf.leader &#123;</span><br><span class="line">        rf.mu.RUnlock()</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    nextIndex := rf.nextIndex[i]</span><br><span class="line">    <span class="keyword">if</span> nextIndex &lt;= rf.prevLogIndex() &#123;</span><br><span class="line">        args := &amp;InstallSnapshotArgs&#123;</span><br><span class="line">            Term:              rf.currentTerm,</span><br><span class="line">            LeaderId:          rf.me,</span><br><span class="line">            LastIncludedIndex: rf.prevLogIndex(),</span><br><span class="line">            LastIncludedTerm:  rf.prevLogTerm(),</span><br><span class="line">            Data:              rf.persister.ReadSnapshot(),</span><br><span class="line">        &#125;</span><br><span class="line">        rf.mu.RUnlock()</span><br><span class="line">        rf.replicateByIS(i, args)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// copy to avoid data race</span></span><br><span class="line">        logs := rf.getLogFrom(nextIndex)</span><br><span class="line">        logs_copy := <span class="built_in">make</span>([]LogEntry, <span class="built_in">len</span>(logs))</span><br><span class="line">        <span class="built_in">copy</span>(logs_copy, logs)</span><br><span class="line">        args := &amp;AppendEntriesArgs&#123;</span><br><span class="line">            Term:         rf.currentTerm,</span><br><span class="line">            LeaderId:     rf.me,</span><br><span class="line">            PrevLogIndex: nextIndex - <span class="number">1</span>,</span><br><span class="line">            PrevLogTerm:  rf.getLogTerm(nextIndex - <span class="number">1</span>),</span><br><span class="line">            Entries:      logs_copy, <span class="comment">// not include the dummy log</span></span><br><span class="line">            LeaderCommit: rf.commitIndex,</span><br><span class="line">        &#125;</span><br><span class="line">        rf.mu.RUnlock()</span><br><span class="line">        rf.replicateByAE(i, args)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="appendentries-rpc"><a class="header-anchor-1" href="#appendentries-rpc">#</a>AppendEntries RPC</h3>
<p>Follower 收到 AppendEntries 之后，需要进行一系列检查：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> AppendEntriesArgs <span class="keyword">struct</span> &#123;</span><br><span class="line">    Term         <span class="type">int</span></span><br><span class="line">    LeaderId     <span class="type">int</span></span><br><span class="line">    PrevLogIndex <span class="type">int</span></span><br><span class="line">    PrevLogTerm  <span class="type">int</span></span><br><span class="line">    Entries      []LogEntry <span class="comment">// not include the dummy log</span></span><br><span class="line">    LeaderCommit <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> AppendEntriesReply <span class="keyword">struct</span> &#123;</span><br><span class="line">    Term          <span class="type">int</span></span><br><span class="line">    Success       <span class="type">bool</span></span><br><span class="line">    ConflictTerm  <span class="type">int</span></span><br><span class="line">    ConflictIndex <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rf *Raft)</span></span> AppendEntries(args *AppendEntriesArgs, reply *AppendEntriesReply) &#123;</span><br><span class="line">    rf.mu.Lock()</span><br><span class="line">    <span class="keyword">defer</span> rf.mu.Unlock()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// outdated leader</span></span><br><span class="line">    <span class="keyword">if</span> args.Term &lt; rf.currentTerm &#123;</span><br><span class="line">        reply.Term = rf.currentTerm</span><br><span class="line">        reply.Success = <span class="literal">false</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// we are outdated, become follower</span></span><br><span class="line">    persist := <span class="literal">false</span></span><br><span class="line">    <span class="keyword">if</span> args.Term &gt; rf.currentTerm &#123;</span><br><span class="line">        rf.beFollower(args.Term)</span><br><span class="line">        persist = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    rf.electionTimer.Reset(makeElectionTimeout())</span><br><span class="line">    reply.Term = rf.currentTerm</span><br><span class="line"></span><br><span class="line">    <span class="comment">// conflict because we don&#x27;t have the prev log entry</span></span><br><span class="line">    <span class="comment">// ===============[....we have....]</span></span><br><span class="line">    <span class="comment">// ========[....we got....]</span></span><br><span class="line">    <span class="keyword">if</span> args.PrevLogIndex &lt; rf.prevLogIndex() &#123;</span><br><span class="line">        reply.Success = <span class="literal">false</span></span><br><span class="line">        <span class="comment">// give us later log index</span></span><br><span class="line">        reply.ConflictTerm = <span class="number">-1</span></span><br><span class="line">        reply.ConflictIndex = rf.nextLogIndex()</span><br><span class="line">        <span class="keyword">if</span> persist &#123;</span><br><span class="line">            rf.persist()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// cannot match because of missing log entries</span></span><br><span class="line">    <span class="comment">// =====[....we have....]</span></span><br><span class="line">    <span class="comment">// ==========================[....we got....]</span></span><br><span class="line">    <span class="keyword">if</span> rf.lastLogIndex() &lt; args.PrevLogIndex &#123;</span><br><span class="line">        reply.Success = <span class="literal">false</span></span><br><span class="line">        reply.ConflictTerm = <span class="number">-1</span></span><br><span class="line">        reply.ConflictIndex = rf.nextLogIndex()</span><br><span class="line">        <span class="keyword">if</span> persist &#123;</span><br><span class="line">            rf.persist()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// conflict because log entry&#x27;s term doesn&#x27;t match</span></span><br><span class="line">    <span class="comment">// ===============[x....we have....]</span></span><br><span class="line">    <span class="comment">// =============[..y....we got...]</span></span><br><span class="line">    <span class="keyword">if</span> rf.getLogTerm(args.PrevLogIndex) != args.PrevLogTerm &#123;</span><br><span class="line">        reply.Success = <span class="literal">false</span></span><br><span class="line">        reply.ConflictTerm = rf.getLogTerm(args.PrevLogIndex)</span><br><span class="line">        <span class="comment">// Find the first index that has the same term as provided</span></span><br><span class="line">        reply.ConflictIndex = rf.prevLogIndex()</span><br><span class="line">        <span class="keyword">for</span> idx := <span class="number">1</span>; idx &lt; <span class="built_in">len</span>(rf.log); idx++ &#123;</span><br><span class="line">            <span class="keyword">if</span> rf.log[idx].Term == reply.ConflictTerm &#123;</span><br><span class="line">                reply.ConflictIndex = rf.getLogIndex(idx)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> persist &#123;</span><br><span class="line">            rf.persist()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    reply.Success = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Overwrite unmatched log entries</span></span><br><span class="line">    <span class="comment">// If no conflict, just append the new logs if any</span></span><br><span class="line">    <span class="comment">// ===============[.....we have.....]</span></span><br><span class="line">    <span class="comment">// ===============[...we got...]</span></span><br><span class="line">    <span class="keyword">for</span> i, entry := <span class="keyword">range</span> args.Entries &#123;</span><br><span class="line">        index := args.PrevLogIndex + i + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> !rf.hasLog(index) || rf.getLogTerm(index) != entry.Term &#123;</span><br><span class="line">            <span class="comment">// found conflict, truncate logs</span></span><br><span class="line">            log := rf.log[:index-rf.prevLogIndex()]</span><br><span class="line">            rf.log = <span class="built_in">append</span>(log, args.Entries[i:]...)</span><br><span class="line">            persist = <span class="literal">true</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// update commitIndex</span></span><br><span class="line">    <span class="comment">// sometimes the leader&#x27;s commitIndex is ahead of the follower&#x27;s</span></span><br><span class="line">    newCommitIndex := Min(args.LeaderCommit, rf.lastLogIndex())</span><br><span class="line">    <span class="keyword">if</span> newCommitIndex &gt; rf.commitIndex &#123;</span><br><span class="line">        rf.commitIndex = newCommitIndex</span><br><span class="line">        rf.applyCond.Signal()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> persist &#123;</span><br><span class="line">        rf.persist()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="appendentries-响应处理"><a class="header-anchor-1" href="#appendentries-响应处理">#</a>AppendEntries 响应处理</h3>
<p>在发送完 AppendEntries 之后，需要根据 Follower 的反馈进行一系列处理。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rf *Raft)</span></span> replicateByAE(i <span class="type">int</span>, args *AppendEntriesArgs) &#123;</span><br><span class="line">    reply := &amp;AppendEntriesReply&#123;&#125;</span><br><span class="line">    <span class="keyword">if</span> !rf.sendAppendEntries(i, args, reply) &#123;</span><br><span class="line">        <span class="comment">// net failure</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    rf.mu.Lock()</span><br><span class="line">    <span class="keyword">defer</span> rf.mu.Unlock()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// we are still the leader</span></span><br><span class="line">    <span class="keyword">if</span> rf.currentTerm != args.Term || !rf.leader &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> reply.Success &#123;</span><br><span class="line">        nextIndex := args.PrevLogIndex + <span class="built_in">len</span>(args.Entries)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// outdated response</span></span><br><span class="line">        <span class="keyword">if</span> nextIndex &lt;= rf.matchIndex[i] &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        rf.nextIndex[i] = nextIndex + <span class="number">1</span></span><br><span class="line">        rf.matchIndex[i] = nextIndex</span><br><span class="line">        rf.updateCommitIndex()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Reject because of outdateness</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// we are outdated</span></span><br><span class="line">        <span class="keyword">if</span> reply.Term &gt; rf.currentTerm &#123;</span><br><span class="line">            rf.beFollower(reply.Term)</span><br><span class="line">            rf.persist()</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ????</span></span><br><span class="line">        <span class="keyword">if</span> reply.Term &lt; rf.currentTerm || !rf.leader &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        nextIndex := reply.ConflictIndex</span><br><span class="line">        <span class="keyword">if</span> reply.ConflictTerm != <span class="number">-1</span> &#123;</span><br><span class="line">            prevLogIndex := rf.prevLogIndex()</span><br><span class="line">            <span class="keyword">for</span> j := args.PrevLogIndex; j &gt; prevLogIndex; j-- &#123;</span><br><span class="line">                <span class="keyword">if</span> rf.getLogTerm(j) == reply.ConflictTerm &#123;</span><br><span class="line">                    nextIndex = j + <span class="number">1</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// take minimum value</span></span><br><span class="line">        <span class="keyword">if</span> nextIndex &lt; rf.nextIndex[i] &#123;</span><br><span class="line">            rf.nextIndex[i] = nextIndex</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// resend immediately</span></span><br><span class="line">        <span class="keyword">go</span> rf.replicateTo(i)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>更新 commitIndex 时要注意 Figure 8 问题，Raft 的限制：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rf *Raft)</span></span> updateCommitIndex() &#123;</span><br><span class="line">    newCommitIndex := topK(rf.matchIndex, (<span class="built_in">len</span>(rf.peers)<span class="number">-1</span>)/<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">if</span> newCommitIndex &gt; rf.commitIndex &#123;</span><br><span class="line">        <span class="comment">// Raft Paper&#x27;s Figure 8</span></span><br><span class="line">        <span class="comment">// Raft never commits log entries from previous terms by counting</span></span><br><span class="line">        <span class="comment">// replicas. Only log entries from the leader’s current term are</span></span><br><span class="line">        <span class="comment">// committed by counting replicas; once an entry from the current term</span></span><br><span class="line">        <span class="comment">// has been committed in this way, then all prior entries are</span></span><br><span class="line">        <span class="comment">// committed indirectly because of the Log Matching Property.</span></span><br><span class="line">        <span class="keyword">if</span> rf.getLogTerm(newCommitIndex) == rf.currentTerm &#123;</span><br><span class="line">            rf.commitIndex = newCommitIndex</span><br><span class="line">            rf.applyCond.Signal()</span><br><span class="line">            <span class="comment">// immediately notify other followers to update their commitIndex</span></span><br><span class="line">            rf.doReplicate(<span class="literal">true</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="日志提交"><a class="header-anchor-1" href="#日志提交">#</a>日志提交</h3>
<p>Raft 层的日志会通过一个 blocking 的 go channel 发给 Service 层执行，由于 Service 层可能不会立即处理，因此必须采用异步提交的方式，而且提交的时候也不能持有锁。</p>
<p>最简单的实现方法是在 Raft 层中创建一个单独的 goroutine，专门负责提交日志：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rf *Raft)</span></span> applier() &#123;</span><br><span class="line">    rf.mu.Lock()</span><br><span class="line">    <span class="keyword">defer</span> rf.mu.Unlock()</span><br><span class="line">    <span class="keyword">for</span> !rf.killed() &#123;</span><br><span class="line">        <span class="keyword">if</span> rf.pendingSnapshot != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="comment">// apply snapshot</span></span><br><span class="line">            snapshot := rf.pendingSnapshot</span><br><span class="line">            rf.pendingSnapshot = <span class="literal">nil</span></span><br><span class="line">            rf.mu.Unlock()</span><br><span class="line">            rf.applyCh &lt;- *snapshot</span><br><span class="line">            rf.mu.Lock()</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> rf.lastApplied &lt; rf.commitIndex &#123;</span><br><span class="line">            <span class="comment">// apply logs</span></span><br><span class="line">            startIndex := rf.lastApplied + <span class="number">1</span></span><br><span class="line">            entries := <span class="built_in">append</span>([]LogEntry&#123;&#125;, rf.getLogSlice(startIndex, rf.commitIndex+<span class="number">1</span>)...)</span><br><span class="line">            rf_commitIndex := rf.commitIndex</span><br><span class="line">            rf.mu.Unlock()</span><br><span class="line">            <span class="keyword">for</span> i, entry := <span class="keyword">range</span> entries &#123;</span><br><span class="line">                rf.applyCh &lt;- ApplyMsg&#123;</span><br><span class="line">                    CommandValid: <span class="literal">true</span>,</span><br><span class="line">                    Command:      entry.Command,</span><br><span class="line">                    CommandTerm:  entry.Term,</span><br><span class="line">                    CommandIndex: startIndex + i,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            rf.mu.Lock()</span><br><span class="line">            rf.lastApplied = Max(rf.lastApplied, rf_commitIndex)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            rf.applyCond.Wait()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3c-persistence"><a class="header-anchor-1" href="#3c-persistence">#</a>3C - Persistence</h2>
<p>为了数据安全性，Raft 需要周期性地把自己的状态持久化到硬盘上，需要持久化的信息论文中已经讲过。代码中，我们利用 labgob 将这些信息序列化：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rf *Raft)</span></span> serialize() []<span class="type">byte</span> &#123;</span><br><span class="line">    w := <span class="built_in">new</span>(bytes.Buffer)</span><br><span class="line">    e := labgob.NewEncoder(w)</span><br><span class="line">    e.Encode(rf.currentTerm)</span><br><span class="line">    e.Encode(rf.votedFor)</span><br><span class="line">    e.Encode(rf.log)</span><br><span class="line">    <span class="keyword">return</span> w.Bytes()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>持久化方法：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rf *Raft)</span></span> persist() &#123;</span><br><span class="line">    <span class="comment">// Your code here (3C).</span></span><br><span class="line">    rf.persister.Save(rf.serialize(), rf.persister.snapshot)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rf *Raft)</span></span> persistWithSnapshot(snapshot []<span class="type">byte</span>) &#123;</span><br><span class="line">    rf.persister.Save(rf.serialize(), snapshot)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>持久化的时机有二：</p>
<ul>
<li>每次修改<code>Term</code>、<code>VotedFor</code>、或者<code>Log</code>之后</li>
<li>收到了 <code>InstallSnapshot</code> RPC 请求之后</li>
</ul>
<h2 id="3d-compaction-snapshot"><a class="header-anchor-1" href="#3d-compaction-snapshot">#</a>3D - Compaction / Snapshot</h2>
<h3 id="快照-api"><a class="header-anchor-1" href="#快照-api">#</a>快照 API</h3>
<p>为了避免 Raft Log 无限制增长，也为了加快 Raft 节点及状态机在崩溃后的恢复速度 (从头重放一遍所有 Log)，Raft 设计了 Log Compaction 机制，允许把过早的 Logs 换成一个等价的 State Machine Snapshot。
API 设计如下，Snapshot 的发起方是上层 Service，发起时需要携带一个 State Machine Snapshot 以及对应的 Log Index：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// the service says it has created a snapshot that has</span></span><br><span class="line"><span class="comment">// all info up to and including index. this means the</span></span><br><span class="line"><span class="comment">// service no longer needs the log through (and including)</span></span><br><span class="line"><span class="comment">// that index. Raft should now trim its log as much as possible.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rf *Raft)</span></span> Snapshot(index <span class="type">int</span>, snapshot []<span class="type">byte</span>) &#123;</span><br><span class="line">    rf.mu.Lock()</span><br><span class="line">    <span class="keyword">defer</span> rf.mu.Unlock()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// The log entry at index is already included in the snapshot</span></span><br><span class="line">    <span class="keyword">if</span> index &lt;= rf.prevLogIndex() &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// truncate logs</span></span><br><span class="line">    rf.log = rf.getLogFrom(index)</span><br><span class="line">    rf.log[<span class="number">0</span>].Command = index</span><br><span class="line"></span><br><span class="line">    rf.persistWithSnapshot(snapshot)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="installsnapshot-rpc"><a class="header-anchor-1" href="#installsnapshot-rpc">#</a>InstallSnapshot RPC</h3>
<p>在进行过 Log Compaction 的情况下，Follower 所需的日志可能已经被 Compaction 掉了，这种情况下 Leader 会发送 <code>InstallSnapshot</code> RPC 请求直接推一个 Snapshot 给 Follower。注意此时 Follower 是不会反馈结果的；</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> InstallSnapshotArgs <span class="keyword">struct</span> &#123;</span><br><span class="line">    Term              <span class="type">int</span></span><br><span class="line">    LeaderId          <span class="type">int</span></span><br><span class="line">    LastIncludedIndex <span class="type">int</span></span><br><span class="line">    LastIncludedTerm  <span class="type">int</span></span><br><span class="line">    Data              []<span class="type">byte</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> InstallSnapshotReply <span class="keyword">struct</span> &#123;</span><br><span class="line">    Term <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rf *Raft)</span></span> InstallSnapshot(args *InstallSnapshotArgs, reply *InstallSnapshotReply) &#123;</span><br><span class="line">    rf.mu.Lock()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// outdated leader</span></span><br><span class="line">    <span class="keyword">if</span> args.Term &lt; rf.currentTerm &#123;</span><br><span class="line">        reply.Term = rf.currentTerm</span><br><span class="line">        rf.mu.Unlock()</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// we are outdated, become follower</span></span><br><span class="line">    <span class="keyword">if</span> args.Term &gt; rf.currentTerm &#123;</span><br><span class="line">        rf.beFollower(args.Term)</span><br><span class="line">        rf.persist()</span><br><span class="line">    &#125;</span><br><span class="line">    reply.Term = rf.currentTerm</span><br><span class="line">    rf.electionTimer.Reset(makeElectionTimeout())</span><br><span class="line"></span><br><span class="line">    <span class="comment">// outdated snapshot</span></span><br><span class="line">    <span class="keyword">if</span> args.LastIncludedIndex &lt;= rf.prevLogIndex() || args.LastIncludedIndex &lt;= rf.commitIndex &#123;</span><br><span class="line">        rf.mu.Unlock()</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> !rf.useAsyncInstallSnapshot &#123;</span><br><span class="line">        rf.doInstallSnapshot(args.LastIncludedTerm, args.LastIncludedIndex, args.Data)</span><br><span class="line">        <span class="comment">// overwrite is ok</span></span><br><span class="line">        rf.pendingSnapshot = &amp;ApplyMsg&#123;</span><br><span class="line">            SnapshotValid: <span class="literal">true</span>,</span><br><span class="line">            Snapshot:      args.Data,</span><br><span class="line">            SnapshotTerm:  args.LastIncludedTerm,</span><br><span class="line">            SnapshotIndex: args.LastIncludedIndex,</span><br><span class="line">        &#125;</span><br><span class="line">        rf.mu.Unlock()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        rf.mu.Unlock()</span><br><span class="line">        <span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">            <span class="comment">// Notify the service that we are going to switch to a snapshot.</span></span><br><span class="line">            <span class="comment">// When the service is ready, it should call `TryInstallSnapshot`</span></span><br><span class="line">            <span class="comment">// and switch to the snapshot.</span></span><br><span class="line">            rf.applyCh &lt;- ApplyMsg&#123;</span><br><span class="line">                SnapshotValid: <span class="literal">true</span>,</span><br><span class="line">                Snapshot:      args.Data,</span><br><span class="line">                SnapshotTerm:  args.LastIncludedTerm,</span><br><span class="line">                SnapshotIndex: args.LastIncludedIndex,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="installsnapshot-响应处理"><a class="header-anchor-1" href="#installsnapshot-响应处理">#</a>InstallSnapshot 响应处理</h3>
<p>和 AppendEntries 的处理类似：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rf *Raft)</span></span> replicateByIS(i <span class="type">int</span>, args *InstallSnapshotArgs) &#123;</span><br><span class="line">    reply := &amp;InstallSnapshotReply&#123;&#125;</span><br><span class="line">    <span class="keyword">if</span> !rf.sendInstallSnapshot(i, args, reply) &#123;</span><br><span class="line">        <span class="comment">// net failure</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    rf.mu.Lock()</span><br><span class="line">    <span class="keyword">defer</span> rf.mu.Unlock()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// we are still the leader</span></span><br><span class="line">    <span class="keyword">if</span> rf.currentTerm != args.Term || !rf.leader &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// we are outdated</span></span><br><span class="line">    <span class="keyword">if</span> reply.Term &gt; rf.currentTerm &#123;</span><br><span class="line">        rf.beFollower(reply.Term)</span><br><span class="line">        rf.persist()</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> args.LastIncludedIndex &gt; rf.matchIndex[i] &#123;</span><br><span class="line">        rf.matchIndex[i] = args.LastIncludedIndex</span><br><span class="line">        rf.updateCommitIndex()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// increase nextIndex by 1 or more</span></span><br><span class="line">    nextIndex := Max(rf.nextIndex[i], args.LastIncludedIndex) + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> nextIndex &lt;= rf.nextLogIndex() &#123;</span><br><span class="line">        rf.nextIndex[i] = nextIndex</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>distributed-system</category>
      </categories>
      <tags>
        <tag>分布式系统</tag>
        <tag>Raft</tag>
      </tags>
  </entry>
  <entry>
    <title>The Google File System 论文阅读</title>
    <url>/2025/02/23/the-google-file-system/</url>
    <content><![CDATA[<p>很早就想读读大名鼎鼎的 GFS 的论文了，这次终于抽出时间好好读一下。</p>
<h2 id="0-摘要"><a class="header-anchor-1" href="#0-摘要">#</a>0. 摘要</h2>
<p>GFS 是一个可扩展的分布式文件系统，用于大的、分布式的数据密集型应用。
GFS 在运行在廉价的商用硬件上运行的同时，对外提供容错性。服务大量客户端时，能提供良好的总性能。</p>
<p>在 Google 的环境中经过了实际考验。</p>
<h2 id="1-引言"><a class="header-anchor-1" href="#1-引言">#</a>1. 引言</h2>
<p>GFS 的设计目标：高性能、可扩展、可靠性、可用性。</p>
<ol>
<li>在大规模系统中，组件故障是常态。因此持续监测，错误检测，容错性和自动恢复是必须包含的部分；</li>
<li>预期文件会很大，常见的是 GB 级别；</li>
<li>大多数 workload 模式是追加写而非覆盖写，文件写入后只会被读取，读取通常是顺序读。因此关键点在于保证追加写的性能和原子性；</li>
<li>协同设计上层应用和 FS 的 API 对提供整个系统的弹性有好处。例如放宽一致性约束简化应用程序。</li>
</ol>
<h2 id="2-设计概述"><a class="header-anchor-1" href="#2-设计概述">#</a>2. 设计概述</h2>
<h3 id="2-1-假设"><a class="header-anchor-1" href="#2-1-假设">#</a>2.1 假设</h3>
<ol>
<li>使用经常故障的廉价商用硬件</li>
<li>保存相当多的大文件</li>
<li>读 workload 主要是大量顺序读和少量随机读</li>
<li>写 workload 主要是大块的追加写</li>
<li>需要给追加写操作提供明确的并发语义</li>
<li>高带宽比低延迟更重要</li>
</ol>
<h3 id="2-2-接口"><a class="header-anchor-1" href="#2-2-接口">#</a>2.2 接口</h3>
<p>GFS 提供的文件系统接口有：create, delete, open, close, read, write, snapshot 和 record append。</p>
<p>record append 是原子性的追加写操作，用于多个客户端并发写入同一个文件。</p>
<h3 id="2-3-架构"><a class="header-anchor-1" href="#2-3-架构">#</a>2.3 架构</h3>
<p>GFS 包括一个 master 节点，多个 chunkserver 节点。都是普通 Linux 机器上运行的用户态进程。</p>
<p>文件会分成固定大小的 chunks，每个 chunk 有一个全局唯一的 64-bit 的 chunk handle 作为标识。
chunkserver 将 chunks 保存在本地磁盘上，通过 chunk handle 去读写，可以只读写其中某一段。为了数据可靠性，每个 chunk 会被复制到多个 chunkserver 上，默认是 3 副本。</p>
<p>master 负责元数据管理，包括 namespace, ACL 信息, 文件到 chunk 的映射，chunk 的位置信息。还负责控制全局的任务，例如 chunk 租约管理, 垃圾回收, chunk 迁移。
master 通过 HeartBeat 消息给 chunkserver 分发任务和回收状态。</p>
<p>GFS 客户端是一个用户态库的形式，和应用程序链接在一起。提供用户态的类文件系统接口。</p>
<p>因为大多数应用程序都是流式访问大文件，客户端和 chunkserver 都不缓存数据。这样避免了缓存一致性问题，可以简化实现。因为 Linux 本身对磁盘文件会有缓存，chunkserver 也不缓存数据。</p>
<h3 id="2-4-master-设计"><a class="header-anchor-1" href="#2-4-master-设计">#</a>2.4 Master 设计</h3>
<p>单个 Master 可以简化设计，因为所有信息都保存在这个节点上，所以可以使用更高级的 chunk 的放置策略。但是必须注意最小化 Master 对读写的参与，避免单点形成系统瓶颈。客户端先问 Master 获取 chunk 的位置信息，然后直接和 chunkserver 通信。这个位置信息会缓存一段时间。</p>
<p>客户端的读操作：</p>
<ol>
<li>由于 chunk 大小固定，客户端先将欲访问的 byte range 转换成 chunk index</li>
<li>向 Master 请求 chunk 的位置信息。客户端缓存这个信息一段时间。</li>
<li>客户端和最近的持有该 chunk 的 chunkserver 通信，获取实际数据。</li>
</ol>
<h3 id="2-5-chunk-大小"><a class="header-anchor-1" href="#2-5-chunk-大小">#</a>2.5 Chunk 大小</h3>
<p>大 chunk 的好处：</p>
<ol>
<li>减少客户端和 Master 之间的交互次数</li>
<li>应用程序对文件的操作具有局部性，可以减少与 chunkserver 的通信</li>
<li>减小了元数据的大小，使之可以放在内存中</li>
</ol>
<p>坏处：</p>
<ol>
<li>对小文件不友好，容易导致局部热点。一个例子：一个 exe 文件写到 GFS 上，然后很多机器同时拉取这个文件去执行。临时解决方案是提高这个文件的备份数量，并且让读机器随机启动。长期解决方案是允许客户端之间 P2P 分发文件。</li>
</ol>
<h3 id="2-6-元数据"><a class="header-anchor-1" href="#2-6-元数据">#</a>2.6 元数据</h3>
<p>Master 节点保存三类元数据：</p>
<ol>
<li>文件和 chunk 的 namespace</li>
<li>文件到 chunk 的映射</li>
<li>chunk 的每个副本的位置信息。</li>
</ol>
<p>所有这些元数据都存在内存中。2 和 3 还会额外通过 Operation Log 的方式持久化到本地磁盘上。</p>
<h4 id="2-6-1-内存数据结构"><a class="header-anchor-1" href="#2-6-1-内存数据结构">#</a>2.6.1 内存数据结构</h4>
<p>Master 会周期性地扫描所有的状态，用于当 chunkserver 故障的时候，实现 chunk 垃圾回收，再复制等操作；以及在 chunkserver 间平衡负载和磁盘空间。</p>
<p>一个潜在的考虑是，整个系统可能被内存大小限制。但实际上没问题，每个 64MB 的 chunk 仅需要 64B 的元数据。</p>
<p>相对于单点的种种好处（简单性、可靠性、性能、弹性），多花费一点内存，这个 trade-off 是值得的。</p>
<h4 id="2-6-2-chunk-位置"><a class="header-anchor-1" href="#2-6-2-chunk-位置">#</a>2.6.2 chunk 位置</h4>
<p>Master 节点不持久化 chunk 的位置信息，而是在开机时从 chunkserver 处轮询一遍。</p>
<p>如果持久化 chunk 位置信息，就需要额外的机制保证两者同步，增加了复杂度。</p>
<p>另一个理解方式是: chunkserver 对于自己持有的 chunks 有最终决定权，因此 master 在保存一次位置信息是多余的。</p>
<h3 id="2-6-3-operation-log"><a class="header-anchor-1" href="#2-6-3-operation-log">#</a>2.6.3 Operation Log</h3>
<p>Operation Log 记录了对元数据的修改，是整个 GFS 的关键。</p>
<p>因此我们需要保证元数据持久化完毕之前，不能暴露给客户端看到。
GFS 会把 Operation Log 复制到多个远程机器上，而且只有所有机器上都落盘完成，才会回应客户端。
Master 会累计几条 Log，然后一次性刷入磁盘。</p>
<p>Master 机器会重放所有的 Operation Log 来恢复状态。为了加快恢复速度，Master 会定期生成 checkpoint。
Checkpoint 采用了压缩 B 树的形式，可以快速加载到内存中。</p>
<p>为了防止 Checkpoint 过程阻塞住 Master 的正常操作，Master 会先切换到一个新的 Log 文件，然后在单独的线程中生成 Checkpoint。</p>
<p>老旧的 checkpoint 和 Log 可以直接删掉了，但实践中，会保存一段时间，以防止意外的故障。</p>
<h2 id="2-7-一致性模型"><a class="header-anchor-1" href="#2-7-一致性模型">#</a>2.7 一致性模型</h2>
<p>GFS 采用了一种宽松的一致性模型。</p>
<h3 id="2-7-1-gfs-的承诺"><a class="header-anchor-1" href="#2-7-1-gfs-的承诺">#</a>2.7.1 GFS 的承诺</h3>
<p>对于 namespace 的变更（例如文件创建）操作是原子的。对文件内容的修改不是原子的。我们首先定义一段数据区域是：</p>
<ul>
<li>
<p>一致的（consistent）：如果所有 client 都能读到一样的数据</p>
</li>
<li>
<p>确定的（defined）：如果该区域是 consistent，而且 client 能够读到自己刚刚写入的数据</p>
</li>
<li>
<p>串行写: 数据区域是一致且确定的，因为只有一个 client 写入。</p>
</li>
<li>
<p>并发写: 是一致的但不是确定的，因为所有 client 都能读到一样的数据，但是不确定是哪一个写入。</p>
</li>
<li>
<p>写失败: 会导致数据区域 inconsistent，因为 client 读到的数据不一样。</p>
</li>
</ul>
<p>GFS 有两种写的方法：</p>
<ul>
<li>write: 写入到指定的 offset</li>
<li>record append: 原子地写入到文件末尾，at least once 语义, 返回写入的 offset</li>
</ul>
<h3 id="2-7-2-对应用程序的影响"><a class="header-anchor-1" href="#2-7-2-对应用程序的影响">#</a>2.7.2 对应用程序的影响</h3>
<p>GFS 应用程序只要进行一些简单的修改，就可以适应这种一致性模型。</p>
<ul>
<li>依赖追加写而不是覆盖写</li>
<li>做 checkpoint</li>
<li>写能够自校验、自定位的数据</li>
</ul>
<h2 id="3-系统交互"><a class="header-anchor-1" href="#3-系统交互">#</a>3. 系统交互</h2>
<p>设计的目标是尽可能减小 Master 在所有操作中的参与。</p>
<h3 id="3-1-租约和变更顺序"><a class="header-anchor-1" href="#3-1-租约和变更顺序">#</a>3.1 租约和变更顺序</h3>
<p><em>变更</em>是一次修改文件数据或者 chunk 元数据的操作，例如写或者追加。变更需要在 chunk 的所有副本上进行。</p>
<p>GFS 使用租约来维持多个副本之前修改顺序的一致性。
Master 会给一个 chunk 的一个副本颁发一个租约，称之为 <em>primary</em>。由 primary 选择一个所有副本之间修改的顺序，所有副本会按照这个顺序来修改。</p>
<p>租约有 60 秒的有效期，但是如果时间不够，primary 可以请求 master 续约。续约通过 HeartBeat 消息来完成。
Master 可以随时撤销租约，例如当 primary 故障。</p>
<p>GFS 的写过程如下：</p>
<ol>
<li>客户端向 Master 请求 chunk 的位置信息，包括谁是 primary 还有其他副本的位置。如果此时没有 primary，Master 会选择一个。</li>
<li>Master 回复 primary 的身份和其他副本的位置。客户端会缓存这个信息一段时间。除非 primary 故障，客户端不会重新请求 Master。</li>
<li>客户端以任意顺序把数据推送到每一个副本上。每个 chunkserver 会把收到的数据先放进一个 LRU 缓存中，等待被取走或者过期。</li>
<li>当所有的副本都确认收到了数据，客户端会通知 primary，发送一个写请求。然后 Primary 会给每个客户端的写请求分配一个序列号。</li>
<li>Primary 把写请求转发给所有涉及到的副本，每个其他副本按照 primary 执行的序列号顺序来从 LRU 缓存中取数据然后写入。</li>
<li>其他副本写入成功后，会回复 primary。</li>
<li>Primary 收到所有回复后，会回复客户端。如果有副本写入失败，也会报告给客户端。</li>
</ol>
<p>如果一次写操作跨越了 chunk 边界，那么客户端会把这个操作分成多个写操作，然后按照上面的方式处理。因此可能导致修改区域处在一致但不确定的状态。</p>
<h3 id="3-2-数据流"><a class="header-anchor-1" href="#3-2-数据流">#</a>3.2 数据流</h3>
<p>GFS 将数据流和控制流解耦。</p>
<p>为了最大限度利用机器网络带宽，数据是在 chunkserver 中链式传递而非星型传递。</p>
<p>为了尽可能避免撞到网络瓶颈和慢链路，每台机器会优先把数据转发给最近的、没有收到过数据的机器。</p>
<p>复用 TCP 连接发送数据以减小延迟。</p>
<h3 id="3-3-原子记录追加"><a class="header-anchor-1" href="#3-3-原子记录追加">#</a>3.3 原子记录追加</h3>
<p>GFS 提供了一种原子的追加写操作，称之为 record append。客户端只需要提供数据，GFS 会找到合适的地方写入然后返回 offset，GFS 提供 at least once 的语义。</p>
<p>record append 仍然延续 GFS 的写过程，除了一点不同：</p>
<ul>
<li>客户端会把所有数据都推送到文件的最后一个 chunk。</li>
<li>Primary 会检查追加是否会导致新增 chunk，如果会，则会在当前 chunk 末尾填充空洞，其他副本同理，然后叫客户端去重试。</li>
<li>否则，Primary 会把数据写入到 chunk 的最后，然后返回 offset。</li>
</ul>
<p>如果某个副本上执行追加失败，客户端会重试这个操作。因此，GFS <strong>不保证所有副本都有相同的数据</strong>，只保证写操作 at least once。</p>
<p>实际上，有可能会出现这种情况：primary 的数据比其他副本的数据要长。（待确认）</p>
<h3 id="3-4-快照"><a class="header-anchor-1" href="#3-4-快照">#</a>3.4 快照</h3>
<p>快照操作用于给文件或者目录快速创建一个副本，同时尽可能减小对写操作的中断。</p>
<p>和 AFS 类似，GFS 使用了 CoW 的方式来实现快照。当 master 收到一个快照请求时，会先把所有涉及到的 chunk 的租期都收回。阻塞住后续的写操作，防止影响当前快照。</p>
<p>在全部租期都被收回或者过期后，master 就会把这个操作（指快照操作）先写到磁盘上的 WAL 上，然后再改内存数据结构。</p>
<p>新创建的快照文件会和原始文件指向相同的 chunk。当客户端第一次想要写入一个快照过的 chunk C 的时候，master 就会注意到 chunk C 的引用计数大于 1，此时 master 会进行 CoW：</p>
<ul>
<li>先创建一个新的 chunk handle C’；</li>
<li>要求每个持有 C 的 chunkserver 复制一份 C 作为 C’。</li>
</ul>
<p>然后再正常处理写请求。</p>
<p>这里要求 chunkserver 复制有一个好处是不需要占用网络带宽，因为复制是在 chunkserver 本地进行的。</p>
<h2 id="4-master-操作"><a class="header-anchor-1" href="#4-master-操作">#</a>4. Master 操作</h2>
<p>Master 负责管理整个系统的元数据。</p>
<h3 id="4-1-命名空间管理和锁"><a class="header-anchor-1" href="#4-1-命名空间管理和锁">#</a>4.1 命名空间管理和锁</h3>
<p>很多 master 的操作是很慢的，例如打快照会导致撤回所有租约。
GFS 通过减小锁的粒度来提高并发度。</p>
<p>GFS 没有使用每个目录一个数据结构的方式表示文件和目录，而是采用了类似多级查找表的结构。由于文件系统是层级结构，使用前缀压缩可以节约很多空间。</p>
<p>每一级目录都有一把读写锁，每次变更操作都需要获取从根目录到目标目录的所有锁。举例：</p>
<ul>
<li>创建/home/user/foo：需要 /home 和 /home/user 的读锁，/home/user/foo 的写锁；</li>
<li>快照/home/user 到/save/user：需要 /home 和 /save 的读锁，/home/user 和 /save/user 的写锁；</li>
</ul>
<p>由于文件数量可能很多，读写锁对象都是动态懒分配的，并且一旦不用就会删掉。</p>
<p>为了防止死锁，GFS 会按照目录的路径顺序，以及字典序来获取锁。</p>
<h3 id="4-2-副本放置策略"><a class="header-anchor-1" href="#4-2-副本放置策略">#</a>4.2 副本放置策略</h3>
<p>GFS 集群的网路拓扑是分层的，每个机房有多个机架，每个机架有多个机器。
GFS 会尽量把副本放在不同的机架上，以防止单个机架故障。</p>
<h3 id="4-3-创建、再备份和再平衡"><a class="header-anchor-1" href="#4-3-创建、再备份和再平衡">#</a>4.3 创建、再备份和再平衡</h3>
<h4 id="chunk-创建"><a class="header-anchor-1" href="#chunk-创建">#</a>chunk 创建</h4>
<p>当 Master 创建一个 chunk 时，需要决定这个 chunk 的副本放在哪些 chunkserver 上。主要考虑这些因素：</p>
<ol>
<li>优先放置在磁盘剩余空间较多的 chunkserver 上。</li>
<li>优先放置在近期新文件较少的 chunkserver 上。因为 Google 的 workload 大多是 <em>append-once-read-many</em> 类型。</li>
<li>分散副本，避免放在同一个机架上。</li>
</ol>
<h4 id="chunk-再备份"><a class="header-anchor-1" href="#chunk-再备份">#</a>chunk 再备份</h4>
<p>当 chunk 的副本数量低于用户设定的目标数量时，Master 就会进行<em>再备份</em>。这种情况发生的原因有：chunkserver 掉线，chunkserver 数据损坏，或者用户期望提高。再备份时也会做一些优化，例如优先备份 live file，其次是最近删除的文件。当某些失败的 chunk 影响了应用程序运行时，GFS 会提高这些文件的优先级，加快恢复的过程。</p>
<p>Master 每次会选择一个优先级最高的 chunk，然后要求 chunkservers 去复制这个 chunk。新副本的放置策略和创建 chunk 时一样。为了防止再备份操作压倒客户端的流量，Master 会限制再备份的速度。</p>
<h4 id="chunk-再平衡"><a class="header-anchor-1" href="#chunk-再平衡">#</a>chunk 再平衡</h4>
<p>Master 周期性地检查当前的副本分布，移动副本以达到更好的磁盘利用率和负载均衡。通过再平衡操作，Master 逐渐填满新的 chunkserver 而不是一口气填满。再平衡的策略也和前面类似。</p>
<h3 id="4-4-垃圾回收"><a class="header-anchor-1" href="#4-4-垃圾回收">#</a>4.4 垃圾回收</h3>
<p>文件删除之后，GFS 不会立即回收可用的物理空间。而是在文件和 chunk 级别进行懒惰回收。</p>
<h4 id="4-4-1-机制"><a class="header-anchor-1" href="#4-4-1-机制">#</a>4.4.1 机制</h4>
<p>在 GFS 上删除的文件会被重命名为一个名字包含删除时间戳的隐藏文件。这个文件在 Master 的定期扫描中会被发现，如果这个文件已经被删除超过 3 天，那么这个文件会被真正删除。在真正删除之前，这个隐藏文件都是可以被正常读的，而且可以被恢复（通过重命名为正常文件名）。当隐藏文件被真正删除，相关的内存中的元数据也会被删除。</p>
<p>在对 chunk namespace 的日常扫描中，Master 会发现一些不再被引用的 chunk，这些 chunk 会在和 chunkserver 通信对数据的时候被发现并回收。</p>
<h4 id="4-4-2-一些讨论"><a class="header-anchor-1" href="#4-4-2-一些讨论">#</a>4.4.2 一些讨论</h4>
<p>采用懒惰回收的方式有一些好处：</p>
<ol>
<li>简单，可靠：避免删除文件失败导致数据删不掉</li>
<li>均摊了删除操作的开销，不会给 Master 带来额外的压力</li>
<li>增加误删除的恢复机会</li>
</ol>
<p>相对地，也有坏处：</p>
<ul>
<li>用户想要释放磁盘空间的时候，不能立即释放</li>
<li>对于反复创建和删除临时文件的程序不友好</li>
</ul>
<p>一点小优化是，如果再删除一次已经删除的文件，就加速删除过程。</p>
<h3 id="4-5-陈旧副本检测"><a class="header-anchor-1" href="#4-5-陈旧副本检测">#</a>4.5 陈旧副本检测</h3>
<p>如果 chunkserver 挂了，然后丢失了变更，那么这个 chunk 的副本就会变成陈旧的。
Master 会维护一个每个 chunk 的版本号来区分陈旧的副本。</p>
<p>Master 每一次授权租期的时候，都会让该 chunk 的版本号加一，然后提醒所有最新的副本。Master 和副本都会将新的版本号持久化。如果某一个副本挂了，Master 下一次重启的时候就会发现这个副本的版本号比其他的小，然后会把这个副本标记为陈旧的。如果 Master 看到了一个更大的版本号，说明 Master 在授权租期的时候挂了，因此就会把大的版本号当成最新的（没看懂，存疑）。</p>
<p>Master 在垃圾回收过程中移除陈旧的副本。为了防止客户端读到陈旧的数据，在实际移除之前，Master 也会假装陈旧的副本是不存在。除此以外，Master 在回复客户端 Primary 身份、以及叫 chunkserver 复制 chunk 的时候，也会带上这个 chunk 的版本号，以便客户端和 chunkserver 去校验，确保读到的数据是最新的。</p>
<h2 id="5-容错和诊断"><a class="header-anchor-1" href="#5-容错和诊断">#</a>5. 容错和诊断</h2>
<h3 id="5-1-高可用"><a class="header-anchor-1" href="#5-1-高可用">#</a>5.1 高可用</h3>
<p>GFS 集群保持高可用的两个策略是：快速回复和复制。</p>
<h4 id="5-1-1-快速恢复"><a class="header-anchor-1" href="#5-1-1-快速恢复">#</a>5.1.1 快速恢复</h4>
<p>Master 和 chunkserver 都设计成可以快速重启的（几秒钟恢复状态）。即使重启了，对其他部分的影响也仅仅是小卡顿一下，直到网络请求超时重试。</p>
<h4 id="5-1-2-chunk-复制"><a class="header-anchor-1" href="#5-1-2-chunk-复制">#</a>5.1.2 chunk 复制</h4>
<p>每个 chunk 会被复制到多个机架的多个 chunkserver 上。用户可以为不同的目录设置不同的副本数量，以适应不同的容错需求。默认是 3 副本。</p>
<p>除了复制外，GFS 还在探索使用一些跨服务器的冗余技术，例如奇偶校验码等。</p>
<h4 id="5-1-3-master-复制"><a class="header-anchor-1" href="#5-1-3-master-复制">#</a>5.1.3 Master 复制</h4>
<p>为了可靠性，Master 状态也有副本。Master 的 Operation log 和快照都会被复制到多个机器上。一条变更只有在所有机器上都落盘成功后，才会认为是已提交。如果机器挂了，守护进程会在其他持有 logs 的机器上新建一个 Master 进程。客户端只会用 Master 的 canonical name 来连接 Master，一般是一个 DNS 名字，方便 Master 迁移。</p>
<p>Master 会有一些只读副本，对外提供读服务，用于增强系统的读性能。这些只读副本会读取备份机器上的 Operation log 并重放，因此会稍微落后于 Master。只读副本启动时也会轮询一遍所有的 chunkserver。</p>
<h3 id="5-2-数据完整性"><a class="header-anchor-1" href="#5-2-数据完整性">#</a>5.2 数据完整性</h3>
<p>每个 chunkserver 都会用校验码来校验自己保存的 chunk 数据的完整性。注意 GFS 不承诺多个副本之间的数据一致性，只保证 at least once 语义。</p>
<p>具体来说，每个 chunk 会拆分成 64KB 的块，每个块会计算一个 32 位的校验码。校验码会在内存和磁盘上都保存一份。</p>
<p>每次有客户端或者其他 chunkserver 读数据的时候，chunkserver 会读取（读取范围覆盖到的）数据块然后验证校验码。如果校验码不对，chunkserver 不会返回数据，而是会报错。请求方就会去其他副本上读取数据。当找到一个正确的数据块后，Master 就会通知这个 chunkserver 删掉这个坏的副本。</p>
<p>校验码对读性能的影响很小。而且客户端代码在读取的时候会对齐到块边界，</p>
<p>校验码计算针对追加写操作做了深度的优化。GFS 的校验码实现了增量计算，只需要计算新增的数据块的校验码。</p>
<p>对于覆盖写操作，需要先读取写入范围的起始和结束块，进行校验，然后再写入新的数据，计算新的校验码。如果不检查起始和结束块的校验码，那么可能会导致数据不一致。</p>
<p>当 chunkserver 空闲的时候，可以扫描和校验不活跃的 chunk，以检验很少读的 chunk 的完整性。如果发现坏的数据块，Master 可以通知 chunkserver 删掉这个坏的副本。</p>
<h3 id="5-3-诊断工具"><a class="header-anchor-1" href="#5-3-诊断工具">#</a>5.3 诊断工具</h3>
<p>为了方便 debug，GFS 生成诊断日志记录关键事件和所有的网络请求和响应。</p>
<!-- ## 6. 评估

### 6.1 微基准测试

测试环境：1 个 Master，2 个 Master 副本，16 个 chunkserver，和 16 个 client。
19 台机器，每台机器两颗 1.4GHz PIII CPU，2GB 内存，2 块 80GB 5,400 rpm 硬盘。
通过一台 HP 2524 交换机（100 Mbps 全双工以太网）连接在一起。

#### 6.1.1 读性能

N 个 client 并发读取 320GB 文件中的随机 4MB 范围，重复 256 次。

#### 6.1.2 写性能

#### 6.1.3 追加性能

### 6.2 真实世界集群

### 6.3 Workload 分解

## 7. 实验

## 8. 相关工作

## 9. 结论 -->
<h2 id="gfs-faq"><a class="header-anchor-1" href="#gfs-faq">#</a>GFS - FAQ</h2>
<p>翻译自 <span class="exturl" data-url="aHR0cHM6Ly9wZG9zLmNzYWlsLm1pdC5lZHUvNi44MjQvcGFwZXJzL2dmcy1mYXEudHh0">MIT 6.824<i class="fa fa-external-link-alt"></i></span>.</p>
<h3 id="q1-只有一个-master-是好的设计吗？"><a class="header-anchor-1" href="#q1-只有一个-master-是好的设计吗？">#</a>Q1. 只有一个 Master 是好的设计吗？</h3>
<p>长期来看不是。Google 发表在 ACM Queue 上的文章 <em>GFS: Evolution on Fast Forward</em> 中提到了，在长期实践中，GFS 的很多设计都是有问题的。文件的数量一直增长，把所有文件元数据都放在单点 Master 的内存中是不合理的。随着客户端的数量增长，单点 Master 的 CPU 也会逐渐变得不够用。实际上，GFS 切换 Master 需要人工干预，因此很慢。下一代 GFS，Colossus，已经用了多个 Master，而且有更加自动化的 Master HA。</p>
<h3 id="q2-gfs-的-record-append-为什么是-at-least-once-语义？"><a class="header-anchor-1" href="#q2-gfs-的-record-append-为什么是-at-least-once-语义？">#</a>Q2. GFS 的 record append 为什么是 at least once 语义？</h3>
<p>在第 3.1 节的第 7 步中提到，如果写入在任意副本上失败，客户端会重试。这会导致数据在没有失败的副本上被追加多次。另一种设计方案是对客户端请求做去重，不管发生任意故障（例如，在客户端第一次请求和重试之间，Primary 故障）你将在实验 3（指 6.824 的 Raft）中实现这样的设计，但这会显著增加复杂性和性能开销。</p>
<h3 id="q3-应用程序怎么识别-chunk-中的-padding-和-duplicate-record？"><a class="header-anchor-1" href="#q3-应用程序怎么识别-chunk-中的-padding-和-duplicate-record？">#</a>Q3. 应用程序怎么识别 chunk 中的 padding 和 duplicate record？</h3>
<p>为了检测 padding，应用程序可以在有效记录的开头放置一个可预测的 magic number，或者包含一个 checksum，该校验和仅在记录有效时才会有效。</p>
<p>应用程序可以通过在记录中包含 Unique ID 来检测重复记录。然后，如果它读取到一个与之前记录具有相同 ID 的记录，它就知道这些记录是重复的。</p>
<p>GFS 为应用程序提供了一个库来处理这些情况。GFS 设计的这一方面实际上将复杂性从 GFS 转移到了应用程序，这可能并不理想。</p>
<h3 id="q4-既然-record-append-写入的位置是不确定的，那么应用程序如何找到他们写入的数据？"><a class="header-anchor-1" href="#q4-既然-record-append-写入的位置是不确定的，那么应用程序如何找到他们写入的数据？">#</a>Q4. 既然 record append 写入的位置是不确定的，那么应用程序如何找到他们写入的数据？</h3>
<p>追加操作（以及 GFS 整体）主要面向那些需要顺序读取整个文件的应用程序。这类应用程序会扫描文件以查找有效记录（参见 Q3），因此它们不需要提前知道记录的具体位置。例如，文件可能包含一组并发网络爬虫遇到的 URL。任何特定 URL 的文件偏移量并不重要；读取者只需要能够读取整个 URL 集合即可。</p>
<h3 id="q7-基于-posix-api-开发的应用程序适配到-gfs-上需要修改吗？"><a class="header-anchor-1" href="#q7-基于-posix-api-开发的应用程序适配到-gfs-上需要修改吗？">#</a>Q7. 基于 POSIX API 开发的应用程序适配到 GFS 上需要修改吗？</h3>
<p>是的，但是 GFS 是为了新开发的程序设计的，例如 Google 的 MapReduce。</p>
<h3 id="q10-假如-s1-是某一个-chunk-的-primary，然后-master-和-s1-之间的网断了。master-会选另一个-s2-作为-primary。因为-s1-没有实际挂掉，那么系统中会有两个-primary-吗？"><a class="header-anchor-1" href="#q10-假如-s1-是某一个-chunk-的-primary，然后-master-和-s1-之间的网断了。master-会选另一个-s2-作为-primary。因为-s1-没有实际挂掉，那么系统中会有两个-primary-吗？">#</a>Q10. 假如 S1 是某一个 chunk 的 Primary，然后 Master 和 S1 之间的网断了。Master 会选另一个 S2 作为 Primary。因为 S1 没有实际挂掉，那么系统中会有两个 Primary 吗？</h3>
<p>这样会出大问题，因为会有两个 Primary 会同时进行不同的更新操作。幸运的是，GFS 的租约设计避免了这种情况。Master 给 S1 一个 60s 的租约。
S1 会在过期之后主动退位。S1 退位之前，Master 不会给其他 chunkserver 发送租约。所以 S1 停止之前，S2 不会成为 Primary。</p>
<p>（PS. 但是怎么保证 Master 和 S1 的时间同步呢？）</p>
<h3 id="q12-google-还在用-gfs-吗？"><a class="header-anchor-1" href="#q12-google-还在用-gfs-吗？">#</a>Q12. Google 还在用 GFS 吗？</h3>
<p>传言说 GFS 已经被 Colossus 取代了。它们的设计目标一直，性能和容错性都有所提高。此外，很多 Google 内部的应用程序已经迁移到了 BigTable、Spanner 之类的类数据库系统。然而，大部分 GFS 的设计都跑到了 HDFS 里面。</p>
<p>拓展阅读：<span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL2Jsb2cvcHJvZHVjdHMvc3RvcmFnZS1kYXRhLXRyYW5zZmVyL2EtcGVlay1iZWhpbmQtY29sb3NzdXMtZ29vZ2xlcy1maWxlLXN5c3RlbQ==">Colossus under the hood: a peek into Google’s scalable storage system
<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="q13-gfs-为了性能和简单性而牺牲正确性，这在多大程度上是可以接受的？"><a class="header-anchor-1" href="#q13-gfs-为了性能和简单性而牺牲正确性，这在多大程度上是可以接受的？">#</a>Q13. GFS 为了性能和简单性而牺牲正确性，这在多大程度上是可以接受的？</h3>
<p>这是分布式系统中一个反复出现的主题。强一致性通常需要复杂的协议，并且需要通信和等待回复（正如我们将在接下来的几节课中看到的那样）。通过利用特定应用程序类别可以容忍弱一致性的特点，可以设计出具有良好性能和足够一致性的系统。例如，GFS 针对 MapReduce 应用程序进行了优化，这些应用程序需要对大文件进行高性能读取，并且能够容忍文件中的空洞、记录多次出现以及不一致的读取。另一方面，GFS 并不适合用于存储银行的账户余额。</p>
<h3 id="q16-内部碎片是什么？懒惰分配有什么好处？"><a class="header-anchor-1" href="#q16-内部碎片是什么？懒惰分配有什么好处？">#</a>Q16. 内部碎片是什么？懒惰分配有什么好处？</h3>
<p>内部碎片是指当系统使用的分配单元大于请求分配所需的空间时，浪费的空间。如果 GFS 以 64MB 为单位分配磁盘空间，那么一个 1 字节的文件将浪费近 64MB 的磁盘空间。</p>
<p>GFS 通过懒惰分配磁盘空间来避免这个问题。每个数据块都是一个 Linux 文件，而 Linux 文件系统使用几十 KB 的块大小；因此，当应用程序创建一个 1 字节的 GFS 文件时，该文件的数据块仅消耗一个 Linux 磁盘块，而不是 64MB。</p>
<p>(PS. 估计就是用 fallocate，实际写入数据时才真正分配空间)</p>
<h3 id="q17-gfs-从弱一致性上获得了什么好处？"><a class="header-anchor-1" href="#q17-gfs-从弱一致性上获得了什么好处？">#</a>Q17. GFS 从弱一致性上获得了什么好处？</h3>
<p>更容易理解的角度是，假如 GFS 需要实现更强的一致性，需要补充的工作。</p>
<p>Primary 不应让 Secondaries 执行写入操作，除非所有 Secondaries 都能够完成该操作。这可能需要两轮通信：</p>
<ul>
<li>第一轮询问所有 Secondaries 是否存活并能够承诺在请求时执行写入操作，以及（如果所有 Secondaries 都回答“是”）</li>
<li>第二轮通知 Secondaries 提交写入操作。</li>
</ul>
<p>如果 Primary 挂了，某些 Secondaries 可能错过了 Primary 发送的最后几条更新消息。这将导致剩余的 Secondaries 拥有略微不同的副本。在恢复操作之前，新的 Primary 应确保所有 Secondaries 拥有完全相同的副本。</p>
<p>由于客户端在怀疑出现问题时会重新发送请求，Primary 需要过滤掉已经执行过的操作。</p>
<p>客户端缓存了数据块的位置，并且可能向持有过时副本的 chunkserver 发送读取请求。GFS 需要一种方式来确保这种读取不会成功。</p>
<h2 id="参考"><a class="header-anchor-1" href="#参考">#</a>参考</h2>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9zdGF0aWMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL21lZGlhL3Jlc2VhcmNoLmdvb2dsZS5jb20vemgtQ04vL2FyY2hpdmUvZ2ZzLXNvc3AyMDAzLnBkZg==">The Google File System<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cucXRtdW5pYW8uY29tLzIwMTkvMDUvMjYvZ2ZzLw==">GFS —— 取舍的艺术<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>distributed-system</category>
      </categories>
      <tags>
        <tag>分布式系统</tag>
        <tag>GFS</tag>
      </tags>
  </entry>
  <entry>
    <title>The Hadoop Distributed File System 论文阅读</title>
    <url>/2025/02/25/the-hadoop-distributed-file-system/</url>
    <content><![CDATA[<h2 id="0-摘要"><a class="header-anchor-1" href="#0-摘要">#</a>0. 摘要</h2>
<p>HDFS 的设计目标是可靠存储大数据集，并提供高吞吐量的数据访问。</p>
<h2 id="1-引言和相关工作"><a class="header-anchor-1" href="#1-引言和相关工作">#</a>1. 引言和相关工作</h2>
<p>Hadoop 提供了分布式的文件系统和使用 MapReduce 范式来分析和处理大数据集的框架。</p>
<p>和其他系统类似，HDFS 把元数据保存在单独的服务器上，称为 NameNode。应用数据保存在其他服务器上，称为 DataNode。</p>
<p>HDFS 的 DataNode 不使用类似 RAID 的数据保护机制。而是采用多副本的方式来保证数据的可靠性。</p>
<p>某些分布式存储系统设计了分布式的系统来管理 namespace。
Ceph 使用动态子树分区算法来管理元数据。
GFS 使用多个 Master 来管理元数据。
Lustre 2.2 使用了聚类 namespace。</p>
<h2 id="2-架构"><a class="header-anchor-1" href="#2-架构">#</a>2. 架构</h2>
<h3 id="a-namenode"><a class="header-anchor-1" href="#a-namenode">#</a>A. NameNode</h3>
<p>HDFS 的名字空间是文件和目录的树形结构。文件和目录在 NameNode 中表示成 inode，inode 包含文件的属性，例如权限、修改和访问时间、namespace 和磁盘配额。文件内容被分割成 128MB 大小的块，每个块被独立备份保存到 3 个 DataNode 上。
NameNode 维护着 namespace 树和块到 DataNode 的映射。
HDFS 客户端首先向 NameNode 请求文件的块位置，然后和最近的 DataNode 通信读取块数据。当写数据的时候，客户端首先请求 NameNode 分配三个块，然后以 pipeline 的方式将数据写入到 DataNode 上。</p>
<p>HDFS 把整个 namespace 保存在内存中。
namespace 的元数据包含 inode 数据和每个文件对应的块列表，称为 image。
image 保存在本地文件系统上，称为 checkpoint。
NameNode 还额外保存 image 的变更日志，称为 journal。</p>
<h3 id="b-datanodes"><a class="header-anchor-1" href="#b-datanodes">#</a>B. DataNodes</h3>
<p>DN 使用两个本地文件保存一个块的数据：一个文件保存块数据，另一个文件保存块的元数据，包括 checksum 和 generation stamp。</p>
<p>DN 启动的时候，会先和 NN 连接然后进行一次 handshake，NN 会验证 DN 的 namespace ID 和软件版本是否匹配，如果任意一个不匹配，DN 就会退出。</p>
<p>namespace ID 会在格式化文件系统的时候生成，永久保存在集群的所有节点上。
ID 不同的节点不能加入到这个集群中，保证了集群的一致性。新初始化的 DN 没有 namespace ID，可以加入任何集群。</p>
<p>handshake 之后，DN 会向 NN 注册自己。NN 会给 DN 分配一个 storage ID，这个 ID 是 DN 的内部 ID，保证即使 DN 的 IP 地址或者端口改变， NN 也能识别出这个 DN。</p>
<p>DN 会定期给 NN 发送 <em>block report</em> 报告自己拥有的 block 副本。
block report 中包含 block id，generation stamp 还有每个 block 的长度。第一次注册的时候，会立即发送一次，随后每小时发送一次。</p>
<p>正常操作期间，DN 给 NN 发送 heartbeat，确认自己还活着。默认每 3 秒发送一次。如果 NN 在 10 分钟内没有收到 DN 的 heartbeat，就会认为这个 DN 挂了，随后开始安排数据复制过程。</p>
<p>DN 的 heartbeat 也包含了一些统计信息，例如总的容量、剩余容量、正在传输的数据量等。用于 NN 做一些决策时参考。</p>
<p>NN 不会直接向 DN 发送命令，而是通过对 heartbeat 的响应来发送命令。命令包括：</p>
<ul>
<li>复制 block 到另一个节点；</li>
<li>删除本地的 block；</li>
<li>重新注册或者退出；</li>
<li>立即发送 block report。</li>
</ul>
<p>NN 每秒能处理数千的 heartbeat，不会影响其他的 NN 操作。</p>
<h3 id="c-hdfs-客户端"><a class="header-anchor-1" href="#c-hdfs-客户端">#</a>C. HDFS 客户端</h3>
<p>应用程序通过 HDFS 客户端库访问 HDFS。</p>
<p>HDFS 客户端支持读取、写入、删除文件，创建和删除目录。</p>
<p>读文件时，HDFS 客户端先询问 NN 获取文件的块所在的 DN 的列表。然后联系 DN 请求所需的 block。写文件时，HDFS 客户端先询问 NN 选择三个 DN 保存第一个 block，然后客户端负责组织一个 pipeline 然后开始写入。当第一个 block 写完后，客户端继续询问 NN 请求下一个 block 的 DN。</p>
<p>HDFS 提供了一个 API 暴露 block 位置给应用程序，允许 MapReduce 框架把任务调度到数据所在的节点上，减少网络传输。</p>
<p>HDFS 也允许应用程序设置文件的副本数，如果一个文件需要高频率访问，可以增加副本数。</p>
<h3 id="d-image-和-journal"><a class="header-anchor-1" href="#d-image-和-journal">#</a>D. Image 和 Journal</h3>
<p>文件系统目录结构的元数据称为 image。对 image 的每一次持久化记录是一个 checkpoint。
journal 是文件系统目录结构的 WAL。对于每一次客户端事务，NN 会先把操作写入 journal 中，flush 和 sync 之后，才会返回给客户端。
checkpoint 文件创建后不会修改，只会被新的替换。在启动的时候，NN 会读取最新的 checkpoint 和 journal，然后恢复到最新的状态。恢复后，新的 checkpoint 和空的 journal 会被创建。</p>
<p>如果 checkpoint 或者 journal 损坏，整个文件系统会被不可用，因此这两个文件可以配置为保存多个副本。推荐的配置是放置在不同的 volume 上，还有一个放在远程的 NFS 上。</p>
<p>NN 是一个多线程系统，可以同时处理多个客户端的请求。
flush 和 sync 操作就变成了一个瓶颈，因为它们是同步的。
NN 会把不同客户端发起的操作合并成一个 batch，只要有一个线程完成了 flush 和 sync，其他线程就可以继续处理下一个请求。</p>
<h3 id="e-checkpointnode"><a class="header-anchor-1" href="#e-checkpointnode">#</a>E. CheckpointNode</h3>
<p>NN 节点除了服务客户端请求外，还可以执行其他两种任务之一：CheckpointNode 和 BackupNode。执行哪一个任务在节点启动时执行。</p>
<p>CheckpointNode 通常运行在和 NN 不同的节点上，因为它和 NN 一样需要大量的内存。它会从 NN 下载当前的 checkpoint 和 journal，然后进行 compaction，将合并后的 checkpoint 返回给 NN。</p>
<p>创建新的 checkpoint 会导致 NN 截断 journal。</p>
<h3 id="f-backupnode"><a class="header-anchor-1" href="#f-backupnode">#</a>F. BackupNode</h3>
<p>BackupNode 会和 NN 保持同步。</p>
]]></content>
      <categories>
        <category>distributed-system</category>
      </categories>
      <tags>
        <tag>分布式系统</tag>
        <tag>大数据</tag>
        <tag>HDFS</tag>
      </tags>
  </entry>
  <entry>
    <title>电子电路基础</title>
    <url>/2024/09/12/basic/</url>
    <content><![CDATA[<h2 id="基本概念"><a class="header-anchor-1" href="#基本概念">#</a>基本概念</h2>
<ul>
<li>电荷 Q 单位库伦 C</li>
<li>电场</li>
<li>电流
<ul>
<li>1A = 1C/s</li>
<li>电流方向
<ul>
<li>直流电流 DC</li>
<li>交流电流 AC</li>
<li>混合电流: 直流分量=平均值, 交流分量=偏离值</li>
</ul>
</li>
</ul>
</li>
<li>基尔霍夫电流定律 KCL</li>
<li>电压定律</li>
<li>电动势 单位伏特 V
<ul>
<li>描述其他能量形式转化为电能的能力</li>
</ul>
</li>
<li>电源 提供电动势
<ul>
<li>恒压源</li>
<li>恒流源</li>
<li>信号源</li>
</ul>
</li>
<li>电压 单位伏特 V
<ul>
<li>描述两点之间的电位差</li>
<li>描述电能转化为其他能量形式的能力</li>
<li>1V = 1J/C</li>
<li>电位=对地电压
<ul>
<li>参考地 G 电位为 0</li>
</ul>
</li>
</ul>
</li>
<li>功率 P
<ul>
<li>电路释放能量的速率</li>
<li>1W = 1J/s = 1V*A</li>
<li>P&lt;0 表示电路从外界吸收能量 释放电压和电流
<ul>
<li>例如 电容 电感</li>
</ul>
</li>
</ul>
</li>
<li>信号
<ul>
<li>带有信号的随时间空间变化的电压或电流</li>
<li>确定性信号</li>
<li>随机信号</li>
<li>伪随机信号</li>
</ul>
</li>
</ul>
<h2 id="电容"><a class="header-anchor-1" href="#电容">#</a>电容</h2>
<ul>
<li>单位
<ul>
<li>法拉 F</li>
<li>1F = 1C/V</li>
<li>物理意义: 电容器两极板上的电荷量与电压之比</li>
</ul>
</li>
<li>时间常数
<ul>
<li>电容器充放电时间常数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>τ</mi><mo>=</mo><mi>R</mi><mo>∗</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">\tau = R*C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span></li>
<li>物理意义: 电容器充电到额定电压的 63.2% 所需时间</li>
<li>一般取 5<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>τ</mi></mrow><annotation encoding="application/x-tex">\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span></span></span></span> 为充放电时间</li>
</ul>
</li>
<li>注意事项
<ul>
<li>高耐压电容充满电后 不能上手触摸 有触电危险</li>
<li>泄放电阻(bleeder resistor): 并联在电容器上的大电阻 用于释放电容器上的电荷</li>
<li>使用前应先放电</li>
</ul>
</li>
</ul>
<h2 id="半导体"><a class="header-anchor-1" href="#半导体">#</a>半导体</h2>
<ul>
<li>本征半导体</li>
<li>掺杂半导体
<ul>
<li>N 型半导体</li>
<li>P 型半导体</li>
</ul>
</li>
</ul>
<h2 id="二极管"><a class="header-anchor-1" href="#二极管">#</a>二极管</h2>
<ul>
<li>特性
<ul>
<li>正向低电压：不导通，死区</li>
<li>正向高电压：导通</li>
<li>反向低电压：不导通</li>
<li>反向高电压：击穿</li>
</ul>
</li>
<li>主要参数
<ul>
<li>阈值电压: 硅 0.5V 锗 0.1V</li>
<li>正向电压降 Vf: 硅 0.7V 锗 0.2V</li>
<li>最大整流电流 Ir: 可稳定工作的最大正向电流</li>
<li>反向击穿电压 Vr</li>
<li>反向峰值电压 VRM: 可稳定工作的最大反向电压，一般为 Vr 的 1/2</li>
<li>反向峰值电流 IR: 反向峰值电压时的电流</li>
</ul>
</li>
<li>理想二极管模型
<ul>
<li>正向导通 电压降为 0</li>
<li>反向不导通 电流为 0</li>
</ul>
</li>
<li>温度特性</li>
<li>应用
<ul>
<li>限幅</li>
<li>钳位电路: 结合电容</li>
</ul>
</li>
<li>稳压二极管
<ul>
<li>特点: 反向击穿后, 不管反向电流怎么增加, 电压基本不变</li>
<li>用法: 反向并联在负载上</li>
<li>作用: 保护电路不受过高电压的影响</li>
<li>主要参数
<ul>
<li>稳定电压 Vz</li>
<li>稳定电流 Iz</li>
<li>动态电阻 rz</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="三极管-bjt"><a class="header-anchor-1" href="#三极管-bjt">#</a>三极管 BJT</h2>
<ul>
<li>结构
<ul>
<li>集电极 Collector</li>
<li>发射极 Emitter</li>
<li>基极 Base</li>
</ul>
</li>
<li>类型
<ul>
<li>NPN</li>
<li>PNP</li>
</ul>
</li>
<li>特性
<ul>
<li>输入特性
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>i</mi><mi>B</mi></msub><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mrow><mi>B</mi><mi>E</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i_B = f(v_{BE})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">BE</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
</ul>
</li>
<li>输出特性</li>
</ul>
</li>
<li>应用
<ul>
<li>作为开关</li>
<li>作为放大器</li>
</ul>
</li>
</ul>
<h2 id="电路系统"><a class="header-anchor-1" href="#电路系统">#</a>电路系统</h2>
<ul>
<li>系统属性
<ul>
<li>线性/非线性: 线性系统满足叠加性和均匀性
<ul>
<li>叠加性 f(x1+x2) = f(x1) + f(x2)</li>
<li>均匀性 f(ax) = af(x)</li>
</ul>
</li>
<li>时变/时不变: 时变系统的输出取决于输入信号的时间
<ul>
<li>f(x(t)) = y(t) != f(x(t-t0)) = y(t-t0)</li>
</ul>
</li>
<li>记忆/无记忆: 记忆系统的输出取决于输入信号的历史
<ul>
<li>记忆: 电容</li>
<li>无记忆: 电阻</li>
</ul>
</li>
<li>线性时不变(Linear Time-Invariant, LTI)系统</li>
</ul>
</li>
<li>黑箱、端口与网络
<ul>
<li>端点: 从电路网络中引出的一个点 用于测量或者构建更大的网络</li>
<li>端口: 电流始终相反的一对端点 (其中的部分当成一个黑箱)</li>
<li>端口条件: 一个电路系统只有能够定义出端口，才能够套用电路模型分析; 否则只能用电磁场方程求解</li>
<li>多端口网络: 一个网络中有多个端口
<ul>
<li>一般有一个接地端点</li>
</ul>
</li>
<li>电路功能一般是通过端口电量关系方程描述的
<ul>
<li>流控网络: 电压随电流按固定规律变化 因此通过改变电流控制电路</li>
<li>压控网络: 电流随电压按固定规律变化 因此通过改变电压控制电路</li>
</ul>
</li>
</ul>
</li>
<li>端口连接
<ul>
<li>串联: 电流相同 电压相加</li>
<li>并联: 电压相同 电流相加</li>
<li>对接: 电压电流都相同</li>
</ul>
</li>
<li>有源(active)网络: 能够自端口向外提供电能量
<ul>
<li>太阳能二极管</li>
<li>初始 v&gt;0 的电容</li>
<li>初始 i&gt;0 的电感</li>
<li>否则是 无源(passive)网络</li>
</ul>
</li>
<li>理想电源
<ul>
<li>理想电压源: 电压不随电流变化 v(t) = V</li>
<li>理想电流源: 电流不随电压变化 i(t) = I</li>
<li>理想电阻 i(t) = v(t)/R</li>
<li>电导 G = 1/R</li>
</ul>
</li>
<li>线性内阻电源 真实电源的简化模型
<ul>
<li>元件约束条件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi>i</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><msub><mi>I</mi><mrow><mi>S</mi><mn>0</mn></mrow></msub></mfrac><mo>+</mo><mfrac><mrow><mi>v</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><msub><mi>V</mi><mrow><mi>S</mi><mn>0</mn></mrow></msub></mfrac><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\frac{i(t)}{I_{S0}} + \frac{v(t)}{V_{S0}} = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4553em;vertical-align:-0.4453em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0785em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4453em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.4553em;vertical-align:-0.4453em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.2222em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4453em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></li>
<li>正弦波电源 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi>i</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><msub><mi>I</mi><mrow><mi>S</mi><mi>p</mi></mrow></msub></mfrac><mo>+</mo><mfrac><mrow><mi>v</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><msub><mi>V</mi><mrow><mi>S</mi><mi>p</mi></mrow></msub></mfrac><mo>=</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mi>ω</mi><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{i(t)}{I_{Sp}} + \frac{v(t)}{V_{Sp}} = cos(\omega t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5525em;vertical-align:-0.5425em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0785em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">Sp</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2822em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5425em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.5525em;vertical-align:-0.5425em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.2222em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">Sp</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2822em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5425em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">cos</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span></li>
<li>电压源(戴维南形式) <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>V</mi><mrow><mi>S</mi><mn>0</mn></mrow></msub><mo>+</mo><mi>R</mi><mo>∗</mo><mi>i</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">v(t) = V_{S0} + R*i(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span></li>
<li>电流源(诺顿形式) <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>I</mi><mrow><mi>S</mi><mn>0</mn></mrow></msub><mo>−</mo><mfrac><mrow><mi>v</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><mi>R</mi></mfrac></mrow><annotation encoding="application/x-tex">i(t) = I_{S0} - \frac{v(t)}{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
<li>等效电路</li>
</ul>
</li>
<li>等效电阻
<ul>
<li>短路 v(t)=0</li>
<li>开路 i(t)=0</li>
<li>开关 关闭时相当于短路，开启时相当于开路</li>
<li>受控开关 有两个端口 端口 1 控制端口 2 的导通
<ul>
<li>逆变器 直流电源转交流电源</li>
<li>整流器 交流电源转直流电源</li>
</ul>
</li>
<li>二极管
<ul>
<li>正向 i 随 v 接近指数增长</li>
<li>简化模型相当于受控开关 或者两段折线</li>
<li>分析方法 图解法</li>
</ul>
</li>
<li>负阻二极管
<ul>
<li>隧道二极管</li>
<li>肖克利二极管</li>
</ul>
</li>
<li>晶体管
<ul>
<li>非线性三端元件: 栅极 Gate 漏级 Drain 源级 Source</li>
<li>压控电阻特性 G 段电压控制 D-S 电阻</li>
<li>反相电路</li>
</ul>
</li>
</ul>
</li>
<li>电源
<ul>
<li>发电机 恒压源</li>
<li>直流电池 近似恒压源</li>
<li>太阳能电池 恒流源</li>
<li>光电二极管 信号源</li>
<li>接收天线 信号源</li>
<li>信号发生器</li>
<li>噪声源
<ul>
<li>电阻热噪声</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="电路基本定律和定理"><a class="header-anchor-1" href="#电路基本定律和定理">#</a>电路基本定律和定理</h2>
<ul>
<li>基尔霍夫定律
<ul>
<li>电流 节点流入=流出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>i</mi><mi>k</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\sum_{k=1}^{n}i_k = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></li>
<li>电压 环路电压总和=0 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>v</mi><mi>k</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\sum_{k=1}^{n}v_k = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></li>
</ul>
</li>
<li>戴维南定理 包含独立电源的单端口线性电路 等效于 一个恒压源串联一个电阻</li>
<li>诺顿定理 包含独立电源的单端口线性电路 等效于 一个恒流源并联一个电阻</li>
</ul>
<h2 id="电路元件"><a class="header-anchor-1" href="#电路元件">#</a>电路元件</h2>
<ul>
<li>电阻
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>R</mi><mo>∗</mo><mi>i</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">u(t) = R*i(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span></li>
</ul>
</li>
<li>二极管
<ul>
<li>PN 结 阳极 阴极</li>
<li>正向 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>I</mi><mi>s</mi></msub><mo stretchy="false">(</mo><msup><mi>e</mi><mrow><mi>v</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msub><mi>V</mi><mi>T</mi></msub></mrow></msup><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i(t) = I_s(e^{v(t)/V_T}-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.2222em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>
<ul>
<li>电压超过门槛值时导通 导通后电流随电压指数增长</li>
</ul>
</li>
<li>反向几乎不导通 超出反向击穿电压后导通
<ul>
<li>作为稳压二极管</li>
</ul>
</li>
</ul>
</li>
<li>电容
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>C</mi><mo>∗</mo><mi>v</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">q(t) = C*v(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span></li>
</ul>
</li>
</ul>
<h2 id="模拟电路"><a class="header-anchor-1" href="#模拟电路">#</a>模拟电路</h2>
<ul>
<li>按照关系
<ul>
<li>线性电路</li>
<li>非线性电路</li>
</ul>
</li>
<li>按照功能
<ul>
<li>放大</li>
<li>滤波</li>
<li>比较</li>
<li>混频</li>
<li>电源管理</li>
<li>信号处理</li>
</ul>
</li>
</ul>
<h2 id="放大电路"><a class="header-anchor-1" href="#放大电路">#</a>放大电路</h2>
<ul>
<li>功能: 放大输入信号的幅度以便后续处理</li>
<li>应用: 构成滤波、振荡、稳压等功能电路的基本单元电路</li>
<li>分类
<ul>
<li>线性/非线性放大电路</li>
<li>电压/电流/…放大电路</li>
</ul>
</li>
<li>电路图标识: 三角符号
<ul>
<li>信号输入</li>
<li>信号输出</li>
<li>工作电源</li>
</ul>
</li>
<li>基本模型
<ul>
<li>电压放大</li>
<li>电流放大</li>
<li>互阻放大</li>
<li>互导放大</li>
</ul>
</li>
<li>分析方法
<ul>
<li>戴维南模型</li>
<li>诺顿模型</li>
</ul>
</li>
<li>性能指标
<ul>
<li>输入电阻</li>
<li>输出电阻</li>
<li>增益 电压增益 电流增益 单位分贝</li>
<li>频率响应
<ul>
<li>幅频响应 相频响应</li>
<li>通频带</li>
<li>线性失真: 幅度失真 相位失真</li>
</ul>
</li>
</ul>
</li>
<li>多级放大电路
<ul>
<li>电路分析</li>
</ul>
</li>
<li>集成运放: 高增益 低输入输出阻抗
<ul>
<li>电压传输特性</li>
<li>负反馈电路: 降低增益 提高稳定性
<ul>
<li>输出处理后反馈到输入端</li>
<li>负反馈: 实现振荡器</li>
</ul>
</li>
<li>内部结构
<ul>
<li>差分放大电路</li>
<li>共模抑制: 抑制共模信号(一般是噪声或者零点漂移)</li>
<li>功率放大电路</li>
<li>静态分析</li>
</ul>
</li>
</ul>
</li>
<li>理想运放</li>
<li>应用
<ul>
<li>比例放大</li>
<li>加减运算</li>
<li>积分微分</li>
<li>电压比较器</li>
<li>波形发生器</li>
</ul>
</li>
</ul>
<h2 id="振荡电路"><a class="header-anchor-1" href="#振荡电路">#</a>振荡电路</h2>
<ul>
<li>多谐振荡器: 用来产生在两种状态间变化的系统</li>
</ul>
]]></content>
      <categories>
        <category>electronic</category>
      </categories>
      <tags>
        <tag>电子电路</tag>
      </tags>
  </entry>
  <entry>
    <title>插头插座相关中国国家标准整理</title>
    <url>/2024/12/09/socket/</url>
    <content><![CDATA[<p>现行插座国家标准一共 9 本，分别为：</p>
<ul>
<li>GB2099.1 家用和类似用途插头插座第 1 部分：通用要求、</li>
<li>GB2099.2 家用和类似用途插头插座第 2 部分：器具插座的特殊要求、</li>
<li>GB2099.3 家用和类似用途插头插座第 2-5 部分：<strong>转换器</strong>的特殊要求、</li>
<li>GB2099.4 家用和类似用途插头插座第 2 部分：固定式无联锁带开关插座的特殊要求、</li>
<li>GB2099.5 家用和类似用途插头插座第 2 部分：固定式有联锁带开关插座的特殊要求、</li>
<li>GB2099.6 家用和类似用途插头插座第 2 部分：带熔断器插头的特殊要求、</li>
<li>GB2099.7 家用和类似用途插头插座第 2-7 部分：<strong>延长线插座</strong>的特殊要求、</li>
<li>GB2099.8 家用和类似用途插头插座第 2-4 部分：安全特低电压(SELV)插头插座的特殊要求、</li>
<li>GB2099.9 家用和类似用途插头插座第 2-9 部分：<strong>信息插座</strong>（即光纤、电话线、宽带线等）的特殊要求</li>
</ul>
<h2 id="1997-年"><a class="header-anchor-1" href="#1997-年">#</a>1997 年</h2>
<ul>
<li>颁布 GB2099.1 ~ GB2099.6 六项新国标，分别规定了插头插座的通用要求和特殊要求。</li>
</ul>
<h2 id="2008-年"><a class="header-anchor-1" href="#2008-年">#</a>2008 年</h2>
<ul>
<li>修订 GB2099.3</li>
</ul>
<h2 id="2015-2017-年"><a class="header-anchor-1" href="#2015-2017-年">#</a>2015 - 2017 年</h2>
<ul>
<li>颁布 <strong>GB2099.7</strong> 标准，规定了延长线插座（俗称插排、插线板）的特殊要求</li>
<li>颁布 <strong>GB/T 2099.7</strong> 推荐标准，规定了延长线插座（俗称插排、插线板）的推荐标准（俗称<strong>排插新国标</strong>）</li>
<li>颁布 GB2099.8 标准，规定了安全特低电压（SELV）插头插座的特殊要求</li>
<li>颁布 GB2099.9 标准，规定了信息插座（即光纤、电话线、宽带线等）的特殊要求</li>
<li>修订 GB2099.3</li>
<li>颁布 GB/T 2099.3；</li>
</ul>
<ol>
<li>
<p>提高电源线导线线径。新国标要求，额定电流 10A 的延长线插排，导线的最小横截面积由原来的 0.75mm^2 提高到 1mm^2;额定 16A 的则从 1mm^2 提高到 1.5mm^2。</p>
</li>
<li>
<p>淘汰万能插排。新国标要求插排允许将符合国标 GB 1002 要求的二孔插孔与三孔插孔排列组合，但不能相互重合或共用。这意味着万能插排正式退市禁用。</p>
</li>
<li>
<p>插线板必须设置保护安全门，避免儿童因为手指或金属物体插入导致触电。</p>
</li>
<li>
<p>增加插排材料的阻燃等级。新国标插排新增了明火针焰测试，要求针焰明火与插排接触 30 秒钟后不起燃，或者起燃后 30 秒后自动熄灭。</p>
</li>
<li>
<p>必须获得 CCC 认证。新国标要求排插必须要通过国家强制性产品认证，即“CCC&quot;认证，消费者可以在排插的本体上观察是否有这个标志。</p>
</li>
<li>
<p>新增了针焰测试项目，要求针焰明火与插座接触 30 秒钟后不起燃，或者起燃后 30 秒后自动熄灭</p>
</li>
</ol>
<p><img src="./socket/63fe470bab15e5297.png_e1080.jpg" alt="alt text" /></p>
<h2 id="2021"><a class="header-anchor-1" href="#2021">#</a>2021</h2>
<ul>
<li>修订 GB2099.1</li>
</ul>
<h2 id="2022"><a class="header-anchor-1" href="#2022">#</a>2022</h2>
<ul>
<li>修订 GB2099.3</li>
</ul>
<h2 id="2024"><a class="header-anchor-1" href="#2024">#</a>2024</h2>
<ul>
<li>修订 GB 2099.7 标准</li>
</ul>
]]></content>
      <categories>
        <category>electronic</category>
      </categories>
      <tags>
        <tag>电子电路</tag>
      </tags>
  </entry>
  <entry>
    <title>Verilog</title>
    <url>/2024/09/21/verilog/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>electronic</category>
      </categories>
      <tags>
        <tag>电子电路</tag>
      </tags>
  </entry>
  <entry>
    <title>EROFS 镜像布局分析</title>
    <url>/2024/05/15/erofs-image-layout/</url>
    <content><![CDATA[<p>以下参考 <span class="exturl" data-url="aHR0cHM6Ly9lcm9mcy5kb2NzLmtlcm5lbC5vcmcvZW4vbGF0ZXN0L2NvcmVfb25kaXNrLmh0bWw=">Core on-disk format<i class="fa fa-external-link-alt"></i></span></p>
<p>EROFS 硬盘布局由<code>Super block</code> + <code>inode</code>区 + <code>data</code>区三部分组成。</p>
<p>由于是只读文件系统，所有存储的文件大小都是已知的，因此相对于其他文件系统省去了<code>inode bitmap</code>和<code>data bitmap</code>的开销，节约空间。</p>
<h2 id="super-block"><a class="header-anchor-1" href="#super-block">#</a>Super Block</h2>
<p>Superblock 大小为 128 字节，位于分区开始的第 1024 字节处，兼容以前的 boot sector。Superblock 里面保存根目录的<code>inode_number</code>。</p>
<h2 id="inode"><a class="header-anchor-1" href="#inode">#</a>Inode</h2>
<p>Inode 按照固定位置紧密存放，一个<code>inode</code>的物理地址计算为 <code>inode_start + inode_number * 32</code>；</p>
<p>Inode 有两种大小：</p>
<ul>
<li>Compact 版本 32 字节；</li>
<li>Extended 版本 64 字节；</li>
</ul>
<p>Inode 有三种数据布局：</p>
<ul>
<li><code>FLAT_PLAIN</code>：内容全部保存在<code>i_u</code>所指向的 block 中；</li>
<li><code>FLAT_INLINE</code>：整块的内容全部保存在<code>i_u</code>所指向的 block 中，剩余的部分保存在 inode metadata 后面；</li>
<li><code>CHUNK_BASED</code>：数据被分成多个<code>chunks</code>，每个<code>chunk</code>按照<code>PLAIN</code>方式布局数据；</li>
</ul>
]]></content>
      <categories>
        <category>erofs</category>
      </categories>
      <tags>
        <tag>文件系统</tag>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>EROFS: A Compression-friendly ReadonlyFile System for Resource-scarce Devices</title>
    <url>/2024/05/09/erofs-paper-reading/</url>
    <content><![CDATA[<h2 id="作者"><a class="header-anchor-1" href="#作者">#</a>作者</h2>
<p>Gao Xiang @ 华为，MIngkai Dong @ IPADS @ SJTU</p>
<p>USENIX ATC 2019</p>
<h2 id="背景"><a class="header-anchor-1" href="#背景">#</a>背景</h2>
<p>安卓系统本身对设备存储的占用越来越大。</p>
<p><img src="android-system-size.png" alt="" /></p>
<p>这些系统数据大部分都是 Read-only 的。Read-only 为压缩存储提供了巨大的优化空间。</p>
<h3 id="ext4"><a class="header-anchor-1" href="#ext4">#</a>Ext4</h3>
<p>Ext4 允许只读挂载文件系统，但是可以通过重新挂载绕过这种限制，不够安全。</p>
<h3 id="btrfs"><a class="header-anchor-1" href="#btrfs">#</a>Btrfs</h3>
<p>支持压缩，文件会分成 128KB 的块</p>
<p>是 general-purposed 的文件系统，不能只为了压缩只读做很多优化</p>
<h3 id="squashfs"><a class="header-anchor-1" href="#squashfs">#</a>SquashFs</h3>
<p>Squashfs 广泛使用，支持多种压缩算法，可选的块大小 4KB~1MB。</p>
<p>元数据可以被压缩，inode 和目录紧密存储，文件内容逐个块压缩，在 inode 中用一个 list 保存每个块压缩后的大小。</p>
<h3 id="squashfs-的问题"><a class="header-anchor-1" href="#squashfs-的问题">#</a>SquashFs 的问题</h3>
<p>在低端设备上使用 SquashFs 会导致数秒的巨大延迟（使用 FIO 测试，文件 enwik9）。</p>
<h4 id="io-放大和计算浪费："><a class="header-anchor-1" href="#io-放大和计算浪费：">#</a>IO 放大和计算浪费：</h4>
<p>SquashFs 按输入固定大小分块压缩，压缩后的数据是变长的。然后变长的数据被 compact 存储。</p>
<p>Squashfs 固定要对原始数据先按 fixed-size 分块，分别压缩，再拼接到一起，即使只改了一个字节也要重复整个过程；</p>
<p>读数据需要先把整个 block 读进来，整个解压缩后才能定位到需要读的数据；</p>
<p>工程实现问题：压缩过的块和磁盘不强制对齐，最坏情况需要多读和解压两个块；</p>
<p>可以把块大小减小到 4KB，然而会降低压缩率</p>
<p><img src="squashfs-1.png" alt="" /></p>
<h4 id="内存放大和数据拷贝"><a class="header-anchor-1" href="#内存放大和数据拷贝">#</a>内存放大和数据拷贝</h4>
<p>SquashFs 在解压数据的时候需要大量的临时内存。</p>
<p>读写数据的时候需要多次分配内存用于 page cache/保存解压缩后的数据等；</p>
<p>在小内存机器上会额外加剧 swapping 开销；</p>
<p>额外参考：<span class="exturl" data-url="aHR0cHM6Ly9zb3VyY2UuYW5kcm9pZC5nb29nbGUuY24vZG9jcy9jb3JlL290YS9hYi9hYl9mYXFzP2hsPXpoLWNuI3doeS1kaWRudC15b3UtdXNlLXNxdWFzaGZz">Android 为何不使用 SquashFS<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="erofs：增强的压缩文件系统"><a class="header-anchor-1" href="#erofs：增强的压缩文件系统">#</a>EROFS：增强的压缩文件系统</h2>
<h3 id="fixed-sized-output-compression"><a class="header-anchor-1" href="#fixed-sized-output-compression">#</a>Fixed-sized output compression</h3>
<p>为了缓解读放大的问题，EROFS 对压缩后的数据（而非压缩前）分块，这样的好处有：</p>
<ol>
<li>压缩比更大，因为一次压缩输入的数据可能更多；</li>
<li>解压的时候只需要取包含了需要数据的块，没有额外的块读取和解压开销；</li>
<li>允许进行就地解压，内存开销能够稍微小一些；</li>
</ol>
<p>EROFS 采用了滑动窗口来压缩数据，在 <code>输入大小到达 1MB</code> 或者 <code>输出大小到达 4k</code> 时输出一个新的 block。</p>
<h3 id="缓存层优化"><a class="header-anchor-1" href="#缓存层优化">#</a>缓存层优化</h3>
<p>对于压缩型文件系统，为了保存解压后的数据，需要额外分配内存，这部分对内存的需求很大。</p>
<p>EROFS 对于是否要读完整的块，采用了两种不同策略，以优化读性能：</p>
<ul>
<li>Cached I/O：正常使用内核的 Page Cache；</li>
<li>In-place I/O：绕过 Page Cache 机制；</li>
</ul>
<p>对于只需要读一部分数据（部分解压）的块，使用 Cached I/O。EROFS 使用了一个特别的<code>inode</code>的 page cache 保存 <code>物理块号-&gt;压缩块</code> 之间的映射关系，在读取时可以直接定位到需要的块。</p>
<p>对于需要读全部数据（完全解压）的块，使用 In-place I/O。每次读文件会主动从 Page Cache 层分配页去保存文件数据，然后就地解压数据；空闲下来的页会被复用，以减小频繁内存分配。</p>
<p>这里的想法是一个已经解压过的块不太可能被再次使用（因为已经有了解压后的原始数据），占用的 page cache 就可以回收利用；如果仍然 cache 的话就没有必要，而且会增加内存抖动。</p>
<h3 id="解压缩优化"><a class="header-anchor-1" href="#解压缩优化">#</a>解压缩优化</h3>
<p>EROFS 对解压做了很多细致的优化。</p>
<h4 id="vmap-解压"><a class="header-anchor-1" href="#vmap-解压">#</a>vmap 解压</h4>
<p><img src="erofs-decompression-1.png" alt="" /></p>
<p>在 EROFS 中，每次解压一个块可能会得到多块数据，如果只需要读其中一部分，那么解压出来的其他数据块就没必要保存。为此，EROFS 利用了虚拟内存映射机制，将不需要的块映射到临时页。</p>
<p>实现上，每个压缩的硬盘块中会保存原始数据的元数据（如长度），在解压时会先准备好足够的 Buffer，然后使用 <code>vmap</code> 手动映射成连续的虚拟地址空间， 以调用解压缩算法。</p>
<p>在解压时，对于需要的部分，会<code>vmap</code>映射一段 page cache 空间，对于不需要的部分，只会映射到临时页。</p>
<h4 id="per-cpu-解压"><a class="header-anchor-1" href="#per-cpu-解压">#</a>Per-CPU 解压</h4>
<p>上述的方式还有两个问题：</p>
<ol>
<li>还是需要动态分配内存页，不好；</li>
<li>每次解压都要调用<code>vmap</code>和<code>vunmap</code>，不好；</li>
</ol>
<p>为此，EROFS 静态分配了若干个页专门用于解压，具体来说，每个 CPU 会持有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>个页。当解压出来的数据不超过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>页的时候，就用这些页装解压后的数据，然后再 memcpy 到目标 page cache 位置。</p>
<p>论文中采用的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>为 4。</p>
<p><img src="erofs-buffer-decompression.png" alt="" /></p>
<h4 id="滚动解压"><a class="header-anchor-1" href="#滚动解压">#</a>滚动解压</h4>
<p>由于 LZ4 算法需要当前位置之前最多 64KB 的数据才能解压。EROFS 会给每个 CPU 预先分配若干个物理页，作为 vmap 解压时存储数据的基本 buffer。这些物理页会循环使用。</p>
<h2 id="实现"><a class="header-anchor-1" href="#实现">#</a>实现</h2>
<p>EROFS 已经合并进内核。使用内核的 4KB 块大小，LZ4 (v1.8.3) 压缩算法，文件元数据没有被压缩。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Vyb2ZzL2F0YzE5LWVyb2Zz">atc19-erofs<i class="fa fa-external-link-alt"></i></span> 是合并进 5.3-rc1 的分支。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Vyb2ZzL2F0YzE5LW1rZnM=">atc19-mkfs<i class="fa fa-external-link-alt"></i></span>是论文版本的 utils，最新版本在<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Vyb2ZzL2Vyb2ZzLXV0aWxz">erofs-utils<i class="fa fa-external-link-alt"></i></span>。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Vyb2ZzL2ttb2QtZXJvZnM=">kmod-erofs (WIP)<i class="fa fa-external-link-alt"></i></span>是 out-of-tree 版本的 erofs 模块，还没完成。</p>
<h4 id="erofs-镜像布局"><a class="header-anchor-1" href="#erofs-镜像布局">#</a>EROFS 镜像布局</h4>
<p><img src="erofs-layout.png" alt="" /></p>
<p>和其他文件系统一样，EROFS 镜像的开头也是<code>Super block</code>；然后是混合存储的元数据和数据区。</p>
<p>EROFS 允许元数据（inode，目录）和数据混合存储，即 inline data，目的是提高局部性，减少 I/O 操作。</p>
<p>TODO</p>
<h4 id="解压策略"><a class="header-anchor-1" href="#解压策略">#</a>解压策略</h4>
<p>商业版：少于 4 页时采用 per-CPU 解压，否则采用 vmap 解压；</p>
<p>最新版：增加了 in-place 解压的优化。</p>
<h4 id="优化"><a class="header-anchor-1" href="#优化">#</a>优化</h4>
<h5 id="索引内存优化"><a class="header-anchor-1" href="#索引内存优化">#</a>索引内存优化</h5>
<p>TODO</p>
<h5 id="调度优化"><a class="header-anchor-1" href="#调度优化">#</a>调度优化</h5>
<p>EROFS 没有单独的解压线程，而是由读数据的线程解压数据。</p>
<p>一旦硬盘块（硬件）准备好就会立即开始解压。</p>
<h5 id="协同解压"><a class="header-anchor-1" href="#协同解压">#</a>协同解压</h5>
<p>对同一个数据的多个请求会去重，避免重复解压相同的数据。</p>
<h5 id="镜像补丁"><a class="header-anchor-1" href="#镜像补丁">#</a>镜像补丁</h5>
<p>在镜像末尾放置更新数据，解压之后用新数据覆盖。</p>
<h2 id="评估"><a class="header-anchor-1" href="#评估">#</a>评估</h2>
<h2 id="相关工作"><a class="header-anchor-1" href="#相关工作">#</a>相关工作</h2>
]]></content>
      <categories>
        <category>erofs</category>
      </categories>
      <tags>
        <tag>文件系统</tag>
        <tag>操作系统</tag>
        <tag>论文阅读</tag>
        <tag>EROFS</tag>
      </tags>
  </entry>
  <entry>
    <title>EROFS 相关资料整理</title>
    <url>/2024/05/14/erofs-resource/</url>
    <content><![CDATA[<h2 id="代码仓库"><a class="header-anchor-1" href="#代码仓库">#</a>代码仓库</h2>
<ul>
<li>EROFS 内核驱动仓库: <span class="exturl" data-url="aHR0cHM6Ly9naXQua2VybmVsLm9yZy9wdWIvc2NtL2xpbnV4L2tlcm5lbC9naXQveGlhbmcvZXJvZnMuZ2l0">https://git.kernel.org/pub/scm/linux/kernel/git/xiang/erofs.git<i class="fa fa-external-link-alt"></i></span></li>
<li>erofs-utils 仓库: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Vyb2ZzL2Vyb2ZzLXV0aWxz">https://github.com/erofs/erofs-utils<i class="fa fa-external-link-alt"></i></span></li>
<li>其他相关项目: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Vyb2Zz">https://github.com/erofs<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="文档"><a class="header-anchor-1" href="#文档">#</a>文档</h2>
<ul>
<li>ATC '19 论文主页: <span class="exturl" data-url="aHR0cHM6Ly93d3cudXNlbml4Lm9yZy9jb25mZXJlbmNlL2F0YzE5L3ByZXNlbnRhdGlvbi9nYW8=">https://www.usenix.org/conference/atc19/presentation/gao<i class="fa fa-external-link-alt"></i></span></li>
<li>内核 EROFS 文档: <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmtlcm5lbC5vcmcvZmlsZXN5c3RlbXMvZXJvZnMuaHRtbA==">https://docs.kernel.org/filesystems/erofs.html<i class="fa fa-external-link-alt"></i></span></li>
<li>EROFS 项目主页: <span class="exturl" data-url="aHR0cHM6Ly9lcm9mcy5kb2NzLmtlcm5lbC5vcmcvZW4vbGF0ZXN0LyM=">https://erofs.docs.kernel.org/en/latest/#<i class="fa fa-external-link-alt"></i></span></li>
<li>An introduction to EROFS (from LWN): <span class="exturl" data-url="aHR0cHM6Ly9sd24ubmV0L0FydGljbGVzLzkzNDA0Ny8=">https://lwn.net/Articles/934047/<i class="fa fa-external-link-alt"></i></span></li>
<li>EROFS 项目 mannual: <span class="exturl" data-url="aHR0cHM6Ly9naXQua2VybmVsLm9yZy9wdWIvc2NtL2xpbnV4L2tlcm5lbC9naXQveGlhbmcvZXJvZnMtdXRpbHMuZ2l0L2Fib3V0Lw==">https://git.kernel.org/pub/scm/linux/kernel/git/xiang/erofs-utils.git/about/<i class="fa fa-external-link-alt"></i></span></li>
<li>EROFS Introducing Mail: <span class="exturl" data-url="aHR0cHM6Ly9tYXJjLmluZm8vP2w9bGludXgtZnNkZXZlbCZtPTE1Mjc3NjQ4MDQyNTYyNA==">https://marc.info/?l=linux-fsdevel&amp;m=152776480425624<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="slide"><a class="header-anchor-1" href="#slide">#</a>Slide</h2>
<ul>
<li>ATC '19 汇报 Slides: <span class="exturl" data-url="aHR0cHM6Ly93d3cudXNlbml4Lm9yZy9zaXRlcy9kZWZhdWx0L2ZpbGVzL2NvbmZlcmVuY2UvcHJvdGVjdGVkLWZpbGVzL2F0YzE5X3NsaWRlc19nYW8ucGRm">https://www.usenix.org/sites/default/files/conference/protected-files/atc19_slides_gao.pdf<i class="fa fa-external-link-alt"></i></span></li>
<li>EROFS Everywhere: An Image-Based Kernel Approach for Various Use Cases@KubeCon China '23: <span class="exturl" data-url="aHR0cHM6Ly9zdGF0aWMuc2NoZWQuY29tL2hvc3RlZF9maWxlcy9rY2NuY29zc2NobjIwMjMvMTMvT1NTLUNoaW5hLTIwMjMtRVJPRlMucGRm">https://static.sched.com/hosted_files/kccncosschn2023/13/OSS-China-2023-EROFS.pdf<i class="fa fa-external-link-alt"></i></span></li>
<li>Image-based read-only filesystems (EROFS) 龙蜥社区: <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vcHJlc2VudGF0aW9uL2QvMTZMd0QtRjBJS3k4b2trQzhxQjk0djJZZ0RjV0JCRTI2cm1Nbl9zMU1xeGMvZWRpdA==">https://docs.google.com/presentation/d/16LwD-F0IKy8okkC8qB94v2YgDcWBBE26rmMn_s1Mqxc/edit<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="其他资源"><a class="header-anchor-1" href="#其他资源">#</a>其他资源</h2>
<ul>
<li>Linux-erofs Mail List: <span class="exturl" data-url="aHR0cHM6Ly9saXN0cy5vemxhYnMub3JnL2xpc3RpbmZvL2xpbnV4LWVyb2Zz">https://lists.ozlabs.org/listinfo/linux-erofs<i class="fa fa-external-link-alt"></i></span></li>
<li>EROFS 文件系统这几年（一） —— 缘起: <span class="exturl" data-url="aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvUlU5SmNwaklIYXJnQV8tb0Y5dFRjZw==">https://mp.weixin.qq.com/s/RU9JcpjIHargA_-oF9tTcg<i class="fa fa-external-link-alt"></i></span></li>
<li>EROFS 文件系统生态进展（-2024 年 1 月）: <span class="exturl" data-url="aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvM1FwYmFtdWpRU28zNzh2WHI3UGxBQQ==">https://mp.weixin.qq.com/s/3QpbamujQSo378vXr7PlAA<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="第三方"><a class="header-anchor-1" href="#第三方">#</a>第三方</h2>
<ul>
<li>论文阅读记录（by @SToPire 大佬）: <span class="exturl" data-url="aHR0cHM6Ly9zdG9waXJlLmdpdGh1Yi5pby8yMDIzLzA1LzA3L0VST0ZTLUEtQ29tcHJlc3Npb24tZnJpZW5kbHktUmVhZG9ubHktRmlsZS1TeXN0ZW0tZm9yLVJlc291cmNlLXNjYXJjZS1EZXZpY2VzLw==">https://stopire.github.io/2023/05/07/EROFS-A-Compression-friendly-Readonly-File-System-for-Resource-scarce-Devices/<i class="fa fa-external-link-alt"></i></span></li>
<li>EROFS 压缩文件格式和读取流程分析（by @SToPire 大佬）: <span class="exturl" data-url="aHR0cHM6Ly9zdG9waXJlLmdpdGh1Yi5pby8yMDIzLzA3LzA1L0VST0ZTJUU1JThFJThCJUU3JUJDJUE5JUU2JTk2JTg3JUU0JUJCJUI2JUU2JUEwJUJDJUU1JUJDJThGJUU1JTkyJThDJUU4JUFGJUJCJUU1JThGJTk2JUU2JUI1JTgxJUU3JUE4JThCJUU1JTg4JTg2JUU2JTlFJTkwLw==">https://stopire.github.io/2023/07/05/EROFS压缩文件格式和读取流程分析/<i class="fa fa-external-link-alt"></i></span></li>
<li>论文阅读（by @mwish）: <span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82NjM3ODI1OTQ=">https://zhuanlan.zhihu.com/p/663782594<i class="fa fa-external-link-alt"></i></span></li>
<li>论文阅读（by elecfans）: <span class="exturl" data-url="aHR0cHM6Ly9iYnMuZWxlY2ZhbnMuY29tL2ppc2h1XzIyOTY3MDBfMV8xLmh0bWw=">https://bbs.elecfans.com/jishu_2296700_1_1.html<i class="fa fa-external-link-alt"></i></span></li>
<li>EROFS on-disk compact index 生成分析: <span class="exturl" data-url="aHR0cHM6Ly90anRlY2gubWUvZXJvZnMtY29tcGFjdGVkLWluZGV4LWdlbmVyYXRpb24uaHRtbA==">https://tjtech.me/erofs-compacted-index-generation.html<i class="fa fa-external-link-alt"></i></span></li>
<li>EROFS ztailpacking 特性实现详解: <span class="exturl" data-url="aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvWmdLVTY4SmJnc2s4YkFLNWVSUjhFUQ==">https://mp.weixin.qq.com/s/ZgKU68Jbgsk8bAK5eRR8EQ<i class="fa fa-external-link-alt"></i></span></li>
<li>EROFS 源码阅读笔记: <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzM3NjM3NTExL2FydGljbGUvZGV0YWlscy8xMjQzMzAxNTg=">https://blog.csdn.net/m0_37637511/article/details/124330158<i class="fa fa-external-link-alt"></i></span></li>
<li>浅谈华为 EROFS 文件系统的两个主要技术: <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NodWFuZ2d1bzEyMS9hcnRpY2xlL2RldGFpbHMvOTA5MDExMzE=">https://blog.csdn.net/shuangguo121/article/details/90901131<i class="fa fa-external-link-alt"></i></span></li>
<li>用 EROFS 进行存储与备份: <span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82NDYzMjIzNjQ=">https://zhuanlan.zhihu.com/p/646322364<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="links"><a class="header-anchor-1" href="#links">#</a>Links</h2>
<ul>
<li>我的论文阅读记录: <a href="/2024/05/09/erofs-paper-reading/" title="EROFS: A Compression-friendly ReadonlyFile System for Resource-scarce Devices">论文阅读</a></li>
</ul>
]]></content>
      <categories>
        <category>erofs</category>
      </categories>
      <tags>
        <tag>文件系统</tag>
        <tag>操作系统</tag>
        <tag>EROFS</tag>
      </tags>
  </entry>
  <entry>
    <title>EROFS 源码阅读</title>
    <url>/2024/05/12/erofs-source-reading/</url>
    <content><![CDATA[<h2 id="erofs-in-tree-驱动"><a class="header-anchor-1" href="#erofs-in-tree-驱动">#</a>erofs in-tree 驱动</h2>
<p>in-tree 的代码也是模块的形式，以 <code>module_init</code> 开始</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">module_init(erofs_module_init);</span><br><span class="line">module_exit(erofs_module_exit);</span><br><span class="line"></span><br><span class="line"><span class="comment">// in erofs_module_init()</span></span><br><span class="line">err = register_filesystem(&amp;erofs_fs_type);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">file_system_type</span> <span class="title">erofs_fs_type</span> =</span> &#123;</span><br><span class="line">    .owner          = THIS_MODULE,</span><br><span class="line">    .name           = <span class="string">&quot;erofs&quot;</span>,</span><br><span class="line">    .init_fs_context = erofs_init_fs_context, <span class="comment">// init -&gt;ops and -&gt;fs_private</span></span><br><span class="line">    .kill_sb        = erofs_kill_sb, <span class="comment">// shutdown a fs</span></span><br><span class="line">    .fs_flags       = FS_REQUIRES_DEV | FS_ALLOW_IDMAP,</span><br><span class="line">&#125;;</span><br><span class="line">MODULE_ALIAS_FS(<span class="string">&quot;erofs&quot;</span>);</span><br></pre></td></tr></table></figure>
<p><code>Kconfig</code> 中包含的一些选项：</p>
<ul>
<li><code>EROFS_FS_DEBUG</code> DEBUG 支持</li>
<li><code>EROFS_FS_XATTR</code> 拓展属性支持</li>
<li><code>EROFS_FS_POSIX_ACL</code> ACL 支持</li>
<li><code>EROFS_FS_SECURITY</code> 安全标签支持</li>
<li><code>EROFS_FS_ZIP</code> 压缩支持，默认只支持读取 LZ4 压缩的数据
<ul>
<li><code>EROFS_FS_ZIP_LZMA</code> 支持读取 microLZMA 压缩的数据</li>
<li><code>EROFS_FS_ZIP_DEFLATE</code> 支持读取 DEFLATE 压缩的数据</li>
<li><code>EROFS_FS_PCPU_KTHREAD</code> 用 per-cpu 的线程池去作异步数据解压缩
<ul>
<li><code>EROFS_FS_PCPU_KTHREAD_HIPRI</code> 把这些线程设为高优先级</li>
</ul>
</li>
</ul>
</li>
<li><code>EROFS_FS_ONDEMAND</code> 利用 fscache 实现 on-demand 读</li>
</ul>
<h3 id="初始化流程"><a class="header-anchor-1" href="#初始化流程">#</a>初始化流程</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">fs_context_operations</span> <span class="title">erofs_context_ops</span> =</span> &#123;</span><br><span class="line">    .parse_param	= erofs_fc_parse_param, <span class="comment">// add a fs param</span></span><br><span class="line">    .get_tree       = erofs_fc_get_tree, <span class="comment">// ~mount a fs</span></span><br><span class="line">    .reconfigure    = erofs_fc_reconfigure, <span class="comment">// sb reconfiguration</span></span><br><span class="line">    .<span class="built_in">free</span>		= erofs_fc_free, <span class="comment">// clean up</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="内核的-fs-context-结构"><a class="header-anchor-1" href="#内核的-fs-context-结构">#</a>内核的 <code>fs_context</code> 结构</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">fs_context</span> &#123;</span></span><br><span class="line">    <span class="type">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">fs_context_operations</span> *<span class="title">ops</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">file_system_type</span> *<span class="title">fs_type</span>;</span></span><br><span class="line">    <span class="type">void</span>			*fs_private;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">dentry</span>		*<span class="title">root</span>;</span>  <span class="comment">// the root of fs tree</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">user_namespace</span>	*<span class="title">user_ns</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">net</span>		*<span class="title">net_ns</span>;</span></span><br><span class="line">    <span class="type">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">cred</span>	*<span class="title">cred</span>;</span></span><br><span class="line">    <span class="type">char</span>			*source;  <span class="comment">// /dev/sda1 or host:/path, etc.</span></span><br><span class="line">    <span class="type">char</span>			*subtype;</span><br><span class="line">    <span class="type">void</span>			*security;</span><br><span class="line">    <span class="type">void</span>			*s_fs_info;  <span class="comment">// user data -&gt; erofs_sb_info</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span>		sb_flags;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span>		sb_flags_mask;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span>		s_iflags;</span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">fs_context_purpose</span>	<span class="title">purpose</span>:</span><span class="number">8</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="erofs-的元数据-erofs-sb-info"><a class="header-anchor-1" href="#erofs-的元数据-erofs-sb-info">#</a>EROFS 的元数据 <code>erofs_sb_info</code></h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">erofs_sb_info</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">erofs_mount_opts</span> <span class="title">opt</span>;</span>	<span class="comment">/* options */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> CONFIG_EROFS_FS_ZIP</span></span><br><span class="line">    <span class="comment">/* list for all registered superblocks, mainly for shrinker */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">list_head</span> <span class="title">list</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">mutex</span> <span class="title">umount_mutex</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* managed XArray arranged in physical block number */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">xarray</span> <span class="title">managed_pslots</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> shrinker_run_no;</span><br><span class="line">    u16 available_compr_algs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* pseudo inode to manage cached pages */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">inode</span> *<span class="title">managed_cache</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">erofs_sb_lz4_info</span> <span class="title">lz4</span>;</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>    <span class="comment">/* CONFIG_EROFS_FS_ZIP */</span></span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">inode</span> *<span class="title">packed_inode</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">erofs_dev_context</span> *<span class="title">devs</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">dax_device</span> *<span class="title">dax_dev</span>;</span></span><br><span class="line">    u64 dax_part_off;</span><br><span class="line">    u64 total_blocks;</span><br><span class="line">    u32 primarydevice_blocks;</span><br><span class="line"></span><br><span class="line">    u32 meta_blkaddr;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> CONFIG_EROFS_FS_XATTR</span></span><br><span class="line">    u32 xattr_blkaddr;</span><br><span class="line">    u32 xattr_prefix_start;</span><br><span class="line">    u8 xattr_prefix_count;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">erofs_xattr_prefix_item</span> *<span class="title">xattr_prefixes</span>;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> xattr_filter_reserved;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    u16 device_id_mask;	<span class="comment">/* valid bits of device id to be used */</span></span><br><span class="line"></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> islotbits;	<span class="comment">/* inode slot unit size in bit shift */</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> blkszbits;	<span class="comment">/* filesystem block size in bit shift */</span></span><br><span class="line"></span><br><span class="line">    u32 sb_size;			<span class="comment">/* total superblock size */</span></span><br><span class="line">    u32 build_time_nsec;</span><br><span class="line">    u64 build_time;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* what we really care is nid, rather than ino.. */</span></span><br><span class="line">    <span class="type">erofs_nid_t</span> root_nid;</span><br><span class="line">    <span class="type">erofs_nid_t</span> packed_nid;</span><br><span class="line">    <span class="comment">/* used for statfs, f_files - f_favail */</span></span><br><span class="line">    u64 inos;</span><br><span class="line"></span><br><span class="line">    u8 uuid[<span class="number">16</span>];                    <span class="comment">/* 128-bit uuid for volume */</span></span><br><span class="line">    u8 volume_name[<span class="number">16</span>];             <span class="comment">/* volume name */</span></span><br><span class="line">    u32 feature_compat;</span><br><span class="line">    u32 feature_incompat;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* sysfs support */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">kobject</span> <span class="title">s_kobj</span>;</span>		<span class="comment">/* /sys/fs/erofs/&lt;devname&gt; */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">completion</span> <span class="title">s_kobj_unregister</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* fscache support */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">fscache_volume</span> *<span class="title">volume</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">erofs_fscache</span> *<span class="title">s_fscache</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">erofs_domain</span> *<span class="title">domain</span>;</span></span><br><span class="line">    <span class="type">char</span> *fsid;</span><br><span class="line">    <span class="type">char</span> *domain_id;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><code>bdev.c</code> 中负责硬盘块操作</p>
<p><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NjYyNzI5NDU=">申请 super_block<i class="fa fa-external-link-alt"></i></span></p>
<p><code>erofs_fc_fill_super</code> 其实是从硬盘上读取数据，初始化 user 的 sb 信息</p>
<h3 id="inode-操作"><a class="header-anchor-1" href="#inode-操作">#</a>inode 操作</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">inode_operations</span> <span class="title">erofs_generic_iops</span> =</span> &#123;</span><br><span class="line">    .getattr = erofs_getattr,</span><br><span class="line">    .listxattr = erofs_listxattr,</span><br><span class="line">    .get_inode_acl = erofs_get_acl,</span><br><span class="line">    .fiemap = erofs_fiemap,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">inode_operations</span> <span class="title">erofs_symlink_iops</span> =</span> &#123;</span><br><span class="line">    .get_link = page_get_link,</span><br><span class="line">    .getattr = erofs_getattr,</span><br><span class="line">    .listxattr = erofs_listxattr,</span><br><span class="line">    .get_inode_acl = erofs_get_acl,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">inode_operations</span> <span class="title">erofs_fast_symlink_iops</span> =</span> &#123;</span><br><span class="line">    .get_link = simple_get_link,</span><br><span class="line">    .getattr = erofs_getattr,</span><br><span class="line">    .listxattr = erofs_listxattr,</span><br><span class="line">    .get_inode_acl = erofs_get_acl,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="erofs-utils"><a class="header-anchor-1" href="#erofs-utils">#</a>erofs-utils</h2>
<ul>
<li><code>mkfs.erofs</code> 创建一个 erofs 文件系统；</li>
<li><code>fsck.erofs</code> 检查 erofs 镜像的完整性；</li>
<li><code>dump.erofs</code> 导出 erofs 镜像中的相关细节；</li>
<li><code>erofsfuse</code> 用户态</li>
</ul>
<h2 id="mkfs"><a class="header-anchor-1" href="#mkfs">#</a>mkfs</h2>
<h2 id="fsck"><a class="header-anchor-1" href="#fsck">#</a>fsck</h2>
<h2 id="dump"><a class="header-anchor-1" href="#dump">#</a>dump</h2>
<h2 id="erofsfuse"><a class="header-anchor-1" href="#erofsfuse">#</a>erofsfuse</h2>
]]></content>
      <categories>
        <category>erofs</category>
      </categories>
      <tags>
        <tag>文件系统</tag>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>分布式系统基础</title>
    <url>/2024/04/04/distributed-system/</url>
    <content><![CDATA[<h2 id="为什么需要分布式系统"><a class="header-anchor-1" href="#为什么需要分布式系统">#</a>为什么需要分布式系统</h2>
<p>单点故障，分布式增加冗余提高系统的可用性</p>
<h2 id="分布式系统存在的问题"><a class="header-anchor-1" href="#分布式系统存在的问题">#</a>分布式系统存在的问题</h2>
<h3 id="cap-定理"><a class="header-anchor-1" href="#cap-定理">#</a>CAP 定理</h3>
<p>对于一个分布式计算系统来说，不可能同时满足以下三点：</p>
<ul>
<li>一致性 (Consistency): 所有节点都能够访问到同一份最新的数据副本或者错误。</li>
<li>可用性 (Availability): 每次请求都能获取到非错误响应，但不保证获取的数据为最新数据。</li>
<li>分区容错性 (Partition tolerance): 在节点之间的网络通信出现故障的情况下，系统仍能继续运行。</li>
</ul>
<p>分析:</p>
<ul>
<li>网络故障必定存在，如果一发生网络分区整个系统就不可用，是没有意义的。因此分布式系统必须首先要保证 P 性质，接下来有两个选择: C 或者 A。</li>
<li>如果选择 C 一致性，则当网络分区无法保证数据是最新的时候，系统就会返回错误或者超时，即不可用。</li>
<li>如果选择 A 可用性，则系统始终尝试返回信息的最新版本，但是无法保证是最新的。</li>
</ul>
<h3 id="base-碱-语义"><a class="header-anchor-1" href="#base-碱-语义">#</a>BASE (碱) 语义</h3>
<p>分布式系统的一种用于实现高可用性的一致性模型，弱化一致性的承诺，保证可用性，因此属于 AP 的一种拓展。</p>
<ul>
<li>基本可用 (Basically Available): 读写操作尽可能是可用的，但是不保证一致性 (在冲突的情况下，写值可能不会成功; 读值可能不是最新的)</li>
<li>软状态 (Soft-state): 没有强一致性保证。</li>
<li>最终一致性 (Eventually consistent): 系统运行足够长的时间后，多个节点最终会达到一致。</li>
</ul>
<h3 id="c-与-a-如何取舍"><a class="header-anchor-1" href="#c-与-a-如何取舍">#</a>C 与 A 如何取舍</h3>
<ol>
<li>选择一致性 (CP): 对一致性要求较高的系统，例如:</li>
</ol>
<p>传统 ACID 数据库，服务注册中心 (Etcd, Zookeeper, Nacos)，HBase，金融系统，银行系统，与钱相关的</p>
<ol start="2">
<li>选择可用性 (AP):</li>
</ol>
<p>Eureka，Redis 集群，Nacos 配置中心</p>
]]></content>
      <categories>
        <category>interview</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>暑期实习 - 面试八股文大纲</title>
    <url>/2024/04/07/interview/</url>
    <content><![CDATA[<h2 id="leetcode"><a class="header-anchor-1" href="#leetcode">#</a>Leetcode</h2>
<ul>
<li>链表</li>
<li>dp</li>
<li>排列组合</li>
<li>大数模运算</li>
<li>图算法</li>
<li>数论</li>
<li>字符串</li>
</ul>
<h2 id="杂项"><a class="header-anchor-1" href="#杂项">#</a>杂项</h2>
<ul>
<li>自我介绍</li>
<li>开放性问题
<ul>
<li>项目中遇到的困难问题</li>
<li>最近关注的新技术</li>
<li>最近读了什么书
<ul>
<li>高性能 MySQL</li>
<li>Redis 源码分析</li>
<li>设计数据密集型应用 DDIA</li>
<li>大规模并行处理器程序设计</li>
</ul>
</li>
<li>还在面其他的什么公司没
<ul>
<li>其他几家云厂商，不过首选的是 xx</li>
</ul>
</li>
<li>有没有别的 offer
<ul>
<li>目前拿到了一个 xx 的 offer，但不是最满意的，其他厂在评估中；贵公司的 offer 与我的意向最最相符</li>
</ul>
</li>
<li>为什么选择 xx 城市: 学校/家里/npy 在 XX</li>
<li>为什么来 xx 公司
<ul>
<li>xx 公司是国内领先</li>
<li>离学校比较近</li>
<li>我的兴趣是 xx 和 yy 公司很匹配</li>
<li>能够让我发挥特长，施展才学，获得成就感</li>
</ul>
</li>
<li>时间管理
<ul>
<li>利用层次化的 todolist 软件分解、管理任务</li>
<li>优先完成紧急的</li>
</ul>
</li>
<li>保研细节
<ul>
<li>为什么选择这个实验室</li>
<li>为什么选择这个方向
<ul>
<li>解决的问题（软件工程问题）很贴近现实且重要</li>
<li>采用的方法 AI 新颖，是未来的趋势</li>
</ul>
</li>
</ul>
</li>
<li>职业规划
<ul>
<li>1-2 年内 认真完成工作任务 全面建立起对这个行业和市场的了解</li>
<li>未来的 3 年之内，我希望靠自己优秀的业绩从 xxxx 职位的执行工作上升到管理方面的工作。</li>
<li>远期规划，我会根据环境的变化，工作内容的变化，以及我自身能力的变化，不断进行调整的。</li>
<li>对于职业规划，我暂时的考虑是这样子的。谢谢！</li>
</ul>
</li>
<li>关于加班
<ul>
<li>如果遇到紧急任务 牺牲部分个人时间 没问题</li>
</ul>
</li>
<li>用过公司什么产品
<ul>
<li>ECS/轻量应用/数据库/缓存/容器服务</li>
</ul>
</li>
<li>最佩服的人
<ul>
<li>Linus Torvalds 技术大牛 构建了今天的互联网</li>
</ul>
</li>
<li>字节的产品 抖音、今日头条、多闪、飞书、西瓜视频、火山小视频、faceU 激萌、悟空问答、飞聊、皮皮虾、懂车帝、图虫</li>
<li>优点
<ul>
<li>实事求是</li>
</ul>
</li>
<li>缺点
<ul>
<li>i 人 有时喜欢自闭 但是也在逐步变得 open</li>
</ul>
</li>
<li>印象最深的事情
<ul>
<li>参加学校的 CTF 竞赛，奋战一周，最终获得校内第一名</li>
</ul>
</li>
<li>兴趣爱好
<ul>
<li>骑自行车/跑步</li>
<li>音乐</li>
<li>读书</li>
</ul>
</li>
<li>烦恼
<ul>
<li>有点 i</li>
</ul>
</li>
<li>最大的挫折
<ul>
<li>论文被拒</li>
</ul>
</li>
<li>朋友评价
<ul>
<li>(导师) 有责任感</li>
<li>(同学) 能力强</li>
<li>热心 乐于助人</li>
<li>有点 i</li>
</ul>
</li>
<li>坚持最久的事情
<ul>
<li>Leetcode 每日一题</li>
</ul>
</li>
<li>激发
<ul>
<li>挑战</li>
<li>成就</li>
</ul>
</li>
<li>动机
<ul>
<li>发挥特长 收获满足</li>
</ul>
</li>
</ul>
</li>
<li>什么时间可以入职
<ul>
<li>25.3 毕业</li>
<li>6 月份~毕业</li>
<li>杭州!</li>
</ul>
</li>
<li>反问问题
<ul>
<li>面试表现如何/还需要加强哪些方面</li>
<li>新员工培养机制</li>
<li>(HR) 面试之后下一步的安排是怎样的</li>
<li>(HR) 面试之后大概多久能出结果</li>
<li>对于实习生/这个职位的期望</li>
<li>如果我有幸能成为公司的一员，请问我在入职前需要提前做哪些准备</li>
<li>(故作思考)~转正率有多少 (一般不回答)</li>
<li>我想要了解的都已经了解到了，您讲的也非常清楚，我这里没有什么问题了，谢谢</li>
</ul>
</li>
<li>STAR 原则
<ul>
<li>Situation</li>
<li>Task</li>
<li>Action!</li>
<li>Result!</li>
</ul>
</li>
</ul>
<h2 id="智力题"><a class="header-anchor-1" href="#智力题">#</a>智力题</h2>
<ul>
<li>高楼扔鸡蛋</li>
<li>老鼠喝毒药</li>
<li>海盗分金</li>
<li>博弈论
<ul>
<li>两个人轮流拿 1 或 2 或 3 个的石头，怎么能保证拿到最后一个</li>
</ul>
</li>
</ul>
<h2 id="计算机基础"><a class="header-anchor-1" href="#计算机基础">#</a>计算机基础</h2>
<h3 id="数据结构-✅"><a class="header-anchor-1" href="#数据结构-✅">#</a>数据结构 ✅</h3>
<ul>
<li>哈希表
<ul>
<li>冲突解决
<ul>
<li>开链法
<ul>
<li>链表</li>
<li>JDK&gt;=8 红黑树</li>
</ul>
</li>
<li>开放寻址
<ul>
<li>线性探测法</li>
<li>二次探测法</li>
</ul>
</li>
<li>再哈希</li>
</ul>
</li>
<li>扩缩容
<ul>
<li>负载因子 = 元素个数 / 桶个数
<ul>
<li>JDK 默认 &gt;0.75 扩容</li>
<li>Redis &lt;0.1 缩容</li>
</ul>
</li>
<li>Redis - 渐进式 Rehash
<ul>
<li>防止扩容时 key 过多导致卡顿</li>
<li>懒迁移</li>
</ul>
</li>
<li>HashMap 一次性完成</li>
</ul>
</li>
</ul>
</li>
<li>AVL</li>
<li>Rb-tree</li>
<li>B 树 B+树
<ul>
<li>+节点密度大, 3 层能存 2kw 数据, 需要的 IO 少</li>
<li>-节点分裂合并复杂</li>
<li>使用场景
<ul>
<li>MySQL 索引</li>
</ul>
</li>
</ul>
</li>
<li>SkipList
<ul>
<li>查找,插入 O(logn)</li>
<li>+编写简单</li>
<li>+插入删除更简单</li>
<li>-2kw 需要 24 层, 查询需要的跳转/IO 次数多</li>
<li>使用场景
<ul>
<li>Redis</li>
<li>RocksDB</li>
<li>Lucene &amp; ElasticSearch</li>
</ul>
</li>
</ul>
</li>
<li>堆</li>
</ul>
<h3 id="算法-❓"><a class="header-anchor-1" href="#算法-❓">#</a>算法 ❓</h3>
<ul>
<li>排序算法
<ul>
<li>选择排序</li>
<li>插入排序 (打牌) 稳</li>
<li>冒泡排序 稳</li>
<li>快速排序</li>
<li>归并排序 稳</li>
<li>桶排序</li>
<li>堆排序</li>
<li>基数排序 稳</li>
<li>希尔排序</li>
<li>稳定 &amp; 不稳定</li>
<li>STL -&gt; timsort</li>
<li>Java -&gt;</li>
</ul>
</li>
</ul>
<p>排序方法 平均 好 坏 空间 稳定性插入排序 n² n n² O(1) 稳希尔排序 n² n n² O(1)<br />
选择排序 n² n² n² O(1)<br />
冒泡排序 n² n n² O(1) 稳堆排序 nlogn nlogn nlogn O(1)<br />
快速排序 nlogn nlogn n² nlogn<br />
归并排序 nlogn nlogn nlogn n 稳基数排序 O(d(r+n)) O(d(n+rd)) O(d(r+n)) O(rd+n) 稳</p>
<ul>
<li>布隆过滤器
<ul>
<li>key -&gt; hash 到多个 key</li>
<li>快速判断元素是否存在于某个集合里面</li>
</ul>
</li>
<li>图算法
<ul>
<li>Dijkstra: BFS 每个节点更新最短距离，单源，需要无负权边+无环</li>
<li>Flord</li>
</ul>
</li>
</ul>
<h3 id="体系结构-❓"><a class="header-anchor-1" href="#体系结构-❓">#</a>体系结构 ❓</h3>
<ul>
<li>MMU
<ul>
<li>位于 CPU 芯片内部</li>
<li>将 CPU 请求的虚拟地址翻译成物理地址</li>
<li>TLB
<ul>
<li>缓存了当前进程使用的页表项(PTE)</li>
<li>在 MMU 旁边 被 MMU 使用</li>
</ul>
</li>
</ul>
</li>
<li>CPU Cache
<ul>
<li>速度
<ul>
<li>L1: 1ns 64KB</li>
<li>L2: 4ns 256KB</li>
<li>L3: 10ns 8MB</li>
<li>Memory: 100ns 8GB</li>
</ul>
</li>
<li>拓扑
<ul>
<li>Write Through: 写内存同时写 Cache</li>
<li>Write Back: 写 Cache, 异步写内存</li>
</ul>
</li>
<li>多核缓存一致性
<ul>
<li>MESI(梅西)协议
<ul>
<li>M: Modified</li>
<li>E: Exclusive</li>
<li>S: Shared</li>
<li>I: Invalid</li>
</ul>
</li>
<li>MOESI 协议
<ul>
<li>O: Owner</li>
<li>+允许多个 CPU 同时共享同一块缓存</li>
<li>+性能更好</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>内存栅栏 ❓</li>
<li>NUMA
<ul>
<li>UMA 多核对称</li>
<li>NUMA 多核不对称</li>
</ul>
</li>
</ul>
<h3 id="操作系统-✅"><a class="header-anchor-1" href="#操作系统-✅">#</a>操作系统 ✅</h3>
<ul>
<li>Socket</li>
<li>文件系统</li>
<li>Shell 命令 ✅</li>
<li>CPU 管理
<ul>
<li>进程 线程 协程
<ul>
<li>进程
<ul>
<li>资源分配单位</li>
<li>有自己的地址空间 堆 PCB 页表 文件表 信号处理</li>
</ul>
</li>
<li>线程
<ul>
<li>执行和调度单位</li>
<li>有自己的栈 寄存器</li>
</ul>
</li>
<li>协程
<ul>
<li>用户态模拟的线程</li>
<li>程序自己控制切换</li>
</ul>
</li>
</ul>
</li>
<li>进程状态
<ul>
<li>R: Running 可被调度</li>
<li>S: Sleeping 等待中 可以被信号等中断</li>
<li>D: Sleeping 系统调用中 不可被中断</li>
<li>T: Stopped 收到了 SIGSTOP/SIGCONT 继续</li>
<li>Z: Zombies 进程已结束 但在等待父进程读取状态</li>
<li>X: Dead 已经退出</li>
</ul>
</li>
<li>孤儿进程: 父进程退出</li>
<li>进程文件: lsof, /proc/fd/fd</li>
<li>调度算法
<ul>
<li>FCFS</li>
<li>SPF</li>
<li>RR</li>
<li>多级队列</li>
</ul>
</li>
<li>进线程切换
<ul>
<li>上下文切换</li>
<li>特权级切换</li>
<li>页表切换
<ul>
<li>刷新 TLB</li>
</ul>
</li>
</ul>
</li>
<li>进程间通信
<ul>
<li>信号</li>
<li>利用锁
<ul>
<li>消息队列 msg{get,snd,rcv}()</li>
<li>信号量 sem{init,post,wait}()</li>
</ul>
</li>
<li>利用文件
<ul>
<li>管道/FIFO</li>
<li>UDS</li>
<li>TCP</li>
</ul>
</li>
<li>利用内存
<ul>
<li>共享内存 shm{get,at}()</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>锁
<ul>
<li>mutex</li>
<li>semaphore</li>
<li>原子变量</li>
<li>条件变量</li>
<li>volatile</li>
<li>CAS
<ul>
<li>ABA 问题</li>
</ul>
</li>
<li>死锁</li>
</ul>
</li>
<li>内存管理
<ul>
<li>为什么需要段页
<ul>
<li>-如果连续分配内存会导致碎片</li>
</ul>
</li>
<li>段式内存管理
<ul>
<li>段表 段权限</li>
<li>-外碎片</li>
</ul>
</li>
<li>页式内存管理 x86-64
<ul>
<li>4k 固定大小 页权限</li>
<li>+缓解外碎片 提高内存使用效率</li>
<li>-内碎片</li>
<li>缺页中断</li>
<li>换页算法
<ul>
<li>LRU</li>
<li>LFU</li>
<li>FIFO</li>
</ul>
</li>
</ul>
</li>
<li>段页结合
<ul>
<li>段表+页号+偏移</li>
<li>-&gt; 页表+页号+偏移</li>
<li>-&gt; 地址</li>
</ul>
</li>
<li>Linux 实际上不使用段机制
<ul>
<li>SegFault 检测实际上是通过设置页权限实现的</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="oop-设计模式-❓"><a class="header-anchor-1" href="#oop-设计模式-❓">#</a>OOP &amp; 设计模式 ❓</h3>
<ul>
<li>封装 继承 多态</li>
<li>继承的缺点
<ul>
<li>不够灵活 随着项目发展 不利于重构</li>
<li>会有菱形继承问题</li>
<li>golang Rust 等很多语言去掉继承</li>
</ul>
</li>
<li>重载</li>
<li>工厂模式</li>
<li>单例模式</li>
<li>Builder 模式</li>
<li>代理模式</li>
<li>适配器模式</li>
</ul>
<h3 id="计算机网络-❓"><a class="header-anchor-1" href="#计算机网络-❓">#</a>计算机网络 ❓</h3>
<ul>
<li>OSI 七层
<ul>
<li>L7 应用层</li>
<li>L6 表示层</li>
<li>L5 会话层</li>
<li>L4 传输层</li>
<li>L3 网络层</li>
<li>L2 数据链路层</li>
<li>L1 物理层</li>
</ul>
</li>
<li>OSI 五层</li>
<li>交换机 路由器</li>
<li>常见的网络协议
<ul>
<li>MAC</li>
<li>TCP/UDP</li>
<li>SSH</li>
<li>FTP</li>
<li>ARP</li>
</ul>
</li>
<li>IP 协议 网络层
<ul>
<li>IP 头 20 字节 源 ip 目标 ip</li>
<li>ARP
<ul>
<li>广播 ARP 请求 询问</li>
<li>ARP 欺骗</li>
</ul>
</li>
<li>ICMP ping</li>
<li>DHCP</li>
<li>NAT</li>
</ul>
</li>
<li>TCP 协议 传输层
<ul>
<li>可靠 点对点 字节流 面向连接 20 字节</li>
<li>源 port 目标 port seq ack 长度 标志</li>
<li>可靠性保证 ❓
<ul>
<li>序列号 确认机制 超时重传</li>
<li>流量控制 拥塞控制</li>
<li>握手流程
<ul>
<li>第二次握手重试</li>
</ul>
</li>
<li>挥手流程
<ul>
<li>第一轮：
<ul>
<li>Est -(+FIN)-&gt; FIN_WAIT_1 -(-ACK)-&gt; FIN_WAIT_2</li>
<li>Est -(+ACK/-FIN)-&gt; CLOSE_WAIT</li>
</ul>
</li>
<li>第二轮
<ul>
<li>FIN_WAIT_2 -(+ACK/-FIN)-&gt; TIME_WAIT … CLOSE</li>
<li>CLOSE_WAIT -(+FIN)-&gt; LAST_ACK -&gt; CLOSE</li>
</ul>
</li>
<li>主动方 TIME_WAIT 等待 2MSL ❓
<ul>
<li>保证对端正确断开</li>
<li>保证本次连接所有报文都过期 不影响下次连接</li>
</ul>
</li>
</ul>
</li>
<li>保活机制 (Linux SO_KEEPALIVE) 非标准 ❓</li>
</ul>
</li>
<li>流量控制 ❓
<ul>
<li>侧重按照接收者的接收能力来发送数据</li>
<li>发送 接收 滑动窗口
<ul>
<li>Selective ACK 额外回复收到了哪些段数据</li>
<li>Duplicate ACK 额外回复哪些段数据重复接收</li>
<li>Nagle 算法 接收窗口太小时 累计一定数据后(MSS)再发送
<ul>
<li>-实时性变差</li>
<li>TCP_NODELAY 关闭</li>
</ul>
</li>
<li>延迟 ACK 组合多个 ACK 为一个
<ul>
<li>-实时性变差</li>
<li>TCP_QUICKACK 关闭</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>拥塞控制 ❓
<ul>
<li>侧重避免网络出现负载过大的情况</li>
<li>慢启动 指数增加</li>
<li>拥塞避免 线性增加</li>
<li>拥塞发生 超时重传 RTO 指数倍增 保险 回到起点</li>
<li>快速恢复 快速重传 收到了 3ACK 没超时但是重传</li>
<li>BBR 拥塞控制算法 ❓</li>
</ul>
</li>
<li>调优选项
<ul>
<li>TCP Fast Open(TFO)
<ul>
<li>第二次连接 通过 TFO cookie 省略一个 RTT</li>
</ul>
</li>
<li>tcp_tw_recycle
<ul>
<li>TIME_WAIT 状态快速回收</li>
</ul>
</li>
<li>tcp_tw_reuse
<ul>
<li>复用 TIME_WAIT 状态的连接</li>
<li>依赖 tcp_timestamps 启用时间戳</li>
</ul>
</li>
</ul>
</li>
<li>缺陷
<ul>
<li>-队头阻塞: 中间丢包导致后面阻塞</li>
<li>-不支持网络迁移</li>
</ul>
</li>
<li>网络攻击
<ul>
<li>syn flood
<ul>
<li>服务器只收到 SYN -&gt; SYN_RCVD 半连接</li>
<li>增大半连接队列</li>
<li>syn cookie</li>
</ul>
</li>
</ul>
</li>
<li>应用问题
<ul>
<li>对端断电 保持 ESTABLISHED 状态
<ul>
<li>对端退出 FIN</li>
<li>对端重启 RST</li>
</ul>
</li>
<li>大量 SYN_RCVD (等待对方第三次握手)
<ul>
<li>缩短超时 (SYN Timeout) 时间</li>
<li>增大半连接队列</li>
<li>SYN cookie 技术
<ul>
<li>自己不再分配内存记录 而是将信息保存到第二次握手回复中</li>
<li>等第三次握手再获取这个信息</li>
</ul>
</li>
</ul>
</li>
<li>大量 CLOSE_WAIT (等待我方 close())
<ul>
<li>对端 shutdown 自己没有 shutdown</li>
</ul>
</li>
<li>大量 TIME_WAIT (先关闭方 等待第四次的 ack 彻底过期)
<ul>
<li>确保应用层使用长连接 Connection: Keep-Alive
<ul>
<li>设置长连接超时时间</li>
</ul>
</li>
<li>使用 tcp_tw_reuse 和 timestamp</li>
<li>增大 tcp_max_tw_buckets 默认 18000</li>
<li>SO_LINGER: 用 RST 代替 FIN, 不安全</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>QUIC 协议 传输层
<ul>
<li>基于 UDP 实现可靠传输 旨在取代 TCP</li>
<li>+单连接传输多个流 避免队头阻塞</li>
<li>+握手过程集成 TLS 节约连接设置的开销</li>
<li>+包含连接 ID 支持底层网络切换</li>
</ul>
</li>
<li>UDP 协议 传输层
<ul>
<li>无状态 面向报文 8 字节</li>
</ul>
</li>
<li>HTTP 协议
<ul>
<li>0.9</li>
<li>1.0</li>
<li>1.1
<ul>
<li>Keep-Alive 默认开启
<ul>
<li>Connection: close 服务器回完 resp 就 close
<ul>
<li>容易导致大量 TIME_WAIT</li>
</ul>
</li>
</ul>
</li>
<li>流水线
<ul>
<li>-HTTP 队头阻塞</li>
</ul>
</li>
</ul>
</li>
<li>2.0 ❓
<ul>
<li>http 请求头压缩编码</li>
<li>二进制帧 请求头可以二进制</li>
<li>引入流 可以单连接传输多个流</li>
<li>服务器推送</li>
<li>-TCP 队头阻塞</li>
</ul>
</li>
<li>3.0 ❓
<ul>
<li>底层 TCP-&gt;QUIC</li>
</ul>
</li>
<li>报文格式
<ul>
<li>GET / HTTP/1.1\r\nHost: <span class="exturl" data-url="aHR0cDovL3h4eC5jb20=">xxx.com<i class="fa fa-external-link-alt"></i></span>\r\n\r\nPAYLOAD</li>
<li>HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\nBODY</li>
</ul>
</li>
<li>状态码
<ul>
<li>101 Switch</li>
<li>200 OK</li>
<li>301 Moved Permanently</li>
<li>302 Found</li>
<li>400 Bad Request</li>
<li>403 Forbidden</li>
<li>404 Not Found</li>
<li>500 Server Error</li>
<li>502 Bad Gateway</li>
</ul>
</li>
<li>请求方法</li>
<li>请求头</li>
<li>缓存控制</li>
</ul>
</li>
<li>DNS 协议 应用层
<ul>
<li>over UDP
<ul>
<li>DOH DOT DOQ</li>
</ul>
</li>
<li>本地域名服务器
<ul>
<li>递归解析</li>
</ul>
</li>
<li>根域名服务器
<ul>
<li>DNS 劫持</li>
<li>DNS 放大
<ul>
<li>假装受害者发起大量 DNS 查询请求</li>
</ul>
</li>
<li>DNS flood</li>
</ul>
</li>
</ul>
</li>
<li>SSL/TLS 协议 应用层和传输层之间/会话层
<ul>
<li>建立流程 四次握手 ❓
<ul>
<li>ClientHello - ServerHello</li>
<li>KeyExchange - Finished</li>
</ul>
</li>
<li>密钥协商: RSA(大质数分解) -&gt; DH(离散对数) -&gt; ECHDA</li>
<li>对称加密</li>
<li>证书机制</li>
<li>中间人攻击</li>
<li>客户端验证 颁发客户端证书 类似网银 ukey</li>
</ul>
</li>
<li>RPC
<ul>
<li>一种调用方式</li>
<li>没有 http 的条条框框 效率更高</li>
<li>可以定制 例如使用 protobuf thrift</li>
<li>一般基于 tcp 实现 也有基于 http2.0</li>
</ul>
</li>
<li>WebSocket
<ul>
<li>HTTP 长连接</li>
<li>HTTP 长轮询</li>
</ul>
</li>
<li>扫码登录</li>
</ul>
<h3 id="软件测试"><a class="header-anchor-1" href="#软件测试">#</a>软件测试</h3>
<ul>
<li>单元测试框架
<ul>
<li>CppUnit</li>
<li>GTest</li>
</ul>
</li>
<li>压测
<ul>
<li>TCP 压测 iperf3</li>
<li>HTTP 压测 wrk</li>
</ul>
</li>
</ul>
<h3 id="编译原理"><a class="header-anchor-1" href="#编译原理">#</a>编译原理</h3>
<ul>
<li>编译器过程</li>
<li>C/C++编译过程</li>
</ul>
<h2 id="语言"><a class="header-anchor-1" href="#语言">#</a>语言</h2>
<h3 id="java-❓"><a class="header-anchor-1" href="#java-❓">#</a>Java ❓</h3>
<ul>
<li>基本数据类型
<ul>
<li>int vs Integer</li>
<li>自动拆箱</li>
<li>小数优化</li>
</ul>
</li>
<li>抽象类 接口</li>
<li>重载 重写</li>
<li>字符串处理</li>
<li>Collections ✅
<ul>
<li>ArrayList
<ul>
<li>x1.5 扩容</li>
<li>线程安全版 -&gt; Vector</li>
</ul>
</li>
<li>LinkedList</li>
<li>Hash{Map,Set}
<ul>
<li>x2 扩容</li>
<li>get() ❓</li>
<li>put() ❓</li>
<li>线程安全版 -&gt; HashTable</li>
<li>线程安全版 2 -&gt; ConcurrentHashMap</li>
<li>记录插入顺序 -&gt; LinkedHash{Map,Set}</li>
</ul>
</li>
<li>Tree{Map,Set}</li>
<li>Stack 线程安全</li>
<li>BlockingQueue 线程安全</li>
</ul>
</li>
<li>Comparable</li>
<li>面向对象特性
<ul>
<li>Object 类
<ul>
<li>析构 finalize()</li>
<li>复制 clone()</li>
<li>容器 hashCode() equals()
<ul>
<li>equals() 默认实现比较引用是否相同</li>
</ul>
</li>
<li>反射 getClass()</li>
<li>字符串 toString()</li>
<li>同步相关 wait() notify() notifyAll()
<ul>
<li>wait() 让持有此对象的监视器的线程等待</li>
<li>notify() 唤醒</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>并发 ❓
<ul>
<li>ThreadLocal</li>
<li>Lock</li>
<li>synchronized
<ul>
<li>修饰方法</li>
<li>修饰代码块</li>
<li>持有对象的锁</li>
</ul>
</li>
<li>volatile</li>
<li>JUC</li>
<li>线程</li>
<li>线程池
<ul>
<li>创建线程开销大</li>
<li>状态
<ul>
<li>RUNNING</li>
<li>SHUTDOWN</li>
<li>STOP</li>
<li>TERMINATED</li>
</ul>
</li>
<li>参数调优
<ul>
<li>CPU 密集: n+1</li>
<li>IO 密集: 2n</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>反射</li>
<li>JVM ❓
<ul>
<li>内存结构 ❓
<ul>
<li>程序计数器 PC</li>
<li>Java 栈: 和 C++的栈类似</li>
<li>本地方法栈(C 栈): JNI 方法的栈</li>
<li>堆 Heap</li>
<li>方法区
<ul>
<li>类信息</li>
<li>静态变量</li>
<li>常量</li>
<li>JIT 编译后的代码</li>
</ul>
</li>
<li>直接内存(堆外内存): JNI 直接分配的内存</li>
</ul>
</li>
<li>堆 Heap 结构
<ul>
<li>新生代
<ul>
<li>Eden</li>
<li>Survivor</li>
</ul>
</li>
<li>老年代</li>
<li>永久代</li>
<li>元空间</li>
</ul>
</li>
<li>类加载器
<ul>
<li>Bootstrap</li>
<li>Extension</li>
<li>Application</li>
</ul>
</li>
<li>GC 算法
<ul>
<li>引用计数
<ul>
<li>-循环引用</li>
</ul>
</li>
<li>标记清除</li>
<li>标记整理</li>
<li>CMS
<ul>
<li>Minor GC</li>
<li>Full GC</li>
</ul>
</li>
<li>ZGC</li>
</ul>
</li>
</ul>
</li>
<li>JDBC</li>
</ul>
<h3 id="c-c-❓"><a class="header-anchor-1" href="#c-c-❓">#</a>C/C++ ❓</h3>
<ul>
<li>malloc
<ul>
<li>sbrk() mmap()</li>
<li>ptmalloc glibc</li>
<li>jemalloc Facebook</li>
<li>tcmalloc Google
<ul>
<li>thread cache</li>
</ul>
</li>
</ul>
</li>
<li>编译
<ul>
<li>工具
<ul>
<li>cmake</li>
<li>meson</li>
<li>makefile/ninja</li>
<li>gradle</li>
</ul>
</li>
</ul>
</li>
<li>编译和链接
<ul>
<li>变量位置
<ul>
<li>局部变量 栈上</li>
<li>全局 静态变量 零初始化 bss 否则 data</li>
</ul>
</li>
</ul>
</li>
<li>STL 容器
<ul>
<li>vector
<ul>
<li>扩容 VSx1.5 GCCx2
<ul>
<li>x2 会导致重新分配</li>
</ul>
</li>
</ul>
</li>
<li>vector/stack</li>
<li>queue/deque</li>
<li>list</li>
<li>map/set</li>
<li>multimap/multiset</li>
<li>unordered_map/unordered_set</li>
</ul>
</li>
<li>引用</li>
<li>OOP
<ul>
<li>类
<ul>
<li>构造 析构</li>
<li>复制 移动</li>
<li>类 vs 结构体
<ul>
<li>类默认 private 结构体默认 public</li>
</ul>
</li>
<li>空类 1 字节</li>
</ul>
</li>
<li>封装
<ul>
<li>保护级别</li>
<li>friend</li>
</ul>
</li>
<li>继承 &amp; 多态
<ul>
<li>保护级别 区别</li>
<li>关键字
<ul>
<li>final 防止继承</li>
<li>override 关键字 明确重写</li>
</ul>
</li>
<li>虚函数
<ul>
<li>Class() 不能是虚函数 否则无法调用</li>
<li>~Class() 必须是虚函数</li>
<li>纯虚函数: 没有实现(<code>=0</code>)的虚函数</li>
</ul>
</li>
<li>抽象类
<ul>
<li>包含 纯虚函数 的类</li>
<li>不可以被 new</li>
</ul>
</li>
<li>虚函数表
<ul>
<li>每个(继承抽象类的)类一个 编译器分配</li>
<li>每个对象有一个隐式的虚表指针成员</li>
<li>MRO 中有几个独立的抽象类 就会有几个虚表指针</li>
</ul>
</li>
<li>虚继承 virtual 继承
<ul>
<li>防止菱形继承</li>
<li>使得虚函数表更加复杂 且内存布局变化</li>
</ul>
</li>
<li>对象切片问题: 派生类对象赋值给基类对象</li>
</ul>
</li>
</ul>
</li>
<li>C++11
<ul>
<li>move() forward()</li>
</ul>
</li>
<li>C++20 协程</li>
<li>四种 cast
<ul>
<li>static_cast</li>
<li>const_cast</li>
<li>reinterpret_cast</li>
<li>dynamic_cast</li>
</ul>
</li>
<li>异常
<ul>
<li>构造函数抛异常</li>
<li>析构函数抛异常</li>
<li>new 抛异常</li>
</ul>
</li>
<li>智能指针
<ul>
<li>unique_ptr
<ul>
<li>内部: 对象指针</li>
</ul>
</li>
<li>shared_ptr &amp; weak_ptr
<ul>
<li>内部: 对象指针, &amp;use_count, &amp;weak_count, (可选)Mutex</li>
<li>多个共享指针持有同一个控制块</li>
<li>make_shared 创建智能指针</li>
<li>: public shared_from_this
<ul>
<li>内部: 一个 weak_ptr(this)</li>
</ul>
</li>
</ul>
</li>
<li>auto_ptr</li>
<li>实现
<ul>
<li>原子变量</li>
<li>引用计数</li>
</ul>
</li>
</ul>
</li>
<li>并发
<ul>
<li>原子操作
<ul>
<li>i++ 不是原子</li>
</ul>
</li>
<li>volatile
<ul>
<li>标记变量可能被未知的因素更改</li>
<li>避免激进的优化 每次都去读内存</li>
</ul>
</li>
</ul>
</li>
<li>malloc</li>
<li>SAFINE:</li>
<li>CRTP: <strong>C</strong>uriously <strong>R</strong>ecurring <strong>T</strong>emplate <strong>P</strong>attern
<ul>
<li>A 继承 SomeTemplate&lt;A&gt;</li>
</ul>
</li>
</ul>
<h3 id="golang"><a class="header-anchor-1" href="#golang">#</a>Golang</h3>
<ul>
<li>GMP 模型
<ul>
<li>G 协程</li>
<li>M OS 线程</li>
<li>P CPU 核</li>
<li>调度: M:N 有栈 抢占式</li>
</ul>
</li>
<li>避免共享内存 使用通信</li>
<li>defer 语法</li>
</ul>
<h3 id="javascript"><a class="header-anchor-1" href="#javascript">#</a>JavaScript</h3>
<h3 id="rust-❓"><a class="header-anchor-1" href="#rust-❓">#</a>Rust ❓</h3>
<ul>
<li>OwnerShip</li>
<li>Lifetime</li>
<li>泛型</li>
<li>trait</li>
<li>Tokio 异步
<ul>
<li>异步任务</li>
</ul>
</li>
<li>比 c/c++的优势
<ul>
<li>内存安全</li>
</ul>
</li>
<li>Unsafe
<ul>
<li>有时候安全更重要</li>
</ul>
</li>
</ul>
<h2 id="linux"><a class="header-anchor-1" href="#linux">#</a>Linux</h2>
<ul>
<li>文件
<ul>
<li>一切皆文件</li>
<li>类型
<ul>
<li>Regular</li>
<li>Directory</li>
<li>Link</li>
<li>Char Dev</li>
<li>Block Dev</li>
<li>Socket</li>
<li>Pipe</li>
</ul>
</li>
<li>inode
<ul>
<li>内容
<ul>
<li>大小</li>
<li>权限</li>
<li>所有者</li>
<li>三个时间</li>
<li>链接数</li>
</ul>
</li>
</ul>
</li>
<li>打开文件: path-&gt;inode-&gt;block</li>
</ul>
</li>
<li>锁
<ul>
<li>自旋锁 spinlock
<ul>
<li>-饥饿</li>
</ul>
</li>
<li>Rwlock</li>
<li>seqlock</li>
<li>RCU</li>
<li>futex ❓</li>
</ul>
</li>
<li>ELF
<ul>
<li>结构
<ul>
<li>ELF 头</li>
<li>Program HT 程序头</li>
<li>Section HT 节数组</li>
</ul>
</li>
<li>
<h2 id="静态链接"><a class="header-anchor-1" href="#静态链接">#</a>静态链接</h2>
</li>
<li>动态链接
<ul>
<li>链接
<ul>
<li>加载 <span class="exturl" data-url="aHR0cDovL2xpYmMuc28=">libc.so<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
<li>装载
<ul>
<li>dl{open,sym,close}()</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>PIE vs PIC</li>
<li>IO 多路复用
<ul>
<li>select</li>
<li>poll</li>
<li>epoll</li>
</ul>
</li>
<li>零拷贝
<ul>
<li>内核态 only 减少切换次数: sendfile, splice</li>
<li>利用 DMA</li>
<li>COW</li>
<li>用户态 IO: SPDK, DPDK</li>
</ul>
</li>
<li>Coredump</li>
<li>链接与库
<ul>
<li>静态链接</li>
<li>动态链接</li>
<li>装载</li>
</ul>
</li>
<li>运维命令
<ul>
<li>负载
<ul>
<li>uptime</li>
<li>vmstat</li>
<li>top</li>
</ul>
</li>
<li>网络
<ul>
<li>netstat</li>
<li>ss</li>
</ul>
</li>
<li>内存
<ul>
<li>sar</li>
</ul>
</li>
</ul>
</li>
<li>缓存 ❓
<ul>
<li>kswapd</li>
<li>硬盘 Page Cache</li>
<li>File Cache</li>
</ul>
</li>
<li>I/O 模型
<ul>
<li>Reactor 对 IO 事件反应
<ul>
<li>单线程</li>
<li>多线程</li>
</ul>
</li>
<li>Proactor</li>
</ul>
</li>
<li>UDS vs TCP</li>
<li>connect() 系统调用实现</li>
<li>上下文切换
<ul>
<li>X86 Gate</li>
</ul>
</li>
<li>硬件中断
<ul>
<li>顶半部 底半部</li>
<li>软件中断
<ul>
<li>softirq</li>
<li>tasklet</li>
<li>workqueue</li>
</ul>
</li>
</ul>
</li>
<li>CPU 调度
<ul>
<li>时机
<ul>
<li>时钟中断 时间片用完</li>
<li>系统调用</li>
</ul>
</li>
</ul>
</li>
<li>tcpdump
<ul>
<li>eBPF
<ul>
<li>嵌入内核的虚拟机</li>
<li>Hook 内核 API</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="mysql-❓"><a class="header-anchor-1" href="#mysql-❓">#</a>MySQL ❓</h2>
<ul>
<li>SQL 基本
<ul>
<li>语句</li>
<li>SQL 注入
<ul>
<li>PreparedStatement</li>
<li>WAF 过滤</li>
</ul>
</li>
</ul>
</li>
<li>数据类型</li>
<li>范式 ❓
<ul>
<li>第一范式 列不可分</li>
<li>第二范式 非主属性完全函数依赖于主键</li>
<li>第三范式 非主属性既不部分依赖于主键也不传递依赖于主键</li>
<li>BC 范式 不允许主键的一部分被另一部分或其它部分决定</li>
</ul>
</li>
<li>引擎
<ul>
<li>MyISAM
<ul>
<li>+插入, 查询性能</li>
<li>-只有表锁</li>
<li>-不支持外键</li>
<li>-不支持事务</li>
<li>适合非事务型负载 OLAP?</li>
</ul>
</li>
<li>InnoDB
<ul>
<li>+行锁</li>
<li>+聚簇索引</li>
<li>+支持外键</li>
<li>+支持事务</li>
</ul>
</li>
<li>底层存储
<ul>
<li>MyISAM
<ul>
<li>数据.myd 和索引.myi 分开存储</li>
<li>数据按插入顺序存储</li>
<li>索引 B+树叶子节点存数据行号 -&gt; 没有聚簇索引</li>
</ul>
</li>
<li>InnoDB
<ul>
<li>数据和索引保存在一起</li>
<li>主索引 B+树叶子节点存数据本身 -&gt; 聚簇索引</li>
<li>需要一个主 key 没有会自己创建</li>
</ul>
</li>
</ul>
</li>
<li>区别</li>
</ul>
</li>
<li>索引 ❓❓
<ul>
<li>优缺点
<ul>
<li>+加快速度</li>
<li>-空间开销</li>
<li>-维护索引开销</li>
</ul>
</li>
<li>索引类型
<ul>
<li>hash 索引
<ul>
<li>-范围查询</li>
<li>-模糊查询</li>
<li>-联合索引 最左匹配</li>
</ul>
</li>
<li>Btree 索引</li>
<li>Fulltext 索引
<ul>
<li>+查询文本中的关键字</li>
<li>模糊匹配
<ul>
<li>like ‘%abc%’ 场景</li>
</ul>
</li>
</ul>
</li>
<li>Rtree 索引
<ul>
<li>+地理数据范围查询</li>
</ul>
</li>
</ul>
</li>
<li>聚簇索引
<ul>
<li>聚簇索引
<ul>
<li>数据和索引放在一起存储 索引的叶子节点保存数据</li>
<li>相对的 其他索引叫做二级索引 次级索引</li>
<li>举例 InnoDB</li>
</ul>
</li>
<li>非聚簇索引
<ul>
<li>数据和索引分开存储 索引的叶子节点保存数据行号</li>
<li>举例 MyISAM</li>
</ul>
</li>
</ul>
</li>
<li>覆盖索引
<ul>
<li>查询结果都包含在索引中</li>
<li>不需要回表</li>
</ul>
</li>
<li>最左匹配原则</li>
<li>索引失效的场景
<ul>
<li>like ‘%abc’ ‘%abc%’</li>
<li>使用了表达式/函数/UDF</li>
<li>包含隐式类型转换</li>
<li>非前缀匹配</li>
<li>OR 单边索引</li>
</ul>
</li>
<li>索引使用原则
<ul>
<li>经常查询的 where 条件</li>
<li>长串索引需要限定前缀长度 看区分度</li>
</ul>
</li>
</ul>
</li>
<li>优化
<ul>
<li>查询慢
<ul>
<li>缺少索引</li>
</ul>
</li>
<li>插入慢
<ul>
<li>索引太多</li>
</ul>
</li>
<li>show_query_log 定位慢查询</li>
<li>explain
<ul>
<li>“Using index” = 使用了覆盖索引</li>
<li>“type: ALL” = 全表扫描</li>
<li>“key: xxxx” = 使用了 xxxx 索引</li>
</ul>
</li>
<li>optimize table 碎片整理</li>
</ul>
</li>
<li>事务 ✅
<ul>
<li>概念: BEGIN 和 COMMIT 包裹起来的一组 SQL 语句</li>
<li>ACID ✅
<ul>
<li>原子性: 事务要么全部执行 要么全部不执行</li>
<li>一致性: 事务执行前后 数据库的完整性约束没有被破坏
<ul>
<li>例如 A 转账给 B 两个账户总和不变</li>
</ul>
</li>
<li>隔离性: 事务之间互不干扰</li>
<li>持久性: 事务提交后 数据库状态不会丢失 即使数据库崩溃</li>
</ul>
</li>
<li>事务隔离级别
<ul>
<li>RU 读未提交: 一个事务可以读取另一个事务未提交的数据
<ul>
<li>-脏读</li>
</ul>
</li>
<li>RC 读已提交: 一个事务只能读取另一个事务已提交的数据
<ul>
<li>对应方案: 行锁</li>
<li>-不可重复读: 在同一个事务中，多次读取同一数据返回的结果有所不同</li>
</ul>
</li>
<li>RR 可重复读: 一个事务在执行期间看到的数据是一致的
<ul>
<li>对应方案: MVCC 机制
<ul>
<li>事务开始创建一个 Read View</li>
<li>递增的事务 id 作为版本号</li>
</ul>
</li>
<li>-幻读: 一个事务的写操作会导致另一个事务的查询结果不一致
<ul>
<li>e.g. 并发预订座位</li>
<li>解决 1: 物化冲突: 改 SQL 用 FOR UPDATE 显式锁定</li>
<li>解决 2: 使用序列化隔离级别</li>
<li>解决 3: 使用范围锁，例如 next-key lock</li>
</ul>
</li>
<li>-Write Skew: 更新不同数据破坏了一致性
<ul>
<li>e.g. 至少有一个医生值班</li>
<li>解决: 应用侧控制</li>
</ul>
</li>
<li>-Lost Update: 两个事务同时更新同一行
<ul>
<li>e.g. 并发计数器+1</li>
</ul>
</li>
</ul>
</li>
<li>SI 快照隔离</li>
<li>S 序列化 (完美)
<ul>
<li>-性能很差</li>
</ul>
</li>
</ul>
</li>
<li>MySQL 如何保证 ACID
<ul>
<li>保证原子性 A
<ul>
<li>Undo log</li>
</ul>
</li>
<li>保证隔离性 I
<ul>
<li>锁 + MVCC 机制</li>
<li>锁
<ul>
<li>记录锁(行锁) 锁定行 (3)</li>
<li>间隙锁 锁定一个区间 (3,5)</li>
<li>临界锁 (3,5]</li>
<li>插入意向锁</li>
</ul>
</li>
</ul>
</li>
<li>保证持久性 D
<ul>
<li>WAL 先写日志</li>
<li>Redo log (innodb)
<ul>
<li>用于防止 Buffer Pool 因为异步落盘 数据丢失</li>
<li>两个文件循环写 为了性能</li>
<li>格式
<ul>
<li>数据页位置+修改内容</li>
</ul>
</li>
</ul>
</li>
<li>Binlog
<ul>
<li>Server 层日志</li>
<li>三种格式
<ul>
<li>STATEMENT SQL 语句</li>
<li>ROW 最终数据</li>
<li>MIXED</li>
</ul>
</li>
<li>保存开机后全量日志</li>
<li>用于备份恢复 主从同步</li>
</ul>
</li>
</ul>
</li>
<li>保证一致性 C
<ul>
<li>前三个加起来</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>锁 ❓
<ul>
<li>全局锁</li>
<li>表锁
<ul>
<li>MyISAM 默认</li>
</ul>
</li>
<li>行锁
<ul>
<li>MyISAM 没有</li>
<li>InnoDB 默认</li>
<li>可能导致死锁</li>
</ul>
</li>
<li>页面锁</li>
<li>乐观锁 &amp; 悲观锁
<ul>
<li>乐观锁: 先更新再检查是否有其他事务修改
<ul>
<li>举例 共享文档 Git</li>
</ul>
</li>
<li>悲观锁: 先加锁再更新</li>
</ul>
</li>
</ul>
</li>
<li>MVCC 多版本并发控制
<ul>
<li>提高并发性能</li>
<li>当前读 读最新版本</li>
<li>快照读</li>
</ul>
</li>
<li>主从同步
<ul>
<li>目的 实现读写分离</li>
<li>同步模式
<ul>
<li>异步复制 (默认)</li>
<li>全同步复制</li>
<li>半同步复制</li>
</ul>
</li>
<li>配置
<ul>
<li>主库 cnf 设置 server-id log-bin(&gt;=8 默认开启)</li>
<li>创建同步账户</li>
<li>SHOW MASTER STATUS;</li>
<li>从库执行 SQL
<ul>
<li>START SLAVE;</li>
<li>SHOW SLAVE STATUS \G;</li>
<li>STOP SLAVE SQL_THREAD;</li>
</ul>
</li>
<li>从库升级成主库
<ul>
<li>RESET MASTER;</li>
<li>CHANGE MASTER TO</li>
<li>START SLAVE;</li>
</ul>
</li>
</ul>
</li>
<li>主库在事务提交时 同步 binlog 到从库</li>
<li>从库保存到 relay log 重放
<ul>
<li>从库重放是 SQL Thread 单线程</li>
</ul>
</li>
<li>主从延迟
<ul>
<li>避免大事务</li>
<li>从库自身读压力太大 -&gt; 增加从库数量分散压力</li>
<li>设置 slave_parallel_workers 并行复制线程数 slave-parallel-type 并行复制策略</li>
<li>semi-sync 半同步复制</li>
</ul>
</li>
</ul>
</li>
<li>分库分表
<ul>
<li>单表行数超 500 万行或者单表容量超过 2GB</li>
<li>垂直分库 按业务类型</li>
<li>垂直分表 按字段</li>
<li>水平拆分
<ul>
<li>ID 取模</li>
</ul>
</li>
<li>MyCat
<ul>
<li>MySQL Stub</li>
</ul>
</li>
<li>ShardingSphere
<ul>
<li>JDBC Stub</li>
</ul>
</li>
<li>分布式数据库
<ul>
<li>TiDB (兼容 mysql, HTAP)</li>
<li>Google Spanner</li>
<li>CockroachDB (兼容 pg, OLTP)</li>
<li>YugabyteDB (兼容 pg)</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="redis-✅"><a class="header-anchor-1" href="#redis-✅">#</a>Redis ✅</h2>
<ul>
<li>特点
<ul>
<li>性能</li>
<li>功能</li>
</ul>
</li>
<li>单线程</li>
<li>数据类型
<ul>
<li>string</li>
<li>list</li>
<li>hash</li>
<li>set</li>
<li>zset</li>
</ul>
</li>
<li>底层存储
<ul>
<li>int</li>
<li>sds</li>
<li>quicklist</li>
<li>压缩列表/listpack</li>
<li>skiplist
<ul>
<li>SkipList vs B+tree
<ul>
<li>实现简单</li>
<li>占用内存少</li>
<li>插入删除性能更好，没有旋转平衡的开销</li>
</ul>
</li>
</ul>
</li>
<li>hashtable
<ul>
<li>MurmurHash2</li>
</ul>
</li>
</ul>
</li>
<li>持久化
<ul>
<li>RDB
<ul>
<li>压缩</li>
</ul>
</li>
<li>AOF 增量日志
<ul>
<li>会定期 rewrite</li>
</ul>
</li>
<li>混合</li>
</ul>
</li>
<li>Pub/Sub 机制</li>
<li>Key 过期机制
<ul>
<li>惰性删除</li>
<li>定期删除</li>
</ul>
</li>
<li>内存淘汰
<ul>
<li>noeviction</li>
<li>volatile-random</li>
<li>volatile-ttl</li>
<li>volatile-lru 默认</li>
<li>volatile-lfu</li>
<li>allkeys-random</li>
<li>allkeys-lru</li>
<li>allkeys-lfu</li>
<li>LFU 更好, LRU 容易受缓存污染影响</li>
</ul>
</li>
<li>实现事务
<ul>
<li>Redis 事务</li>
<li>Lua 脚本</li>
</ul>
</li>
<li>发布订阅</li>
<li>Redis 集群
<ul>
<li>主从
<ul>
<li>主库读写, 从库只读</li>
<li>同步机制
<ul>
<li>老版本 low 全量复制</li>
<li>新版本 增量复制</li>
<li>基于长连接的命令传播</li>
</ul>
</li>
</ul>
</li>
<li>主从+哨兵 Sentinel
<ul>
<li>哨兵: 一个集群 负责维护 Redis 集群的可用性
<ul>
<li>监控集群是否正常 INFO 探活</li>
<li>类似 Raft 协议</li>
<li>自动故障转移</li>
<li>提供配置</li>
<li>通知客户端</li>
</ul>
</li>
<li>当&gt;=quorum 个哨兵认为主库下线 则开始换主
<ul>
<li>选择数据最完整的从库作为主库</li>
</ul>
</li>
<li>哨兵脑裂问题
<ul>
<li>主节点虚假故障 丢失数据</li>
<li>可以用 min-slaves 缓解 但是不能彻底解决</li>
<li>换用强一致性的 Zookeeper</li>
</ul>
</li>
</ul>
</li>
<li>Cluster 模式
<ul>
<li>去中心化 每个节点存储不同的分片
<ul>
<li>没有使用一致性 hash 而是使用 crc16(key)/16384 因为开销较大</li>
<li>存在迁出导入开销</li>
</ul>
</li>
<li>可以组合主从模式</li>
<li>GOSSIP 协议同步路由表和节点状态等信息</li>
<li>MOVED 重定向用户请求</li>
<li>ASK</li>
</ul>
</li>
</ul>
</li>
<li>使用问题
<ul>
<li>大 key</li>
<li>缓存击穿 热点 key 过期
<ul>
<li>设置热点 key 永不过期</li>
<li>热点 key 加后缀散列</li>
</ul>
</li>
<li>缓存雪崩 大量 key 同时失效
<ul>
<li>随机过期时间或永不过期</li>
<li>热点数据分散</li>
</ul>
</li>
<li>缓存穿透 热点 key 不存在
<ul>
<li>设置 key-null</li>
</ul>
</li>
</ul>
</li>
<li>缓存一致性 (分布式一致性问题)
<ul>
<li>缓存策略
<ul>
<li>Cache Aside: 读者读 db 时顺便设置缓存
<ul>
<li>-需要缓存设置过期时间</li>
<li>-过期时间内可能是旧的值</li>
</ul>
</li>
<li>Read Through:</li>
<li>Write Through: 只写 db, 异步推送到缓存</li>
<li>Write Back: 只更新缓存, 异步写入 db</li>
</ul>
</li>
<li>同步机制
<ul>
<li>更新派
<ul>
<li>🔃 缓存, 🔃db
<ul>
<li>不好 缓存可能被另一个进程刷新为旧值</li>
</ul>
</li>
<li>🔃db, 🔃 缓存
<ul>
<li>不好 更新缓存需要计算 浪费系统资源</li>
</ul>
</li>
</ul>
</li>
<li>删除派
<ul>
<li>🆑️ 缓存, 🔃db
<ul>
<li>不好 缓存可能被另一个进程刷新为旧值</li>
<li>延迟双删可以: 🆑️ 缓存, 🔃db, 延迟, 🆑️ 缓存</li>
</ul>
</li>
<li>🔃db, 🆑️ 缓存
<ul>
<li>好 第二步需要重试保证</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>通用技巧
<ul>
<li>过期时间</li>
<li>终极方案 分布式锁</li>
<li>失败重试
<ul>
<li>单独线程</li>
<li>MQ</li>
</ul>
</li>
<li>binlog 订阅</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="nginx-openresty"><a class="header-anchor-1" href="#nginx-openresty">#</a>Nginx &amp; OpenResty</h2>
<ul>
<li>功能
<ul>
<li>负载均衡
<ul>
<li>轮询</li>
<li>加权轮询</li>
<li>随机</li>
<li>源地址(用户 IP)哈希</li>
<li>最小连接数</li>
<li>插件
<ul>
<li>fair (最快的)</li>
<li>URL(访问目标)哈希</li>
</ul>
</li>
</ul>
</li>
<li>反向代理</li>
</ul>
</li>
<li>实现
<ul>
<li>主从 Reactor 模式</li>
</ul>
</li>
</ul>
<h2 id="前端技术"><a class="header-anchor-1" href="#前端技术">#</a>前端技术</h2>
<ul>
<li>Session &amp; Cookie &amp; Token
<ul>
<li>Session 服务端用于保存每个连接用户状态的对象</li>
<li>Cookie
<ul>
<li>结构 name, domain, path, secure</li>
<li>生命周期
<ul>
<li>没设置过期时间 =&gt; 会话 Cookie 浏览器关闭即消失</li>
<li>设置过期时间 保存在硬盘上</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>LocalStorage
<ul>
<li>生命周期 不会过期</li>
<li>大小 一般 5M</li>
</ul>
</li>
<li>SessionStorage
<ul>
<li>生命周期 浏览器关闭即消失</li>
</ul>
</li>
<li>浏览器加载资源的过程</li>
<li>浏览器输入 URL 之后的过程</li>
</ul>
<h2 id="后端技术"><a class="header-anchor-1" href="#后端技术">#</a>后端技术</h2>
<ul>
<li>缓存 -&gt; Redis</li>
<li>Spring
<ul>
<li>AOP</li>
<li>IOC</li>
<li>循环依赖
<ul>
<li>Bean 互相依赖</li>
<li>三级缓存
<ul>
<li>一级缓存为单例池 singletonObjects</li>
<li>二级缓存为早期曝光对象 earlySingletonObjects</li>
<li>三级缓存为早期曝光对象工厂 singletonFactories</li>
</ul>
</li>
</ul>
</li>
<li>Filter ❓</li>
</ul>
</li>
<li>MyBatis</li>
<li>高并发下库存超卖问题 ❓
<ul>
<li>设置字段为无符号 依赖异常</li>
<li>使用悲观锁</li>
<li>Redis 分布式锁
<ul>
<li>事务 lua 脚本</li>
<li>集群同步问题 RedLock</li>
</ul>
</li>
</ul>
</li>
<li>限流
<ul>
<li>固定窗口/滑动窗口</li>
<li>QPS 限流
<ul>
<li>+简单</li>
<li>+可以改周期增大突发流量</li>
<li>-周期边界不平滑</li>
<li>-放过请求不均匀</li>
</ul>
</li>
<li>令牌桶
<ul>
<li>+流量均匀</li>
<li>-第一个周期不平滑</li>
</ul>
</li>
<li>漏桶
<ul>
<li>-出水速度恒定 瞬时大流量会被丢弃</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="中间件"><a class="header-anchor-1" href="#中间件">#</a>中间件</h2>
<ul>
<li>缓存</li>
<li>消息队列</li>
<li>定时任务</li>
<li>日志采集</li>
</ul>
<h2 id="消息队列"><a class="header-anchor-1" href="#消息队列">#</a>消息队列</h2>
<ul>
<li>作用 异步削峰解耦 日志 消息系统</li>
<li>监控</li>
<li>怎么保证消息不丢失
<ul>
<li>消费者反馈消息收到</li>
<li>数据持久化</li>
</ul>
</li>
<li>消息积压 ❓
<ul>
<li>保存到硬盘上</li>
</ul>
</li>
<li>消息队列模型
<ul>
<li>队列模型
<ul>
<li>每个消费者一个队列</li>
<li>-不适合广播场景 (需要复制)</li>
</ul>
</li>
<li>发布-订阅模型
<ul>
<li>消息有主题 消费者订阅主题 (Topic)</li>
<li>+支持广播场景</li>
<li>示例 Kafka RocketMQ</li>
</ul>
</li>
</ul>
</li>
<li>RabbitMQ ❓</li>
<li>Kafka
<ul>
<li>流式数据处理平台 by Linkedin</li>
<li>适合离线和在线消息消费</li>
<li>组件
<ul>
<li>Broker 中介人
<ul>
<li>Leader 提供服务 与客户端交互</li>
<li>Follower 不提供服务 只与 Leader 同步</li>
</ul>
</li>
<li>ZooKeeper 元数据管理</li>
</ul>
</li>
<li>功能
<ul>
<li>消息队列</li>
<li>消息持久化</li>
<li>消息流式处理</li>
</ul>
</li>
<li>消息分区 Partition &amp; 消费者组 Consumer Group
<ul>
<li>Topic-Partition 一对多关系 目的是提高并行度</li>
<li>相对地 Consumer Group 对等的消费者集群 消费一整个 topic</li>
<li>Partition 会平均分布在所有 Broker 上</li>
<li>底层实现: append-only log file</li>
</ul>
</li>
<li>性能高
<ul>
<li>Page Cache 缓存</li>
<li>磁盘顺序写</li>
<li>零拷贝</li>
<li>Pull 拉模式</li>
</ul>
</li>
<li>消费模式
<ul>
<li>Push 模式
<ul>
<li>-容易挤爆消费者</li>
</ul>
</li>
<li>Pull 模式
<ul>
<li>-容易导致空轮询
<ul>
<li>可以设置成阻塞收取</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>确认机制
<ul>
<li>0 无确认 完全异步</li>
<li>1 leader 确认即可 (默认)</li>
<li>-1 leader 和 follower 都确认</li>
</ul>
</li>
<li>
<h2 id="主从同步-replica"><a class="header-anchor-1" href="#主从同步-replica">#</a>主从同步 replica</h2>
</li>
</ul>
</li>
</ul>
<h2 id="分布式系统"><a class="header-anchor-1" href="#分布式系统">#</a>分布式系统</h2>
<ul>
<li>CAP 理论 ✅
<ul>
<li>C 强一致性</li>
<li>A 可用性</li>
<li>P 分区可用性</li>
<li>C+A:</li>
<li>C+P: Raft</li>
</ul>
</li>
<li>BASE 理论 ✅
<ul>
<li>BA 基本可用</li>
<li>S 软状态</li>
<li>E 最终一直性</li>
</ul>
</li>
<li>强一致性
<ul>
<li>线性一致性 集群看起来和单个节点一样</li>
<li>顺序一致性 弱一点</li>
</ul>
</li>
<li>分布式共识算法 CP
<ul>
<li>Paxos ❓
<ul>
<li>三种身份 Proposers Acceptors Learners</li>
<li>-解决不了拜占庭问题</li>
</ul>
</li>
<li>Raft
<ul>
<li>关键点: 心跳同步 log, 新 log 覆盖旧 log, 选主过半数机制</li>
<li>-解决不了拜占庭问题</li>
<li>Log 结构
<ul>
<li>Term</li>
<li>Index</li>
<li>Command</li>
</ul>
</li>
<li>AppendEntries
<ul>
<li>Leader -&gt; Follower</li>
<li>包含 log</li>
<li>用于同步 log</li>
</ul>
</li>
<li>RequestVote
<ul>
<li>Candidate -&gt; Follower</li>
<li>用于选主</li>
</ul>
</li>
</ul>
</li>
<li>ZAB
<ul>
<li>过半数 ACK 提交</li>
</ul>
</li>
</ul>
</li>
<li>分布式锁 ❓
<ul>
<li>Redis setnx
<ul>
<li>需设置过期时间 防止死锁</li>
<li>需设置独特 value 防止被别人释放</li>
<li>锁提前释放 后台线程去续期锁 可以用 Redission</li>
<li>Redis 集群同步可能丢锁 使用 Redlock</li>
</ul>
</li>
<li>ZooKeeper 临时节点
<ul>
<li>写强一致性 读不是(顺序一致性)
<ul>
<li>读之前 sync()一下就是强一致</li>
</ul>
</li>
<li>+连接结束会自动释放</li>
<li>-如果进程卡住 心跳不及时 会导致提前释放</li>
</ul>
</li>
<li>Google Chubby (Paxos)</li>
</ul>
</li>
<li>一致性哈希
<ul>
<li>防止节点扩容导致未知变化</li>
<li>Hash 环</li>
<li>虚拟节点</li>
</ul>
</li>
<li>负载均衡算法
<ul>
<li>RR</li>
<li>Weight RR</li>
<li>Random</li>
<li>Weight Random</li>
<li>Hash</li>
</ul>
</li>
<li>分布式 ID
<ul>
<li>雪花算法</li>
</ul>
</li>
<li>分布式事务
<ul>
<li>两阶段提交 2PC ❓❓
<ul>
<li>+原理简单，实现方便</li>
<li>-同步阻塞 即所偶参与的事务逻辑均处于阻塞状态。</li>
<li>-单点故障 协调者存在单点故障问题，如果协调者出现故障，参与者将一直处于锁定状态。</li>
<li>-脑裂问题 在阶段二中，如果只有部分参与者接受并执行了 Commit 请求，会导致节点数据不一致。</li>
</ul>
</li>
<li>三阶段提交 3PC ❓❓
<ul>
<li>+降低了阻塞范围 在等待超时后，协调者或参与者会中断事务。</li>
<li>+避免单点故障 阶段 3 中协调者出现问题时，参与者会继续提交事务。</li>
<li>-脑裂问题</li>
</ul>
</li>
<li>TCC</li>
</ul>
</li>
<li>系统
<ul>
<li>ZooKeeper ❓
<ul>
<li>分布式注册中心 按照目录层级划分 可以监听节点</li>
<li>ZAB 算法</li>
<li>最好奇数个节点</li>
</ul>
</li>
<li>Etcd
<ul>
<li>强一致性</li>
</ul>
</li>
<li>Consul</li>
</ul>
</li>
</ul>
<h2 id="大数据"><a class="header-anchor-1" href="#大数据">#</a>大数据</h2>
<ul>
<li>
<p>文件系统</p>
<ul>
<li>GFS ❓</li>
<li>HDFS ❓</li>
<li>TaobaoFS ❓</li>
</ul>
</li>
<li>
<p>NoSQL 数据库</p>
<ul>
<li>Google BigTable
<ul>
<li>分布式存储系统</li>
<li>三个维度: 表名, 行键, 列键</li>
<li>适合海量数据存储</li>
<li>适合读多写少</li>
</ul>
</li>
<li>HBase
<ul>
<li>OLTP 数据库 列式存储模型</li>
<li>存储 PB 级别的海量数据 支持最多几万个稀疏列 支持快速随机查询</li>
<li>追求数据一致性，CP 系统</li>
<li>HBase Shell
<ul>
<li>类似 redis-cli</li>
</ul>
</li>
<li>底层是 kv 存储, 相对于基于 RocksDB 的分布式存储系统，成本更高
<ul>
<li>结构: RegionServer, HMaster, ZooKeeper</li>
<li>RegionServer: 存储数据, 包含 Hlog 和若干个 HRegion</li>
<li>HRegion
<ul>
<li>存储一段连续的 Tuples, 包含多个 Store</li>
<li>基于 range 策略分散数据 支持分裂</li>
</ul>
</li>
<li>Store(类似 Column Family): 包含一个 MemStore(类似 memtable) 和多个 StoreFile(类似 sstfile)</li>
<li>HFile</li>
</ul>
</li>
<li>热 Key 问题
<ul>
<li>加盐</li>
<li>哈希 类似 redis crc16</li>
<li>反转 类似手机号</li>
</ul>
</li>
</ul>
</li>
<li>Cassandra ❓</li>
</ul>
</li>
<li>
<p>数据仓库 &amp; 大数据分析</p>
<ul>
<li>Google Spanner ❓</li>
<li>Google F1 ❓</li>
<li>Hive
<ul>
<li>OLAP 数据仓库 大数据查询、处理和计算引擎</li>
<li>使用 HiveQL 进行查询</li>
<li>底层支持多种执行引擎 MapReduce Tez Spark</li>
</ul>
</li>
<li>Spark
<ul>
<li>通用大数据处理引擎, 支持批处理、交互式查询、流处理、机器学习</li>
<li>RDD</li>
</ul>
</li>
</ul>
</li>
<li>
<p>OLAP</p>
</li>
<li>
<p>Kafka -&gt; 消息队列</p>
</li>
<li>
<p>Lucene</p>
</li>
<li>
<p>海量数据处理问题</p>
<ul>
<li>离线 Top n</li>
<li>在线 Top n</li>
<li>通用技巧
<ul>
<li>数据结构: 位图 平衡树 索引 Trie BloomFilter</li>
<li>分治 合并</li>
</ul>
</li>
</ul>
</li>
<li>
<p>MapReduce</p>
</li>
</ul>
<h2 id="微服务"><a class="header-anchor-1" href="#微服务">#</a>微服务</h2>
<ul>
<li>RPC
<ul>
<li>原理</li>
<li>框架</li>
</ul>
</li>
<li>Nacos 注册中心</li>
<li>Dubbo 微服务框架</li>
</ul>
<h2 id="存储"><a class="header-anchor-1" href="#存储">#</a>存储</h2>
<ul>
<li>块存储
<ul>
<li>Ceph</li>
</ul>
</li>
<li>文件存储
<ul>
<li>Ceph</li>
<li>HDFS</li>
</ul>
</li>
<li>对象存储
<ul>
<li>Ceph</li>
<li>MinIO</li>
</ul>
</li>
<li>KV 存储
<ul>
<li>Redis</li>
<li>LevelDB</li>
<li>RocksDB</li>
</ul>
</li>
<li>SSD
<ul>
<li>优点
<ul>
<li>读写速度快</li>
<li>无噪音</li>
<li>无碎片</li>
</ul>
</li>
<li>缺点
<ul>
<li>寿命短</li>
<li>价格高</li>
<li>容量小</li>
</ul>
</li>
</ul>
</li>
<li>Log-Structured Merge Tree
<ul>
<li>vs B+Tree</li>
<li>读放大: 读取的数据量和用户写入的数据量之间的比值</li>
<li>写放大: 用户写入的数据量和实际写入磁盘的数据量之间的比值</li>
<li>LevelDB</li>
<li>RocksDB</li>
</ul>
</li>
<li>快照机制
<ul>
<li>COW
<ul>
<li>-1 次写变 1 读 2 写 写放大 性能低</li>
</ul>
</li>
<li>ROW (Redirect On Write)
<ul>
<li>+不会有额外的写入</li>
<li>-有数据碎片</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="数据库内核"><a class="header-anchor-1" href="#数据库内核">#</a>数据库内核</h2>
<ul>
<li>LSM-Tree ❓</li>
<li>LevelDB ❓</li>
<li>RocksDB
<ul>
<li>WAL</li>
<li>MemTable
<ul>
<li>Immutable MemTable</li>
</ul>
</li>
<li>Flush</li>
<li>Compaction
<ul>
<li>Leveled Compaction
<ul>
<li>10 倍</li>
<li>+减少读放大</li>
<li>-写放大</li>
</ul>
</li>
<li>Universal Compaction
<ul>
<li>相当于前者只有一个 level</li>
</ul>
</li>
<li>FIFO Compaction
<ul>
<li>适合时间序列数据</li>
</ul>
</li>
<li>Tiered Compaction
<ul>
<li>+减少写放大</li>
<li>-空间放大</li>
</ul>
</li>
</ul>
</li>
<li>读路径
<ul>
<li>MemTable</li>
<li>Immutable MemTable</li>
<li>L0 全部 + BloomFilter</li>
<li>L1~Ln 二分查找 + BloomFilter</li>
</ul>
</li>
<li>写路径
<ul>
<li>WAL</li>
<li>MemTable</li>
</ul>
</li>
<li>BlockCache
<ul>
<li>保存 Data, Index, Filter</li>
</ul>
</li>
</ul>
</li>
<li>MySQL</li>
<li>Buffer Pool
<ul>
<li>文件系统缓存层</li>
</ul>
</li>
<li>执行模型
<ul>
<li>火山模型/迭代器模型</li>
<li>Batch 模型</li>
</ul>
</li>
</ul>
<h2 id="搜索"><a class="header-anchor-1" href="#搜索">#</a>搜索</h2>
<ul>
<li>粗排</li>
<li>精排</li>
<li>召回</li>
<li>算法</li>
</ul>
<h2 id="离散数学-密码学"><a class="header-anchor-1" href="#离散数学-密码学">#</a>离散数学 &amp; 密码学</h2>
<ul>
<li>格 理想</li>
<li>哈希算法
<ul>
<li>MD5 SHA1 SHA256</li>
<li>MurmurHash3 Fnv1a</li>
</ul>
</li>
<li>对称加密
<ul>
<li>DES 3DES AES</li>
</ul>
</li>
<li>非对称加密
<ul>
<li>RSA
<ul>
<li>-不支持前向保密</li>
<li>大质因数分解</li>
</ul>
</li>
<li>DSA
<ul>
<li>大数离散对数</li>
</ul>
</li>
</ul>
</li>
<li>密钥交换
<ul>
<li>Diffie-Hellman</li>
<li>EC Diffie-Hellman</li>
</ul>
</li>
</ul>
<h2 id="隐私计算"><a class="header-anchor-1" href="#隐私计算">#</a>隐私计算</h2>
<ul>
<li>方法
<ul>
<li>差分隐私 DP
<ul>
<li>将原始数据淹没在噪音中, 使得无法得到原始数据</li>
</ul>
</li>
<li>混淆电路 GC</li>
<li>密钥分享 SS</li>
<li>同态加密 HE
<ul>
<li>原理 先加密再运算</li>
<li>类型
<ul>
<li>半同态加密 (Partially HE, PHE) 加密后只支持加法或乘法运算</li>
<li>全同态加密 (Fully HE, FHE)</li>
</ul>
</li>
<li>方法
<ul>
<li>Pailier 算法</li>
<li>复合剩余类问题 DCRA</li>
</ul>
</li>
<li>应用场景</li>
<li>工具
<ul>
<li>Microsoft SEAL</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>应用场景
<ul>
<li>联合建模</li>
<li>联合统计</li>
<li>安全预测</li>
<li>隐匿查询</li>
<li>机构之间的联合计算</li>
</ul>
</li>
<li>安全两方计算 2PC
<ul>
<li>工具
<ul>
<li>Cheetah 猎豹 阿里安全</li>
</ul>
</li>
</ul>
</li>
<li>多方安全计算 MPC
<ul>
<li>把多个参与方的数据放在一起计算出特定的结果 同时保证每一方信息的细节不被泄露 典型 百万富翁问题</li>
</ul>
</li>
<li>硬件设备
<ul>
<li>多方安全计算 MPC</li>
<li>同态加密 HE</li>
<li>可信执行环境 TEE</li>
<li>可信密态计算 TECC</li>
</ul>
</li>
<li>可信执行环境 TEE
<ul>
<li>将处理器的一个区域与 CPU 的其余部分分开来使用基于硬件的安全计算模型
<ul>
<li>隔离</li>
<li>数据加密</li>
<li>完整性校验</li>
<li>远程认证</li>
</ul>
</li>
<li>+安全性</li>
<li>-侧信道攻击</li>
<li>实现
<ul>
<li>Intel SGX
<ul>
<li>LibOS</li>
<li>Grammy</li>
</ul>
</li>
<li>ARM TrustZone</li>
</ul>
</li>
<li>TEE OS
<ul>
<li>Occlum 蚂蚁</li>
</ul>
</li>
</ul>
</li>
<li>联邦学习 FL</li>
<li>隐私计算框架
<ul>
<li>TensorFlow Federated (TFF)</li>
<li>KubeTEE 蚂蚁</li>
<li>隐语 蚂蚁</li>
<li>PySyft OpenMined</li>
</ul>
</li>
</ul>
<h2 id="安全"><a class="header-anchor-1" href="#安全">#</a>安全</h2>
<ul>
<li>Web 漏洞
<ul>
<li>CSRF</li>
<li>XSS</li>
<li>SQL</li>
<li>WAF</li>
</ul>
</li>
<li>安全机制
<ul>
<li>SELinux</li>
<li>AppArmor</li>
<li>NX(Dep)</li>
<li>Seccomp 过滤系统调用</li>
<li>namespace
<ul>
<li>User</li>
<li>Net</li>
<li>PID</li>
<li>FS</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="云计算-虚拟化"><a class="header-anchor-1" href="#云计算-虚拟化">#</a>云计算 &amp; 虚拟化</h2>
<ul>
<li>云计算
<ul>
<li>IaaS</li>
<li>PaaS</li>
<li>FaaS</li>
<li>DBaaS</li>
</ul>
</li>
<li>QEMU</li>
<li>KVM</li>
<li>Hypervisor</li>
<li>体系结构</li>
<li>virtio
<ul>
<li>模拟 PCI 设备 麻烦</li>
<li>VRing</li>
<li>Kick</li>
</ul>
</li>
</ul>
<h2 id="容器"><a class="header-anchor-1" href="#容器">#</a>容器</h2>
<ul>
<li>Docker
<ul>
<li>底层
<ul>
<li>namespace</li>
<li>cgroups</li>
</ul>
</li>
<li>Containerd</li>
</ul>
</li>
<li>K8S
<ul>
<li>架构
<ul>
<li>kubelet</li>
<li>apiserver</li>
<li>etcd (raft) 配置信息和服务发现</li>
<li>controller</li>
<li>scheduler</li>
<li>runtime
<ul>
<li>containerd</li>
</ul>
</li>
<li>kube-proxy</li>
</ul>
</li>
<li>概念
<ul>
<li>Pod</li>
<li>Node</li>
<li>Container</li>
</ul>
</li>
<li>CRI</li>
<li>CNI</li>
<li>OCI</li>
</ul>
</li>
<li>Docker</li>
<li>Containerd</li>
<li>Kata
<ul>
<li>+资源管理</li>
<li>+隔离彻底</li>
<li>-比较重</li>
</ul>
</li>
<li>gVisor
<ul>
<li>+轻量级 开销更小</li>
<li>-不支持资源限制</li>
<li>-仍然是同一个内核</li>
<li>两种工作模式
<ul>
<li>ptrace + Seccomp
<ul>
<li>退出场景
<ul>
<li>执行 syscall</li>
<li>收到 signal</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="音视频"><a class="header-anchor-1" href="#音视频">#</a>音视频</h2>
<ul>
<li>数字图像滤波</li>
<li>图像特征</li>
<li>RGB YUV</li>
<li>视频编码</li>
<li>视频格式</li>
<li>视频帧</li>
<li></li>
</ul>
<h2 id="渲染引擎"><a class="header-anchor-1" href="#渲染引擎">#</a>渲染引擎</h2>
<ul>
<li>C++</li>
<li>Unity Unreal 等引擎经验</li>
<li>图形学 渲染 计算几何</li>
<li>动画</li>
<li>物理仿真</li>
</ul>
<h2 id="机器学习-深度学习"><a class="header-anchor-1" href="#机器学习-深度学习">#</a>机器学习 &amp; 深度学习</h2>
<ul>
<li>C++</li>
<li>CNN
<ul>
<li>卷积层</li>
</ul>
</li>
<li>RNN</li>
<li>LSTM</li>
<li>Transformer</li>
<li>移动端部署
<ul>
<li>TensorFlow Lite</li>
<li>NCNN</li>
<li>MNN</li>
<li>Paddle-Lite</li>
<li>技术点
<ul>
<li>big.LITTLE 调度</li>
<li>OpenCL</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>interview</category>
      </categories>
      <tags>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>近况</title>
    <url>/2024/04/12/job-directions/</url>
    <content><![CDATA[<h2 id="未来方向"><a class="header-anchor-1" href="#未来方向">#</a>未来方向</h2>
<p>未来需要确定一个方向去深入</p>
<h3 id="dpu-云计算网络"><a class="header-anchor-1" href="#dpu-云计算网络">#</a>DPU 云计算网络</h3>
<ul>
<li>虚拟化</li>
</ul>
<h3 id="弹性计算-ecs-管控-调度-计算巢"><a class="header-anchor-1" href="#弹性计算-ecs-管控-调度-计算巢">#</a>弹性计算 (ECS) 管控/调度/计算巢</h3>
<ul>
<li>Java / Golang</li>
<li>服务编排</li>
<li>大数据技术</li>
</ul>
<h3 id="中间件研发-消息队列"><a class="header-anchor-1" href="#中间件研发-消息队列">#</a>中间件研发 消息队列</h3>
<ul>
<li>Java / Golang</li>
</ul>
<h3 id="安全容器"><a class="header-anchor-1" href="#安全容器">#</a>安全容器</h3>
<p><img src="sec-container.png" alt="sec-container" /></p>
<h3 id="云存储"><a class="header-anchor-1" href="#云存储">#</a>云存储</h3>
<ul>
<li>块存储</li>
<li>文件存储</li>
<li>对象存储</li>
</ul>
<h3 id="数据库内核"><a class="header-anchor-1" href="#数据库内核">#</a>数据库内核</h3>
<ul>
<li>CMU15-445 数据库实现</li>
<li>CMU15-721 内存数据库</li>
</ul>
<h3 id="深度学习框架"><a class="header-anchor-1" href="#深度学习框架">#</a>深度学习框架</h3>
<ul>
<li>CUDA 编程</li>
<li>高性能计算</li>
<li>算子</li>
<li>编译原理</li>
</ul>
<h3 id="java-后端开发"><a class="header-anchor-1" href="#java-后端开发">#</a>Java 后端开发</h3>
<ul>
<li>6.824</li>
<li>Java</li>
<li>Spring 框架</li>
<li>JVM 深入</li>
</ul>
<h3 id="后端基础设施"><a class="header-anchor-1" href="#后端基础设施">#</a>后端基础设施</h3>
<ul>
<li>6.824</li>
<li>Java</li>
<li>Golang</li>
</ul>
<h3 id="大数据"><a class="header-anchor-1" href="#大数据">#</a>大数据</h3>
<ul>
<li>Hadoop</li>
<li>Spark</li>
<li>Flink</li>
<li>Kafka</li>
<li>ClickHouse</li>
</ul>
<h2 id="todo"><a class="header-anchor-1" href="#todo">#</a>TODO</h2>
<ul>
<li>迷你 OS 魔改 xv6 three easy pieces ✅</li>
<li>类似 QEMU 的 ISA 模拟器 ✅</li>
<li>迷你存储引擎 类似 LevelDB, RocksDB ✅</li>
<li>迷你 c 编译器 ✅</li>
<li>迷你 docker ✅</li>
<li>迷你 S3 对象存储</li>
<li>迷你消息队列</li>
<li>迷你 JVM</li>
<li>迷你 RPC 框架</li>
<li>迷你 pytorch</li>
</ul>
]]></content>
      <categories>
        <category>interview</category>
      </categories>
      <tags>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>2024开源OS训练营 - rCore实验记录</title>
    <url>/2024/05/01/learningos-2024-note/</url>
    <content><![CDATA[<h2 id="chapter-4-内存管理"><a class="header-anchor-1" href="#chapter-4-内存管理">#</a>Chapter 4 内存管理</h2>
<h3 id="内存布局"><a class="header-anchor-1" href="#内存布局">#</a>内存布局</h3>
<p>所谓 OS 内核无非就是一个裸机上跑的程序，首先要确定的就是程序本身的内存布局问题。</p>
<p>说到内存布局那就是 linker 的工作范围了，linker script 启动。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// @linker.ld</span><br><span class="line">OUTPUT_ARCH(riscv)</span><br><span class="line">ENTRY(_start)</span><br><span class="line">BASE_ADDRESS = 0x80200000; // 程序加载的起始地址</span><br><span class="line"></span><br><span class="line">SECTIONS</span><br><span class="line">&#123;</span><br><span class="line">    . = BASE_ADDRESS;</span><br><span class="line">    skernel = .;    // 定义标签 skernel -&gt; 0x80200000</span><br><span class="line"></span><br><span class="line">    stext = .;      // 定义标签 stext 代码段开始</span><br><span class="line">    .text : &#123;       // .text 段，把之前的几个段放这里</span><br><span class="line">        *(.text.entry)</span><br><span class="line">        . = ALIGN(4K);</span><br><span class="line">        strampoline = .;    // 定义标签 strampoline 跳板页</span><br><span class="line">        *(.text.trampoline);</span><br><span class="line">        . = ALIGN(4K);</span><br><span class="line">        *(.text .text.*)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    . = ALIGN(4K);</span><br><span class="line">    etext = .;      // 定义标签 etext 代码段结束</span><br><span class="line">    srodata = .;    // 定义标签 srodata 只读数据段开始</span><br><span class="line">    .rodata : &#123;</span><br><span class="line">        *(.rodata .rodata.*)</span><br><span class="line">        *(.srodata .srodata.*)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    . = ALIGN(4K);</span><br><span class="line">    erodata = .;    // 定义标签 erodata 只读数据段结束</span><br><span class="line">    sdata = .;      // 定义标签 sdata 数据段开始</span><br><span class="line">    .data : &#123;</span><br><span class="line">        *(.data .data.*)</span><br><span class="line">        *(.sdata .sdata.*)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    . = ALIGN(4K);</span><br><span class="line">    edata = .;      // 定义标签 edata 数据段结束</span><br><span class="line">    sbss_with_stack = .;    // 定义标签 sbss_with_stack 堆栈段开始</span><br><span class="line">    .bss : &#123;        // .bss 段</span><br><span class="line">        *(.bss.stack)</span><br><span class="line">        sbss = .;</span><br><span class="line">        *(.bss .bss.*)</span><br><span class="line">        *(.sbss .sbss.*)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    . = ALIGN(4K);</span><br><span class="line">    ebss = .;       // 定义标签 ebss 堆栈段结束</span><br><span class="line">    ekernel = .;    // 定义标签 ekernel 内核结束</span><br><span class="line"></span><br><span class="line">    /DISCARD/ : &#123;   // 丢弃段</span><br><span class="line">        *(.eh_frame)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>所以，rcore 的内存布局：</p>
<ul>
<li>skernel(0x80200000) - srodata: 代码段</li>
<li>srodata - erodata: 只读数据段</li>
<li>sdata - edata: 数据段</li>
<li>sbss_with_stack - sbss: 栈</li>
<li>sbss - ebss: bss 段</li>
<li>ekernel: 内核结束</li>
</ul>
<p>在 <code>entry.asm</code> 中定义了 <code>_start</code> 符号，这是程序的入口地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    .section .text.entry</span><br><span class="line">    .globl _start</span><br><span class="line">_start:</span><br><span class="line">    la sp, boot_stack_top</span><br><span class="line">    call rust_main  ; 调用 rust_main 函数</span><br><span class="line"></span><br><span class="line">    ; 下面定义一些全局变量</span><br><span class="line">    ; boot_stack_lower_bound 是堆栈的起始地址，大小为 16 个 Page = 64KB</span><br><span class="line">    ; boot_stack_top 是堆栈的结束地址</span><br><span class="line">    .section .bss.stack</span><br><span class="line">    .globl boot_stack_lower_bound</span><br><span class="line">boot_stack_lower_bound:</span><br><span class="line">    .space 4096 * 16</span><br><span class="line">    .globl boot_stack_top</span><br><span class="line">boot_stack_top:</span><br></pre></td></tr></table></figure>
<p>Rust 语言的入口是 rust_main 函数，这个函数在 <span class="exturl" data-url="aHR0cDovL21haW4ucnM=">main.rs<i class="fa fa-external-link-alt"></i></span> 中定义</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="meta">#[no_mangle]</span></span><br><span class="line"><span class="comment">/// the rust entry-point of os</span></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">fn</span> <span class="title function_">rust_main</span>() <span class="punctuation">-&gt;</span> ! &#123;</span><br><span class="line">    <span class="title function_ invoke__">clear_bss</span>();        <span class="comment">// 把 sbss 到 ebss 的内存清零</span></span><br><span class="line">    <span class="title function_ invoke__">kernel_log_info</span>();  <span class="comment">// 打印段的起始和结束地址，日志输出由SBI提供</span></span><br><span class="line">    mm::<span class="title function_ invoke__">init</span>();         <span class="comment">// 初始化内存管理（堆内存管理，页表管理）</span></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;[kernel] back to world!&quot;</span>);</span><br><span class="line">    mm::<span class="title function_ invoke__">remap_test</span>();</span><br><span class="line">    trap::<span class="title function_ invoke__">init</span>();</span><br><span class="line">    trap::<span class="title function_ invoke__">enable_timer_interrupt</span>();</span><br><span class="line">    timer::<span class="title function_ invoke__">set_next_trigger</span>();</span><br><span class="line">    task::<span class="title function_ invoke__">run_first_task</span>(); <span class="comment">// 运行第一个任务</span></span><br><span class="line">    <span class="built_in">panic!</span>(<span class="string">&quot;Unreachable in rust_main!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="内存管理子系统"><a class="header-anchor-1" href="#内存管理子系统">#</a>内存管理子系统</h3>
<p>内存管理子系统主要包括：</p>
<ul>
<li>heap_allocator: 堆内存管理</li>
<li>frame_allocator: 页表管理</li>
<li>KERNEL_SPACE: 内核空间</li>
</ul>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="keyword">pub</span> <span class="keyword">fn</span> <span class="title function_">init</span>() &#123;</span><br><span class="line">    heap_allocator::<span class="title function_ invoke__">init_heap</span>();</span><br><span class="line">    frame_allocator::<span class="title function_ invoke__">init_frame_allocator</span>();</span><br><span class="line">    KERNEL_SPACE.<span class="title function_ invoke__">exclusive_access</span>().<span class="title function_ invoke__">activate</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>第一部分内核堆其实就是一个巨大的全局数组，会被编译器放在 .bss 段，然后通过堆内存管理器进行管理。</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="keyword">pub</span> <span class="keyword">const</span> KERNEL_HEAP_SIZE: <span class="type">usize</span> = <span class="number">0x200_0000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">mut</span> HEAP_SPACE: [<span class="type">u8</span>; KERNEL_HEAP_SIZE] = [<span class="number">0</span>; KERNEL_HEAP_SIZE];</span><br><span class="line"><span class="comment">/// initiate heap allocator</span></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">fn</span> <span class="title function_">init_heap</span>() &#123;</span><br><span class="line">    <span class="keyword">unsafe</span> &#123;</span><br><span class="line">        HEAP_ALLOCATOR</span><br><span class="line">            .<span class="title function_ invoke__">lock</span>()</span><br><span class="line">            .<span class="title function_ invoke__">init</span>(HEAP_SPACE.<span class="title function_ invoke__">as_ptr</span>() <span class="keyword">as</span> <span class="type">usize</span>, KERNEL_HEAP_SIZE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>第二部分是物理页管理，负责管理计算机上从 ekernel 到 MEMORY_END 之间的物理内存。物理内存是分页管理的，页大小固定是 4k。</p>
<ul>
<li><code>PhysPageNum</code> 物理页号</li>
<li><code>PhysAddr</code> 物理地址</li>
<li><code>VirtPageNum</code> 虚拟页号</li>
<li><code>VirtAddr</code> 虚拟地址</li>
</ul>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="keyword">pub</span> <span class="keyword">const</span> MEMORY_END: <span class="type">usize</span> = <span class="number">0x88000000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// initiate the frame allocator using `ekernel` and `MEMORY_END`</span></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">fn</span> <span class="title function_">init_frame_allocator</span>() &#123;</span><br><span class="line">    <span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line">        <span class="keyword">fn</span> <span class="title function_">ekernel</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    FRAME_ALLOCATOR.<span class="title function_ invoke__">exclusive_access</span>().<span class="title function_ invoke__">init</span>(</span><br><span class="line">        PhysAddr::<span class="title function_ invoke__">from</span>(ekernel <span class="keyword">as</span> <span class="type">usize</span>).<span class="title function_ invoke__">ceil</span>(),</span><br><span class="line">        PhysAddr::<span class="title function_ invoke__">from</span>(MEMORY_END).<span class="title function_ invoke__">floor</span>(),</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>第三部分页表管理，记录内核以及进程的地址空间</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="comment">/// 一个进程或者内核的地址空间</span></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">struct</span> <span class="title class_">MemorySet</span> &#123;</span><br><span class="line">    page_table: PageTable,</span><br><span class="line">    areas: <span class="type">Vec</span>&lt;MapArea&gt;, <span class="comment">// 多个映射区段，不保证有序</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// 真实生效的页表，维护PTE</span></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">struct</span> <span class="title class_">PageTable</span> &#123;</span><br><span class="line">    root_ppn: PhysPageNum, <span class="comment">// 指向页表所在的物理页，其上保存PTE</span></span><br><span class="line">    frames: <span class="type">Vec</span>&lt;FrameTracker&gt;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// 预备页映射关系</span></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">struct</span> <span class="title class_">MapArea</span> &#123;</span><br><span class="line">    vpn_range: VPNRange, <span class="comment">// 页范围</span></span><br><span class="line">    data_frames: BTreeMap&lt;VirtPageNum, FrameTracker&gt;,</span><br><span class="line">    map_type: MapType,</span><br><span class="line">    map_perm: MapPermission,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// 一段连续的虚拟页</span></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">type</span> <span class="title class_">VPNRange</span> = SimpleRange&lt;VirtPageNum&gt;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// 用RAII风格管理的物理页</span></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">struct</span> <span class="title class_">FrameTracker</span> &#123;</span><br><span class="line">    <span class="comment">/// physical page number</span></span><br><span class="line">    <span class="keyword">pub</span> ppn: PhysPageNum,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>MapArea</code> 结构表示一段连续的虚拟内存映射，用于快捷修改<code>page_table</code>。</p>
<p>内存映射分为两种类型：</p>
<ul>
<li><code>Identical</code>：虚拟页号 X 映射到物理页号 X</li>
<li><code>Framed</code>：虚拟页映射到临时分配的物理页</li>
</ul>
<p>相关方法：</p>
<ul>
<li><code>MapArea::map(self, page_table)</code> 修改<code>page_table</code>，执行自身所描述的映射</li>
<li><code>MapArea::unmap(self, page_table)</code> 修改<code>page_table</code>，取消自身所描述的映射</li>
<li><code>MapArea::append_to(self, page_table, new_end)</code> 修改<code>page_table</code>，更新自身描述的映射的结束位置</li>
<li><code>MapArea::shrink_to(self, page_table, new_end)</code> 修改<code>page_table</code>，更新自身描述的映射的结束位置</li>
</ul>
<p>跳板页映射：把地址空间最高的地址映射到 strampoline 页</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="keyword">pub</span> <span class="keyword">const</span> TRAMPOLINE: <span class="type">usize</span> = <span class="type">usize</span>::MAX - PAGE_SIZE + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">map_trampoline</span>(&amp;<span class="keyword">mut</span> <span class="keyword">self</span>) &#123;</span><br><span class="line">    <span class="keyword">self</span>.page_table.<span class="title function_ invoke__">map</span>(</span><br><span class="line">        VirtAddr::<span class="title function_ invoke__">from</span>(TRAMPOLINE).<span class="title function_ invoke__">into</span>(),</span><br><span class="line">        PhysAddr::<span class="title function_ invoke__">from</span>(strampoline <span class="keyword">as</span> <span class="type">usize</span>).<span class="title function_ invoke__">into</span>(),</span><br><span class="line">        PTEFlags::R | PTEFlags::X,</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter-6-文件系统"><a class="header-anchor-1" href="#chapter-6-文件系统">#</a>Chapter 6 文件系统</h2>
<p>与内存类似，硬盘也被分成固定大小的块，按照 <code>block_id</code> 读写。rCore 采用的块大小为 512 字节。</p>
<h3 id="块读写层"><a class="header-anchor-1" href="#块读写层">#</a>块读写层</h3>
<ul>
<li><code>BlockDevice::read_block(&amp;self, block_id: usize, buf)</code> 从硬盘上读取一个块</li>
<li><code>BlockDevice::write_block(&amp;self, block_id: usize, buf)</code> 在硬盘上写入一个块</li>
</ul>
<p>目前只有一个 <code>VirtIOBlock</code> 实现了这个 <code>trait</code></p>
<h3 id="硬盘块缓存"><a class="header-anchor-1" href="#硬盘块缓存">#</a>硬盘块缓存</h3>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="comment">/// Cached block inside memory</span></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">struct</span> <span class="title class_">BlockCache</span> &#123;</span><br><span class="line">    <span class="comment">/// cached block data</span></span><br><span class="line">    cache: [<span class="type">u8</span>; BLOCK_SZ],</span><br><span class="line">    <span class="comment">/// underlying block id</span></span><br><span class="line">    block_id: <span class="type">usize</span>,</span><br><span class="line">    <span class="comment">/// underlying block device</span></span><br><span class="line">    block_device: Arc&lt;<span class="keyword">dyn</span> BlockDevice&gt;,</span><br><span class="line">    <span class="comment">/// whether the block is dirty</span></span><br><span class="line">    modified: <span class="type">bool</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">BlockCache</span> &#123;</span><br><span class="line">    <span class="keyword">pub</span> <span class="keyword">fn</span> <span class="title function_">read</span>&lt;T, V&gt;(&amp;<span class="keyword">self</span>, offset: <span class="type">usize</span>, f: <span class="keyword">impl</span> <span class="title class_">FnOnce</span>(&amp;T) <span class="punctuation">-&gt;</span> V) <span class="punctuation">-&gt;</span> V &#123;</span><br><span class="line">        <span class="title function_ invoke__">f</span>(<span class="keyword">self</span>.<span class="title function_ invoke__">get_ref</span>(offset))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">pub</span> <span class="keyword">fn</span> <span class="title function_">modify</span>&lt;T, V&gt;(&amp;<span class="keyword">mut</span> <span class="keyword">self</span>, offset: <span class="type">usize</span>, f: <span class="keyword">impl</span> <span class="title class_">FnOnce</span>(&amp;<span class="keyword">mut</span> T) <span class="punctuation">-&gt;</span> V) <span class="punctuation">-&gt;</span> V &#123;</span><br><span class="line">        <span class="title function_ invoke__">f</span>(<span class="keyword">self</span>.<span class="title function_ invoke__">get_mut</span>(offset))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>提供了<code>read</code>和<code>modify</code>两个 API 用于读和写一个硬盘块，读和写的操作需要作为一个<code>FnOnce</code>回调函数传入。</p>
<p>缓存块的管理内部使用了一个队列：</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="keyword">pub</span> <span class="keyword">struct</span> <span class="title class_">BlockCacheManager</span> &#123;</span><br><span class="line">    queue: VecDeque&lt;(<span class="type">usize</span>, Arc&lt;Mutex&lt;BlockCache&gt;&gt;)&gt;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">BlockCacheManager</span> &#123;</span><br><span class="line">    <span class="keyword">pub</span> <span class="keyword">fn</span> <span class="title function_">get_block_cache</span>(</span><br><span class="line">        &amp;<span class="keyword">mut</span> <span class="keyword">self</span>,</span><br><span class="line">        block_id: <span class="type">usize</span>,</span><br><span class="line">        block_device: Arc&lt;<span class="keyword">dyn</span> BlockDevice&gt;,</span><br><span class="line">    ) <span class="punctuation">-&gt;</span> Arc&lt;Mutex&lt;BlockCache&gt;&gt; &#123; ... &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>get_block_cache(block_id, block_device)</code> 用于获取对应块的 <code>BlockCache</code>。</p>
<h3 id="easyfs-文件系统"><a class="header-anchor-1" href="#easyfs-文件系统">#</a>EasyFS 文件系统</h3>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="comment">/// An easy file system on block</span></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">struct</span> <span class="title class_">EasyFileSystem</span> &#123;</span><br><span class="line">    <span class="comment">/// Real device</span></span><br><span class="line">    <span class="keyword">pub</span> block_device: Arc&lt;<span class="keyword">dyn</span> BlockDevice&gt;,</span><br><span class="line">    <span class="comment">/// Inode bitmap</span></span><br><span class="line">    <span class="keyword">pub</span> inode_bitmap: Bitmap,</span><br><span class="line">    <span class="comment">/// Data bitmap</span></span><br><span class="line">    <span class="keyword">pub</span> data_bitmap: Bitmap,</span><br><span class="line">    <span class="comment">/// Inode区块范围</span></span><br><span class="line">    inode_area_start_block: <span class="type">u32</span>,</span><br><span class="line">    data_area_start_block: <span class="type">u32</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>文件系统结构：</p>
<ul>
<li><code>[0]</code>：超级块；</li>
<li><code>[1, 1+inode_bitmap_blocks)</code>：inode 位图区
<ul>
<li>大小：共<code>inode_bitmap_blocks</code>个块，每个块大小是 512 字节，能够表示 4k 个状态位</li>
<li>记录每一个<code>inode</code>是否被使用</li>
</ul>
</li>
<li><code>[inode_area_start_block, ]</code>：inode 区
<ul>
<li>保存位图区能表示数量的<code>inode</code></li>
<li><code>inode</code>连续存储，总大小取整到 block 边界</li>
<li><code>inode</code>按顺序编号，从 0 开始</li>
</ul>
</li>
<li><code>[...]</code>：data 位图区</li>
<li><code>[data_area_start_block, total_blocks)</code>：data 区</li>
</ul>
<p>超级块：</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="keyword">pub</span> <span class="keyword">struct</span> <span class="title class_">SuperBlock</span> &#123;</span><br><span class="line">    magic: <span class="type">u32</span>,  <span class="comment">// 0x3b800001</span></span><br><span class="line">    <span class="keyword">pub</span> total_blocks: <span class="type">u32</span>,</span><br><span class="line">    <span class="keyword">pub</span> inode_bitmap_blocks: <span class="type">u32</span>,</span><br><span class="line">    <span class="keyword">pub</span> inode_area_blocks: <span class="type">u32</span>,</span><br><span class="line">    <span class="keyword">pub</span> data_bitmap_blocks: <span class="type">u32</span>,</span><br><span class="line">    <span class="keyword">pub</span> data_area_blocks: <span class="type">u32</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>inode 结构设计：</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="comment">/// A disk inode</span></span><br><span class="line"><span class="meta">#[repr(C)]</span></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">struct</span> <span class="title class_">DiskInode</span> &#123;</span><br><span class="line">    <span class="keyword">pub</span> size: <span class="type">u32</span>,</span><br><span class="line">    <span class="keyword">pub</span> direct: [<span class="type">u32</span>; INODE_DIRECT_COUNT],</span><br><span class="line">    <span class="keyword">pub</span> indirect1: <span class="type">u32</span>,</span><br><span class="line">    <span class="keyword">pub</span> indirect2: <span class="type">u32</span>,</span><br><span class="line">    type_: DiskInodeType,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>inode 采用了经典的三级索引设计，有 28 个直接条目；1 个间接索引，包含 128 个条目；1 个二级间接索引，包含 128 个间接索引，等于<code>128*128</code>个直接条目。</p>
<p>Easyfs 中的<code>0</code>号<code>inode</code>是文件系统的根节点。</p>
<p>Easyfs 没有多级目录设计。</p>
<h2 id="chapter-8-同步机制"><a class="header-anchor-1" href="#chapter-8-同步机制">#</a>Chapter 8 同步机制</h2>
<p>死锁检测：</p>
<ul>
<li>用一个全局变量记录每个<code>task</code>的<code>hold</code>和<code>wait</code>集合，即当前持有的资源（及数量）和正在等待的资源。</li>
<li>在尝试获取资源（即加锁）时，进行死锁检测。</li>
</ul>
<p>死锁检测算法就是对未来的执行状态进行模拟：找到下一个可以执行的任务，模拟执行，然后释放它拥有的资源，循环。当所有任务都可以执行，说明不存在死锁；否则就是存在死锁。</p>
]]></content>
      <categories>
        <category>learningos-2024</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>关于DDL的疑惑</title>
    <url>/2021/01/05/what-ddl/</url>
    <content><![CDATA[<p>为什么 ddl 推迟, 开始肝 ddl 的时间也跟着推迟？</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>摸鱼</tag>
      </tags>
  </entry>
  <entry>
    <title>How to compile the Linux kernel</title>
    <url>/2022/01/08/how-to-compile-linux-kernel/</url>
    <content><![CDATA[<p><img src="https://frezcirno.github.io/static/images/NewTux.svg" alt="" /></p>
<h2 id="访问-https-www-kernel-org-查看最新的内核版本，获取下载链接"><a class="header-anchor-1" href="#访问-https-www-kernel-org-查看最新的内核版本，获取下载链接">#</a>访问 <span class="exturl" data-url="aHR0cHM6Ly93d3cua2VybmVsLm9yZy8=">https://www.kernel.org/<i class="fa fa-external-link-alt"></i></span> 查看最新的内核版本，获取下载链接</h2>
<h2 id="下载并解压到当前目录"><a class="header-anchor-1" href="#下载并解压到当前目录">#</a>下载并解压到当前目录</h2>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wget -qO- https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.15.13.tar.xz | tar Jxvf -</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> linux-5.15.13</span></span><br></pre></td></tr></table></figure>
<h2 id="编译配置"><a class="header-anchor-1" href="#编译配置">#</a>编译配置</h2>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> /boot/config-`<span class="built_in">uname</span> -r` .config</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make menuconfig</span></span><br></pre></td></tr></table></figure>
<h2 id="开始编译"><a class="header-anchor-1" href="#开始编译">#</a>开始编译</h2>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make -j $(<span class="built_in">nproc</span>)</span></span><br></pre></td></tr></table></figure>
<h2 id="安装到系统中"><a class="header-anchor-1" href="#安装到系统中">#</a>安装到系统中</h2>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> make INSTALL_MOD_STRIP=1 modules_install</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> make headers_install</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> make install</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Kernel 文件子系统</title>
    <url>/2024/04/30/linux-kernel-file-subsystem/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Kernel 中断子系统</title>
    <url>/2024/04/16/linux-kernel-interrupt-subsystem/</url>
    <content><![CDATA[<p>Linux 将中断处理流程划分成两个部分，一个是 top half，另一个是 bottom half。</p>
<p>在执行 top half 时是关闭硬件中断的，即系统没办法响应后续的中断事件，因此应该保证 top half 尽可能短。</p>
<p>把不那么紧急的事情 defer 到 bottom half 去做。</p>
<h2 id="bottom-half"><a class="header-anchor-1" href="#bottom-half">#</a>bottom half</h2>
<p>bottom half 有多个实现机制</p>
<ul>
<li>
<p>BH 最早的实现，已经弃用了</p>
</li>
<li>
<p>Task queue 已经弃用了</p>
</li>
<li>
<p>Softirq
运行在 interrupt context
top half 中<code>raise_softirq(nr)</code>，每个 cpu 串行执行</p>
</li>
<li>
<p>tasklet
运行在 interrupt context</p>
</li>
<li>
<p>workqueue
运行在 process context</p>
</li>
</ul>
<h2 id="softirq"><a class="header-anchor-1" href="#softirq">#</a>Softirq</h2>
<p>softirq 和 hardirq（硬件中断）对应，</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    HI_SOFTIRQ=<span class="number">0</span>,</span><br><span class="line">    TIMER_SOFTIRQ,</span><br><span class="line">    NET_TX_SOFTIRQ,</span><br><span class="line">    NET_RX_SOFTIRQ,</span><br><span class="line">    BLOCK_SOFTIRQ,</span><br><span class="line">    BLOCK_IOPOLL_SOFTIRQ,</span><br><span class="line">    TASKLET_SOFTIRQ,</span><br><span class="line">    SCHED_SOFTIRQ,</span><br><span class="line">    HRTIMER_SOFTIRQ,</span><br><span class="line">    RCU_SOFTIRQ,    <span class="comment">/* Preferable RCU should always be the last softirq */</span></span><br><span class="line">    NR_SOFTIRQS</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>softirq 有三个处理时机</p>
<ol>
<li>中断上下文 <code>irq_exit()</code> 的时候</li>
<li>任意 <code>local_bh_enable()</code></li>
<li><code>softirqd</code> 内核线程定期执行</li>
</ol>
<h2 id="tasklet"><a class="header-anchor-1" href="#tasklet">#</a>tasklet</h2>
<p>per-cpu 会有一个 tasklet 的链表</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="title function_">DEFINE_PER_CPU</span><span class="params">(<span class="keyword">struct</span> tasklet_head, tasklet_vec)</span>;</span><br><span class="line"><span class="type">static</span> <span class="title function_">DEFINE_PER_CPU</span><span class="params">(<span class="keyword">struct</span> tasklet_head, tasklet_hi_vec)</span>;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>嵌入式</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Kernel 网络子系统</title>
    <url>/2024/04/16/linux-kernel-network-subsystem/</url>
    <content><![CDATA[<h2 id="napi"><a class="header-anchor-1" href="#napi">#</a>NAPI</h2>
<p>NAPI 机制采用中断和轮询结合的方式收包</p>
<p><code>softnet_data</code> per-cpu 全局变量，保存网络收包的 backlog</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">softnet_data</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Qdisc</span> *<span class="title">output_queue</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Qdisc</span> **<span class="title">output_queue_tailp</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">list_head</span> <span class="title">poll_list</span>;</span> <span class="comment">//设备轮询列表</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sk_buff</span> *<span class="title">completion_queue</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sk_buff_head</span> <span class="title">process_queue</span>;</span></span><br><span class="line">    <span class="comment">/* 统计数据 */</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> processed;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> time_squeeze;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> cpu_collision;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> received_rps;</span><br><span class="line">    <span class="type">unsigned</span> dropped; <span class="comment">//被丢弃的包的数量</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sk_buff_head</span> <span class="title">input_pkt_queue</span>;</span> <span class="comment">//收包队列</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">napi_struct</span> <span class="title">backlog</span>;</span> <span class="comment">//处理积压队列的napi结构</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>softnet_data</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Bash shell 脚本编程</title>
    <url>/2021/01/29/shell-basic/</url>
    <content><![CDATA[<h2 id="注释"><a class="header-anchor-1" href="#注释">#</a>注释</h2>
<h3 id="单行注释"><a class="header-anchor-1" href="#单行注释">#</a>单行注释</h3>
<p>以<code>#</code>开始, 从<code>#</code>开始直到行尾都会被当做注释</p>
<h3 id="多行注释"><a class="header-anchor-1" href="#多行注释">#</a>多行注释</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">:&lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">注释内容...</span></span><br><span class="line"><span class="string">注释内容...</span></span><br><span class="line"><span class="string">注释内容...</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>
<p><code>EOF</code>可以换成任意内容</p>
<h2 id="变量"><a class="header-anchor-1" href="#变量">#</a>变量</h2>
<h3 id="定义变量"><a class="header-anchor-1" href="#定义变量">#</a>定义变量</h3>
<p><code>变量名=值</code></p>
<p>注意等号前后不能有空格</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">a=1</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">b=<span class="string">&quot;Hello world&quot;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="使用变量"><a class="header-anchor-1" href="#使用变量">#</a>使用变量</h3>
<p>读取变量的值时需要在前面添加<code>$</code></p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="variable">$a</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="variable">$b</span></span></span><br></pre></td></tr></table></figure>
<h3 id="修改变量"><a class="header-anchor-1" href="#修改变量">#</a>修改变量</h3>
<p>再次修改变量的值时不需要添加<code>$</code></p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">a=2</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">b=<span class="string">&quot;World Hello&quot;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="只读变量"><a class="header-anchor-1" href="#只读变量">#</a>只读变量</h3>
<p><code>readonly 变量名</code></p>
<p>可以将一个变量设置为只读</p>
<h3 id="删除变量"><a class="header-anchor-1" href="#删除变量">#</a>删除变量</h3>
<p><code>unset 变量名</code></p>
<h2 id="数据类型"><a class="header-anchor-1" href="#数据类型">#</a>数据类型</h2>
<h3 id="数字-字符串"><a class="header-anchor-1" href="#数字-字符串">#</a>数字 &amp; 字符串</h3>
<p>可以用单引号括起来也可以用双引号, 区别是单引号括起来的字符串不会转义</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">a=1</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&#x27;$a\&quot;\&quot;b&#x27;</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">a\&quot;\&quot;b</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span>\&quot;\&quot;b&quot;</span></span></span><br><span class="line">1&quot;&quot;b</span><br></pre></td></tr></table></figure>
<h4 id="拼接字符串"><a class="header-anchor-1" href="#拼接字符串">#</a>拼接字符串</h4>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">greeting=<span class="string">&quot;hello&quot;</span>;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">name=<span class="string">&quot;world&quot;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">msg=<span class="string">&quot;<span class="variable">$greeting</span> <span class="variable">$name</span>&quot;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="variable">$msg</span></span></span><br><span class="line">hello world</span><br></pre></td></tr></table></figure>
<h4 id="获取字符串长度"><a class="header-anchor-1" href="#获取字符串长度">#</a>获取字符串长度</h4>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="variable">$&#123;#msg&#125;</span></span></span><br><span class="line">11</span><br></pre></td></tr></table></figure>
<h4 id="截取字符串"><a class="header-anchor-1" href="#截取字符串">#</a>截取字符串</h4>
<p>格式见示例, 两个参数分别为起始位置和长度</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="variable">$&#123;msg:4:3&#125;</span>  o w</span></span><br></pre></td></tr></table></figure>
<h2 id="数组"><a class="header-anchor-1" href="#数组">#</a>数组</h2>
<p><code>数组名=(元素1 元素2 ... 元素n)</code></p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">a=(1 2 3)</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">b=(<span class="string">&quot;Hello&quot;</span> <span class="string">&quot;,&quot;</span> <span class="string">&quot;World&quot;</span>)</span></span><br></pre></td></tr></table></figure>
<p>也可以单独定义数组的各个分量</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">arr[0]=1</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">arr[1]=<span class="string">&quot;2&quot;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">arr[5]=3</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">arr[100]=4</span></span><br></pre></td></tr></table></figure>
<p>shell 中数组的下标从 0 开始, 可以不是连续的</p>
<h3 id="读取数组元素"><a class="header-anchor-1" href="#读取数组元素">#</a>读取数组元素</h3>
<p><code>$&#123;数据名[下标]&#125;</code></p>
<p>下标使用 <code>@</code> 符号可以获取数组中的所有元素</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">a=(1 2 3 4 5)</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="variable">$&#123;a[0]&#125;</span> <span class="comment">## 1</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="variable">$&#123;a[3]&#125;</span> <span class="comment">## 4</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="variable">$&#123;a[@]&#125;</span> <span class="comment">## 1 2 3 4 5</span></span></span><br></pre></td></tr></table></figure>
<h3 id="获取数组的长度"><a class="header-anchor-1" href="#获取数组的长度">#</a>获取数组的长度</h3>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="variable">$&#123;#arr[@]&#125;</span>  或</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="variable">$&#123;#arr[*]&#125;</span></span></span><br></pre></td></tr></table></figure>
<h2 id="控制流"><a class="header-anchor-1" href="#控制流">#</a>控制流</h2>
<h3 id="条件分支"><a class="header-anchor-1" href="#条件分支">#</a>条件分支</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> condition1</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    command1</span><br><span class="line"><span class="keyword">elif</span> condition2</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    command2</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    commandN</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<h3 id="循环语句"><a class="header-anchor-1" href="#循环语句">#</a>循环语句</h3>
<p>for-in 循环</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> 1 2 3 4 5; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$index</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>for-i 循环</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ((i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++)); <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>while 循环</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">i=1</span><br><span class="line"><span class="keyword">while</span>(( <span class="variable">$i</span>&lt;=<span class="number">5</span> ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">    <span class="built_in">let</span> <span class="string">&quot;i++&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<h2 id="调用参数"><a class="header-anchor-1" href="#调用参数">#</a>调用参数</h2>
<p>调用脚本时可以传递一些参数, 在脚本内可以通过如下转义表达式获取参数</p>
<table>
<thead>
<tr>
<th>参数处理</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>$#</code></td>
<td>传递到脚本的参数个数</td>
</tr>
<tr>
<td><code>$n</code></td>
<td>传递到脚本的第 n 个参数, 0 为脚本文件名</td>
</tr>
<tr>
<td><code>$*</code></td>
<td>以一个单字符串显示所有向脚本传递的参数。</td>
</tr>
<tr>
<td><code>$$</code></td>
<td>脚本运行的当前进程 ID 号</td>
</tr>
<tr>
<td><code>$!</code></td>
<td>后台运行的最后一个进程的 ID 号</td>
</tr>
<tr>
<td><code>$@</code></td>
<td>与<code>$*</code>相同，但是每个参数都会带引号。</td>
</tr>
<tr>
<td><code>$-</code></td>
<td>显示 Shell 使用的当前选项，与 set 命令功能相同。</td>
</tr>
<tr>
<td><code>$?</code></td>
<td>显示最后命令的退出状态。0 表示没有错误，其他任何值表明有错误。</td>
</tr>
</tbody>
</table>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Shell 传递参数实例！&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;参数个数为: <span class="variable">$#</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;执行的文件名: <span class="variable">$0</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第一个参数为: <span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第二个参数为: <span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第三个参数为: <span class="variable">$3</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;所有参数为: $*&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;当前进程: $$&quot;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>&quot;su user&quot; 和 &quot;su - user&quot; 的区别
</title>
    <url>/2020/12/28/su-wo-slash/</url>
    <content><![CDATA[<ul>
<li>
<p><code>$ su user</code>启动 nologin shell</p>
</li>
<li>
<p><code>$ su - user</code>启动 login shell</p>
</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>线性代数 - 概念总结</title>
    <url>/2021/01/08/linear-algebra/</url>
    <content><![CDATA[<h2 id="1-行列式"><a class="header-anchor-1" href="#1-行列式">#</a>1. 行列式</h2>
<h3 id="基本概念"><a class="header-anchor-1" href="#基本概念">#</a>基本概念</h3>
<p>二阶行列式</p>
<p>三阶行列式</p>
<p>全排列</p>
<p>对换</p>
<p>n 阶行列式</p>
<p>上下三角行列式</p>
<p>对角行列式</p>
<p>转置行列式</p>
<h4 id="性质"><a class="header-anchor-1" href="#性质">#</a>性质</h4>
<ul>
<li>转置行列式, 行列式不变</li>
<li><strong>对换行(列), 行列式变号</strong>
<ul>
<li>两行(列)完全相同, 行列式=0</li>
<li>两行(列)成比例, 行列式=0</li>
</ul>
</li>
<li>一行(列)乘 k = 整体乘 k
<ul>
<li><strong>行(列)系数提到外面, 行列式不变</strong></li>
</ul>
</li>
<li>可以按照某一行(列)分成两个行列式相加</li>
<li><strong>一行乘 k 加到另一行, 行列式不变</strong></li>
</ul>
<h3 id="按行-列-展开"><a class="header-anchor-1" href="#按行-列-展开">#</a>按行(列)展开</h3>
<ul>
<li>余子式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">M_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></li>
<li>代数余子式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mrow><mi>i</mi><mo>+</mo><mi>j</mi></mrow></msup><msub><mi>M</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">A_{ij}=(-1)^{i+j}{M_{ij}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1108em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8247em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span></li>
</ul>
<h4 id="性质-2"><a class="header-anchor-1" href="#性质-2">#</a>性质</h4>
<ul>
<li>
<p>按行(列)展开法则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>A</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>A</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D=\sum_{i=1}^{n}{a_{ij}A_{ij}}, (j=1,2,...,n)=\sum_{j=1}^{n}{a_{ij}A_{ij}}, (i=1,2,...,n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2401em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>如果上式中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">j(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span>错开, 则结果为 0</p>
</li>
</ul>
<h4 id="范德蒙德行列式"><a class="header-anchor-1" href="#范德蒙德行列式">#</a>范德蒙德行列式</h4>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>D</mi><mi>n</mi></msub><mo>=</mo><mrow><mo fence="true">∣</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mi>n</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mn>1</mn><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mi>n</mi><mn>2</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">:</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">:</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">:</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mn>1</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mi>n</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow><mo>=</mo><munder><mo>∏</mo><mrow><mi>n</mi><mo>≥</mo><mi>i</mi><mo>≥</mo><mi>j</mi><mo>≥</mo><mn>1</mn></mrow></munder><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><mo stretchy="false">(</mo><mtext>注意顺序</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D_n=\begin{vmatrix}
1&amp;1&amp;...&amp;1 \\
x_1&amp;x_2&amp;...&amp;x_n \\
x_1^2&amp;x_2^2&amp;...&amp;x_n^2 \\
:&amp;:&amp; &amp;: \\
x_1^{n-1}&amp;x_2^{n-1}&amp;...&amp;x_n^{n-1}
\end{vmatrix}
=\prod_{n\ge i\ge j\ge 1}{(x_i-x_j)}
(注意顺序)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:6.0142em;vertical-align:-2.7571em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:8em;"></span><span style="width:0.333em;height:6.000em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.333em" height="6.000em" viewBox="0 0 333 6000"><path d="M145 15 v585 v4800 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v-4800 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v4800 v585 h43z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2571em;"><span style="top:-5.4171em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-4.2171em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0171em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8171em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">:</span></span></span><span style="top:-0.6029em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8542em;"><span style="top:-2.4337em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7571em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2571em;"><span style="top:-5.4171em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-4.2171em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0171em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8171em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">:</span></span></span><span style="top:-0.6029em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8542em;"><span style="top:-2.4337em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7571em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2571em;"><span style="top:-5.4171em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span><span style="top:-4.2171em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span><span style="top:-3.0171em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span><span style="top:-1.8171em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-0.6029em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7571em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2571em;"><span style="top:-5.4171em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-4.2171em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0171em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8171em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">:</span></span></span><span style="top:-0.6029em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7571em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:8em;"></span><span style="width:0.333em;height:6.000em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.333em" height="6.000em" viewBox="0 0 333 6000"><path d="M145 15 v585 v4800 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v-4800 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v4800 v585 h43z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4638em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">≥</span><span class="mord mathnormal mtight">i</span><span class="mrel mtight">≥</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">≥</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mopen">(</span><span class="mord cjk_fallback">注意顺序</span><span class="mclose">)</span></span></span></span></span></p>
<h2 id="2-矩阵及其运算"><a class="header-anchor-1" href="#2-矩阵及其运算">#</a>2. 矩阵及其运算</h2>
<p>线性方程组</p>
<p>非齐次线性方程组</p>
<p>齐次线性方程组</p>
<p>齐次线性方程组的零解</p>
<h3 id="矩阵"><a class="header-anchor-1" href="#矩阵">#</a>矩阵</h3>
<p>同型矩阵</p>
<p>系数矩阵</p>
<p>未知数矩阵</p>
<p>常数项矩阵</p>
<p>增广矩阵</p>
<p>线性变换</p>
<h4 id="按性质"><a class="header-anchor-1" href="#按性质">#</a>按性质</h4>
<ul>
<li>非奇异矩阵/可逆矩阵/满秩矩阵</li>
<li>奇异矩阵/不可逆矩阵/降秩矩阵</li>
</ul>
<h4 id="按形状"><a class="header-anchor-1" href="#按形状">#</a>按形状</h4>
<ul>
<li>对角矩阵</li>
<li>单位矩阵</li>
<li>对称矩阵</li>
</ul>
<h3 id="矩阵运算"><a class="header-anchor-1" href="#矩阵运算">#</a>矩阵运算</h3>
<ul>
<li>矩阵加法
<ul>
<li>负矩阵</li>
</ul>
</li>
<li>数乘</li>
<li>矩阵乘法
<ul>
<li>可交换</li>
<li>纯量阵: 一定可交换</li>
</ul>
</li>
<li>幂</li>
<li>转置</li>
<li>行列式</li>
<li>伴随矩阵</li>
<li>矩阵多项式</li>
</ul>
<h4 id="性质-3"><a class="header-anchor-1" href="#性质-3">#</a>性质</h4>
<h5 id="转置性质"><a class="header-anchor-1" href="#转置性质">#</a>转置性质</h5>
<ul>
<li>自反性 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>A</mi><mi>T</mi></msup><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo>=</mo><mi>A</mi></mrow><annotation encoding="application/x-tex">(A^{T})^{T}=A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></li>
<li>线性 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>λ</mi><mi>A</mi><mo>+</mo><mi>B</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo>=</mo><mi>λ</mi><msup><mi>A</mi><mi>T</mi></msup><mo>+</mo><msup><mi>B</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">(\lambda A+B)^{T}=\lambda A^{T}+B^{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">λ</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9247em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">λ</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></li>
<li>嵌套 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>A</mi><mi>B</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo>=</mo><msup><mi>B</mi><mi>T</mi></msup><msup><mi>A</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">(AB)^{T}=B^{T}A^{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></li>
<li>判零 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mi>T</mi></msup><mi>A</mi><mo>=</mo><mi>O</mi><mo>⇔</mo><mi>A</mi><mo>=</mo><mi>O</mi></mrow><annotation encoding="application/x-tex">A^TA=O\Leftrightarrow A=O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span></li>
</ul>
<h5 id="行列式性质"><a class="header-anchor-1" href="#行列式性质">#</a>行列式性质</h5>
<ul>
<li>常数放大 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">∣</mo><mi>λ</mi><mi>A</mi><mo fence="true">∣</mo></mrow><mo>=</mo><msup><mi>λ</mi><mi>n</mi></msup><mrow><mo fence="true">∣</mo><mi>A</mi><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">\left|\lambda A\right|=\lambda^n\left|A\right|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">λ</span><span class="mord mathnormal">A</span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">A</span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span></li>
<li>可乘性 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">∣</mo><mi>A</mi><mi>B</mi><mo fence="true">∣</mo></mrow><mo>=</mo><mrow><mo fence="true">∣</mo><mi>A</mi><mo fence="true">∣</mo></mrow><mrow><mo fence="true">∣</mo><mi>B</mi><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">\left|AB\right|=\left|A\right|\left|B\right|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">A</span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span></li>
</ul>
<h5 id="伴随矩阵性质"><a class="header-anchor-1" href="#伴随矩阵性质">#</a>伴随矩阵性质</h5>
<ul>
<li>与转置可交换 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>A</mi><mi>T</mi></msup><msup><mo stretchy="false">)</mo><mo>∗</mo></msup><mo>=</mo><mo stretchy="false">(</mo><msup><mi>A</mi><mo>∗</mo></msup><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">(A^T)^*=(A^*)^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></li>
<li>与逆可交换 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mo stretchy="false">)</mo><mo>∗</mo></msup><mo>=</mo><mo stretchy="false">(</mo><msup><mi>A</mi><mo>∗</mo></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">(A^{-1})^*=(A^*)^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></li>
<li>嵌套 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>A</mi><mi>B</mi><msup><mo stretchy="false">)</mo><mo>∗</mo></msup><mo>=</mo><msup><mi>B</mi><mo>∗</mo></msup><msup><mi>A</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">(AB)^*=B^*A^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span></li>
<li>常数部分放大 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>λ</mi><mi>A</mi><msup><mo stretchy="false">)</mo><mo>∗</mo></msup><mo>=</mo><msup><mi>λ</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>A</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">(\lambda A)^*=\lambda^{n-1}A^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">λ</span><span class="mord mathnormal">A</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span></li>
</ul>
<h5 id="伴随矩阵的行列式和秩"><a class="header-anchor-1" href="#伴随矩阵的行列式和秩">#</a>伴随矩阵的行列式和秩</h5>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">∣</mo><msup><mi>A</mi><mo>∗</mo></msup><mo fence="true">∣</mo></mrow><mo>=</mo><msup><mrow><mo fence="true">∣</mo><mi>A</mi><mo fence="true">∣</mo></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\left|A^*\right|=\left|A\right|^{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.204em;vertical-align:-0.25em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">A</span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><msup><mi>A</mi><mo>∗</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>n</mi><mtext> </mtext><mo stretchy="false">(</mo><mtext>满秩不变</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>n</mi><mo>−</mo><mn>1</mn><mtext> </mtext><mo stretchy="false">(</mo><mtext>差</mtext><mn>1</mn><mtext>补</mtext><mn>1</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>n</mi><mo>−</mo><mn>1</mn><mtext> </mtext><mo stretchy="false">(</mo><mtext>否则为</mtext><mn>0</mn><mo separator="true">,</mo><msup><mi>A</mi><mo>∗</mo></msup><mo>=</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">R(A^*)=\begin{cases}n,R(A)=n~(满秩不变)\\1,R(A)=n-1~(差1补1)\\0,R(A)&lt;n-1~(否则为0, A^*=0)\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.91em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mspace nobreak"> </span><span class="mopen">(</span><span class="mord cjk_fallback">满秩不变</span><span class="mclose">)</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mspace nobreak"> </span><span class="mopen">(</span><span class="mord cjk_fallback">差</span><span class="mord">1</span><span class="mord cjk_fallback">补</span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mspace nobreak"> </span><span class="mopen">(</span><span class="mord cjk_fallback">否则为</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
</ul>
<h3 id="矩阵分块法"><a class="header-anchor-1" href="#矩阵分块法">#</a>矩阵分块法</h3>
<p>分块矩阵</p>
<p>子块</p>
<p>分块对角矩阵</p>
<ul>
<li>性质
<ul>
<li>行列式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">∣</mo><mi>A</mi><mo fence="true">∣</mo></mrow><mo>=</mo><mrow><mo fence="true">∣</mo><msub><mi>A</mi><mn>1</mn></msub><mo fence="true">∣</mo></mrow><mrow><mo fence="true">∣</mo><msub><mi>A</mi><mn>2</mn></msub><mo fence="true">∣</mo></mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mrow><mo fence="true">∣</mo><msub><mi>A</mi><mi>n</mi></msub><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">\left|A\right|=\left|A_1\right|\left|A_2\right|...\left|A_n\right|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">A</span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span></li>
<li>逆</li>
</ul>
</li>
</ul>
<h2 id="3-初等变换与线性方程组"><a class="header-anchor-1" href="#3-初等变换与线性方程组">#</a>3. 初等变换与线性方程组</h2>
<h3 id="初等变换"><a class="header-anchor-1" href="#初等变换">#</a>初等变换</h3>
<ul>
<li>
<p>行(列)变换 等同于左(右)乘同样变化之后的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></p>
<ul>
<li>对换两行(列)</li>
<li>缩放某一行(列)加到另一行(列)上去 (源和目标可以一样)</li>
</ul>
</li>
<li>
<p>初等矩阵: 施加了一次初等行(列)变换的 E</p>
</li>
</ul>
<h3 id="矩阵等价"><a class="header-anchor-1" href="#矩阵等价">#</a>矩阵等价</h3>
<ul>
<li>A 和 B 等价: A 经若干次初等变换可以变成 B</li>
<li>等价关系: 自反性, 对称性, 传递性</li>
<li>推论: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∼</mo><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mo>∼</mo><mi>E</mi><mo>⇔</mo><mrow><mi>A</mi><mtext>可逆</mtext></mrow></mrow><annotation encoding="application/x-tex">A\sim (r)\sim E\Leftrightarrow{A可逆}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="mord cjk_fallback">可逆</span></span></span></span></span></li>
</ul>
<h4 id="充要条件"><a class="header-anchor-1" href="#充要条件">#</a>充要条件</h4>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∼</mo><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mo>∼</mo><mi>B</mi><mo>⇔</mo><mi>P</mi><mi>A</mi><mo>=</mo><mi>B</mi><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mi>Q</mi><mtext>可逆</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A\sim (r)\sim B\Leftrightarrow PA=B (P, Q可逆)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">Q</span><span class="mord cjk_fallback">可逆</span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∼</mo><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo>∼</mo><mi>B</mi><mo>⇔</mo><mi>A</mi><mi>Q</mi><mo>=</mo><mi>B</mi><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mi>Q</mi><mtext>可逆</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A\sim (c)\sim B\Leftrightarrow AQ=B (P, Q可逆)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">Q</span><span class="mord cjk_fallback">可逆</span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∼</mo><mi>B</mi><mo>⇔</mo><mi>P</mi><mi>A</mi><mi>Q</mi><mo>=</mo><mi>B</mi><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mi>Q</mi><mtext>可逆</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A\sim B\Leftrightarrow PAQ=B (P, Q可逆)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">A</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">Q</span><span class="mord cjk_fallback">可逆</span><span class="mclose">)</span></span></span></span></li>
</ul>
<h3 id="行阶梯形矩阵"><a class="header-anchor-1" href="#行阶梯形矩阵">#</a>行阶梯形矩阵</h3>
<p>左下角的 0 组成了一个从右下到左上的阶梯, 这个阶梯的宽度任意, 但是每一级的高度必定为 1(两边不算)</p>
<p>非零首元: 非零行的首个非零元素</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{pmatrix}
 x &amp; . &amp; . &amp; . &amp; .\\
 0 &amp; x &amp; . &amp; . &amp; .\\
 0 &amp; 0 &amp; x &amp; . &amp; .\\
 0 &amp; 0 &amp; 0 &amp; x &amp; .
\end{pmatrix}
\begin{pmatrix}
 x &amp; . &amp; . &amp; . &amp; .\\
 0 &amp; 0 &amp; 0 &amp; x &amp; .\\
 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0\\
 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0
\end{pmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.8em;vertical-align:-2.15em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1
c-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,
-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,
949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9
c0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,
-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189
l0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,
-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,
63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5
c11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209
c-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664
c-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11
c0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17
c242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558
l0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,
-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1
c-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,
-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,
949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9
c0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,
-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189
l0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,
-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,
63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5
c11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209
c-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664
c-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11
c0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17
c242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558
l0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,
-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="行最简形矩阵"><a class="header-anchor-1" href="#行最简形矩阵">#</a>行最简形矩阵</h3>
<p>在行阶梯型矩阵的基础上, 非零首元都是 1, 非零首元的上下都是 0, 则为行最简形矩阵</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">.</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{pmatrix}
 1 &amp; 0 &amp; 0 &amp; 0 &amp; .\\
 0 &amp; 1 &amp; 0 &amp; 0 &amp; .\\
 0 &amp; 0 &amp; 1 &amp; 0 &amp; .\\
 0 &amp; 0 &amp; 0 &amp; 1 &amp; .
\end{pmatrix}
\begin{pmatrix}
 1 &amp; . &amp; . &amp; 0 &amp; .\\
 0 &amp; 0 &amp; 0 &amp; 1 &amp; .\\
 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0\\
 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0
\end{pmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.8em;vertical-align:-2.15em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1
c-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,
-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,
949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9
c0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,
-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189
l0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,
-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,
63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5
c11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209
c-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664
c-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11
c0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17
c242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558
l0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,
-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1
c-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,
-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,
949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9
c0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,
-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189
l0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,
-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">.</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,
63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5
c11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209
c-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664
c-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11
c0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17
c242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558
l0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,
-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<ul>
<li>一个矩阵的行最简形矩阵是唯一的</li>
</ul>
<h3 id="标准形"><a class="header-anchor-1" href="#标准形">#</a>标准形</h3>
<p>对行最简形矩阵施加初等列变换, 是非零首元依次排列在左边, 右边全 0</p>
<p>特点是左上角是个 E</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{pmatrix}
 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0\\
 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0\\
 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0\\
 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0
\end{pmatrix}
\begin{pmatrix}
 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0\\
 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0\\
 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0\\
 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0
\end{pmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.8em;vertical-align:-2.15em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1
c-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,
-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,
949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9
c0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,
-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189
l0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,
-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,
63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5
c11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209
c-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664
c-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11
c0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17
c242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558
l0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,
-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1
c-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,
-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,
949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9
c0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,
-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189
l0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,
-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,
63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5
c11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209
c-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664
c-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11
c0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17
c242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558
l0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,
-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="技巧"><a class="header-anchor-1" href="#技巧">#</a>技巧</h3>
<h4 id="p-a-b-a-b"><a class="header-anchor-1" href="#p-a-b-a-b">#</a><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>B</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(A,B)=(A&#x27;,B&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></h4>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>E</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>E</mi><mo separator="true">,</mo><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(A, E)=(E, A^{-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>, 求 A 逆常用方法</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>E</mi><mo separator="true">,</mo><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>B</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(A, B)=(E, A^{-1}B)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span>, 解方程常用方法</li>
</ul>
<h3 id="矩阵的秩"><a class="header-anchor-1" href="#矩阵的秩">#</a>矩阵的秩</h3>
<ul>
<li>子式: 从行中选出一个子序列, 再从列中选出一个子序列, 得到的结果</li>
<li>秩: 最高阶非零子式的阶数</li>
</ul>
<h4 id="性质-4"><a class="header-anchor-1" href="#性质-4">#</a>性质</h4>
<ol>
<li>秩一定小于行(列)数</li>
<li>转置不改变秩</li>
<li>等价矩阵的秩一样: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∼</mo><mi>B</mi><mo>⇔</mo><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>R</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">A\sim B\Leftrightarrow{R(A)=R(B)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span></span></li>
<li>乘可逆矩阵不改变秩</li>
<li>拼接矩阵的秩可能比原秩要大: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">{</mo><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo>≤</mo><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mtext>  </mtext><mi>B</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">max\{R(A),R(B)\}\le{R(A~~B)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)}</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span></span></li>
<li>拼接矩阵的秩不会大于原秩之和: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mtext>  </mtext><mi>B</mi><mo stretchy="false">)</mo><mo>≤</mo><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>+</mo><mi>R</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">R(A~~B)\le{R(A)+R(B)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span></span></li>
<li>
<hr />
</li>
<li>秩和大于和秩(由上一条可证): <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo>+</mo><mi>B</mi><mo stretchy="false">)</mo><mo>≤</mo><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>+</mo><mi>R</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">R(A+B)\le{R(A)+R(B)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span></span></li>
<li>矩阵积的秩不大于任何一个原秩(从变换角度看): <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mi>B</mi><mo stretchy="false">)</mo><mo>≤</mo><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">{</mo><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow></mrow><annotation encoding="application/x-tex">R(AB)\le{min\{R(A),R(B)\}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">min</span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)}</span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mi>m</mi><mo>×</mo><mi>n</mi></mrow></msub><msub><mi>B</mi><mrow><mi>n</mi><mo>×</mo><mi>l</mi></mrow></msub><mo>=</mo><mi>O</mi><mo>⇒</mo><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>+</mo><mi>R</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>n</mi></mrow></mrow><annotation encoding="application/x-tex">A_{m\times n}B_{n\times l}=O\Rightarrow{R(A)+R(B)\le{n}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2583em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span></span></span></span></li>
<li>
<hr />
</li>
</ol>
<p>列满秩: 秩等于列数, 对应的行最简形矩阵为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>E</mi><mi>n</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>O</mi></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mrow><mi>m</mi><mo>×</mo><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\begin{pmatrix}E_{n} \\ O\end{pmatrix}_{m\times n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.5081em;vertical-align:-1.0581em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.5914em;"><span style="top:-1.7003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0581em;"><span></span></span></span></span></span></span></span></span></span></p>
<ol start="10">
<li>乘法消去律: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>B</mi><mo>=</mo><mi>O</mi><mo separator="true">,</mo><mi>A</mi><mtext>列满秩</mtext><mo>⇒</mo><mi>B</mi><mo>=</mo><mi>O</mi></mrow><annotation encoding="application/x-tex">AB=O, A列满秩\Rightarrow B=O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">列满秩</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span></li>
</ol>
<h3 id="秩与线性方程组的解"><a class="header-anchor-1" href="#秩与线性方程组的解">#</a>秩与线性方程组的解</h3>
<ul>
<li>相容: 有解</li>
<li>不相容: 无解</li>
<li>判断条件<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>x</mi><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">Ax=b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></li>
<li>无解<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇔</mo><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mtext>  </mtext><mi>b</mi><mo stretchy="false">)</mo></mrow></mrow></mrow><annotation encoding="application/x-tex">\Leftrightarrow{R(A)\lt{R(A~~b)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></span></span></li>
<li>有解<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇔</mo><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mtext>  </mtext><mi>b</mi><mo stretchy="false">)</mo></mrow></mrow></mrow><annotation encoding="application/x-tex">\Leftrightarrow{R(A)={R(A~~b)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></span></span>
<ul>
<li>有唯一解(齐次就是零解)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇔</mo><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mtext>  </mtext><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>n</mi></mrow></mrow><annotation encoding="application/x-tex">\Leftrightarrow{R(A)=R(A~~b)=n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span></span></span></span></span></li>
<li>有无穷解(齐次有非零解)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇔</mo><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mtext>  </mtext><mi>b</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>n</mi></mrow></mrow><annotation encoding="application/x-tex">\Leftrightarrow{R(A)=R(A~~b)\lt n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span></span></span></span></span></li>
</ul>
</li>
</ul>
<h2 id="4-向量组-线性相关性"><a class="header-anchor-1" href="#4-向量组-线性相关性">#</a>4. 向量组, 线性相关性</h2>
<ul>
<li>n 维向量</li>
<li>实向量</li>
<li>复向量</li>
<li>单位坐标向量: E 的列向量</li>
</ul>
<h3 id="向量组"><a class="header-anchor-1" href="#向量组">#</a>向量组</h3>
<h3 id="线性表示"><a class="header-anchor-1" href="#线性表示">#</a>线性表示</h3>
<ul>
<li>线性组合</li>
<li><strong>线性表示</strong>: 一个向量(组)能被另一个向量组线性表示</li>
<li>向量组等价: 两个向量组能互相线性表示</li>
</ul>
<h4 id="定理"><a class="header-anchor-1" href="#定理">#</a>定理</h4>
<ul>
<li>
<p>向量 b 能被向量组 A 线性表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇔</mo><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mtext>  </mtext><mi>b</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">\Leftrightarrow{R(A)=R(A~~b)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<p>向量组 A 能被向量组 B 线性表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇔</mo><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mtext>  </mtext><mi>B</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow R(A)=R(A~~B)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>向量组 A, B 能相互线性表示(等价) <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇔</mo><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>R</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mtext>  </mtext><mi>B</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">\Leftrightarrow{R(A)=R(B)=R(A~~B)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<hr />
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>若</mtext><mi>A</mi><mi>B</mi><mo>=</mo><mi>C</mi><mo separator="true">,</mo><mtext>则</mtext><mi>C</mi><mtext>的列向量组能被</mtext><mi>A</mi><mtext>的列向量组线性表示</mtext><mo separator="true">,</mo><mtext>表示的系数为</mtext><mi>B</mi></mrow><annotation encoding="application/x-tex">若AB=C, 则C的列向量组能被A的列向量组线性表示, 表示的系数为B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">若</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">则</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord cjk_fallback">的列向量组能被</span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">的列向量组线性表示</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">表示的系数为</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span></p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>同理</mtext><mo separator="true">,</mo><mi>C</mi><mtext>的行向量组能被</mtext><mi>B</mi><mtext>的行向量组线性表示</mtext><mo separator="true">,</mo><mtext>表示的系数为</mtext><mi>A</mi></mrow><annotation encoding="application/x-tex">同理, C的行向量组能被B的行向量组线性表示, 表示的系数为A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">同理</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord cjk_fallback">的行向量组能被</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord cjk_fallback">的行向量组线性表示</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">表示的系数为</span><span class="mord mathnormal">A</span></span></span></span></p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>向量组</mtext><mi>B</mi><mtext>能被向量组</mtext><mi>A</mi><mtext>线性表示</mtext><mo>⇔</mo><mi>R</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mi>R</mi><mo stretchy="false">(</mo><mi>B</mi><mtext>  </mtext><mi>A</mi><mo stretchy="false">)</mo><mo>⇒</mo><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">向量组B能被向量组A线性表示\Leftrightarrow R(B)=R(B~~A)\Rightarrow{R(B)\le R(A)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">向量组</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord cjk_fallback">能被向量组</span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">线性表示</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></span></p>
</li>
</ul>
<h3 id="线性相关"><a class="header-anchor-1" href="#线性相关">#</a>线性相关</h3>
<p>线性相关: 存在一个系数非全零的线性组合=0 的向量组</p>
<p>线性无关</p>
<h4 id="性质-5"><a class="header-anchor-1" href="#性质-5">#</a>性质</h4>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>线性相关</mtext><mo>⇔</mo><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>m</mi></mrow></mrow><annotation encoding="application/x-tex">线性相关\Leftrightarrow{R(A)\lt m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">线性相关</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">m</span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>线性无关</mtext><mo>⇔</mo><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi></mrow></mrow><annotation encoding="application/x-tex">线性无关\Leftrightarrow{R(A)=m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">线性无关</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">m</span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>线性相关具有保持性质</mtext></mrow><annotation encoding="application/x-tex">线性相关具有保持性质</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">线性相关具有保持性质</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>秩</mtext><mo>&lt;</mo><mtext>向量个数</mtext><mo>⇔</mo><mtext>线性相关</mtext></mrow><annotation encoding="application/x-tex">秩\lt向量个数\Leftrightarrow{线性相关}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord cjk_fallback">秩</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">向量个数</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord cjk_fallback">线性相关</span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>向量维数</mtext><mo>&lt;</mo><mtext>向量个数</mtext><mo>⇒</mo><mtext>线性相关</mtext></mrow><annotation encoding="application/x-tex">向量维数\lt向量个数\Rightarrow{线性相关}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord cjk_fallback">向量维数</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">向量个数</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord cjk_fallback">线性相关</span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>线性无关向量组</mtext><mi>A</mi><mo>+</mo><mi>b</mi><mtext>变线性相关</mtext><mo>⇒</mo><mrow><mi>b</mi><mtext>能被</mtext><mi>A</mi><mtext>唯一线性表示</mtext></mrow></mrow><annotation encoding="application/x-tex">线性无关向量组A+b变线性相关\Rightarrow{b能被A唯一线性表示}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord cjk_fallback">线性无关向量组</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mord cjk_fallback">变线性相关</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="mord cjk_fallback">能被</span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">唯一线性表示</span></span></span></span></span></li>
</ul>
<h3 id="向量组的秩"><a class="header-anchor-1" href="#向量组的秩">#</a>向量组的秩</h3>
<p>向量组</p>
<p>最大(线性)无关(向量)组</p>
<p>秩: 最大无关组的向量个数</p>
<h4 id="性质见上节"><a class="header-anchor-1" href="#性质见上节">#</a>性质见上节</h4>
<h3 id="线性方程组解的结构"><a class="header-anchor-1" href="#线性方程组解的结构">#</a>线性方程组解的结构</h3>
<ul>
<li>齐次: 解的线性组合仍是解</li>
<li>因此只要找到解集的一个最大无关组即可得出所有解</li>
</ul>
<h4 id="齐次线性方程组-ax-o"><a class="header-anchor-1" href="#齐次线性方程组-ax-o">#</a>齐次线性方程组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>x</mi><mo>=</mo><mi>O</mi></mrow><annotation encoding="application/x-tex">Ax=O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span></h4>
<ul>
<li>基本解系: 齐次的解集的一个最大无关组</li>
<li>基本解系的秩:
<ul>
<li>对于方程组<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mi>m</mi><mo>×</mo><mi>n</mi></mrow></msub><mi>x</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><msub><mi>R</mi><mi>S</mi></msub><mo>=</mo><mi>n</mi><mo>−</mo><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A_{m\times n}x=0, R_S=n-R(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2583em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></li>
</ul>
</li>
<li>求解步骤:
<ol>
<li>对 A 进行行变换变成行最简形矩阵</li>
<li>得到 x 之间的关系</li>
<li>给每个自由变量赋值一个线性无关的向量(一般取单位向量)</li>
</ol>
</li>
</ul>
<p>例题:</p>
<p><img src="qiutongjie.png" alt="" /></p>
<h5 id="性质-6"><a class="header-anchor-1" href="#性质-6">#</a>性质</h5>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>x</mi><mo>=</mo><mi>O</mi></mrow><annotation encoding="application/x-tex">Ax=O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mi>x</mi><mo>=</mo><mi>O</mi></mrow><annotation encoding="application/x-tex">Bx=O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span> 同解 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇒</mo><mi>R</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>R</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Rightarrow R(A)=R(B)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span></li>
</ul>
<h4 id="非齐次线性方程组-ax-b"><a class="header-anchor-1" href="#非齐次线性方程组-ax-b">#</a>非齐次线性方程组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>x</mi><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">Ax=b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></h4>
<ul>
<li>非齐次: 利用齐次</li>
<li>找到一个特解, 加上齐次的通解即为最终解</li>
</ul>
<h3 id="向量空间"><a class="header-anchor-1" href="#向量空间">#</a>向量空间</h3>
<ul>
<li>向量空间: 对线性运算封闭的集合</li>
<li>子空间: 含于另一个向量空间的向量空间</li>
<li>基: 在向量空间中, 可以线性表示空间中任一向量的线性无关的向量组</li>
<li>自然基: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>R</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">R^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>中的单位坐标向量组</li>
<li>维数: 基的向量个数(固定)</li>
<li>坐标: 一个向量在某一个基下的表示</li>
<li><strong>基变换公式</strong>: 用一个基来表示另一个基的坐标(没啥用)</li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>B</mi><mo>=</mo><mi>A</mi><mi>P</mi><mo>=</mo><mi>A</mi><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>B</mi></mrow><annotation encoding="application/x-tex">B=AP=AA^{-1}B
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord mathnormal">A</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span></span></p>
<ul>
<li><strong>过渡矩阵</strong>: 旧基逆乘新基, 可以用初等变换的方法快速求</li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>=</mo><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>B</mi></mrow><annotation encoding="application/x-tex">P=A^{-1}B
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span></span></p>
<ul>
<li><strong>坐标变换公式</strong>: 一个向量在两个不同基下的坐标的关系式</li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>新坐标 </mtext><mi>Z</mi><mo>=</mo><msup><mi>P</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>Y</mi></mrow><annotation encoding="application/x-tex">新坐标~Z=P^{-1}Y
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">新坐标</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span></span></p>
<h2 id="5-相似矩阵与二次型"><a class="header-anchor-1" href="#5-相似矩阵与二次型">#</a>5. 相似矩阵与二次型</h2>
<ul>
<li>内积: 数量积的推广, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">]</mo><mo>=</mo><msup><mi>A</mi><mi>T</mi></msup><mi>B</mi></mrow><annotation encoding="application/x-tex">[A,B]=A^TB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span></li>
<li>长度(范数): 模的推广, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">∣</mo><mrow><mo fence="true">∣</mo><mi>x</mi><mo fence="true">∣</mo></mrow><mo fence="true">∣</mo></mrow><mo>=</mo><msqrt><mrow><mo stretchy="false">[</mo><mi>x</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">]</mo></mrow></msqrt></mrow><annotation encoding="application/x-tex">\left|\left|x\right|\right|=\sqrt{[x,x]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.305em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mclose">]</span></span></span><span style="top:-2.895em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305em;"><span></span></span></span></span></span></span></span></span></li>
<li>投影: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>=</mo><mfrac><mrow><mo stretchy="false">[</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">]</mo></mrow><mrow><mo stretchy="false">[</mo><mi>b</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">]</mo></mrow></mfrac><mi>b</mi></mrow><annotation encoding="application/x-tex">c=\frac{[a,b]}{[b,b]}b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathnormal mtight">b</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">]</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathnormal mtight">a</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">b</span></span></span></span></li>
<li>单位向量</li>
<li>单位化</li>
<li>夹角: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mo>=</mo><mi>arccos</mi><mo>⁡</mo><mfrac><mrow><mo stretchy="false">[</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">]</mo></mrow><mrow><mrow><mo fence="true">∣</mo><mrow><mo fence="true">∣</mo><mi>x</mi><mo fence="true">∣</mo></mrow><mo fence="true">∣</mo></mrow><mtext> </mtext><mrow><mo fence="true">∣</mo><mrow><mo fence="true">∣</mo><mi>y</mi><mo fence="true">∣</mo></mrow><mo fence="true">∣</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">\theta=\arccos{\frac{[x,y]}{\left|\left|x\right|\right|~\left|\left|y\right|\right|}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mop">arccos</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span><span class="mord mathnormal mtight">x</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span></span><span class="mspace nobreak mtight"><span class="mtight"> </span></span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></li>
</ul>
<h3 id="正交矩阵"><a class="header-anchor-1" href="#正交矩阵">#</a>正交矩阵</h3>
<ul>
<li>正交: 夹角为 0</li>
<li>正交向量组: 一组向量两两正交, 必定线性无关</li>
<li>标准正交基: 单位向量组成的正交向量组</li>
<li>标准正交化, 施密特正交化</li>
<li>正交(矩)阵: 单位正交向量组构成的矩阵
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><msup><mi>A</mi><mi>T</mi></msup><mo>=</mo><mi>E</mi><mo>=</mo><msup><mi>A</mi><mi>T</mi></msup><mi>A</mi></mrow><annotation encoding="application/x-tex">AA^T=E=A^TA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord mathnormal">A</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">A</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mi>T</mi></msup><mo>=</mo><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">A^T=A^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">∣</mo><mi>A</mi><mo fence="true">∣</mo></mrow><mo>=</mo><mn>1</mn><mtext>或</mtext><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\left|A\right|=1或-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">A</span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mord cjk_fallback">或</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></li>
<li>正交矩阵的逆(转置)也是正交矩阵</li>
<li>正交矩阵的积还是正交矩阵</li>
</ul>
</li>
<li>正交变换: 若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>是正交矩阵, 则线性变换<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>P</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">y=Px</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">x</span></span></span></span>称为正交变换
<ul>
<li>变换前后的长度不变 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>y</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>=</mo><msqrt><mrow><msup><mi>y</mi><mi>T</mi></msup><mi>y</mi></mrow></msqrt><mo>=</mo><msqrt><mrow><msup><mi>x</mi><mi>T</mi></msup><msup><mi>P</mi><mi>T</mi></msup><mi>P</mi><mi>x</mi></mrow></msqrt><mo>=</mo><msqrt><mrow><msup><mi>x</mi><mi>T</mi></msup><mi>x</mi></mrow></msqrt><mo>=</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">||y||=\sqrt{y^Ty}=\sqrt{x^TP^TPx}=\sqrt{x^Tx}=||x||</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.2686em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9714em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7673em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.9314em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2686em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.0713em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9687em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7673em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7673em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">x</span></span></span><span style="top:-2.9287em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.0713em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.0713em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9687em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7673em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span></span></span><span style="top:-2.9287em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.0713em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣∣</span><span class="mord mathnormal">x</span><span class="mord">∣∣</span></span></span></span></li>
</ul>
</li>
</ul>
<h3 id="特征值和特征向量"><a class="header-anchor-1" href="#特征值和特征向量">#</a>特征值和特征向量</h3>
<p>特征多项式: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">∣</mo><mi>A</mi><mo>−</mo><mi>λ</mi><mi>E</mi><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">f(\lambda)=\left|A-\lambda E\right|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">λ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">λ</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span></p>
<p>特征值/特征向量: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mtext>为</mtext><mi>n</mi><mtext>阶矩阵</mtext><mo separator="true">,</mo><mtext>满足</mtext><mi>A</mi><mi>x</mi><mo>=</mo><mi>λ</mi><mi>x</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>A</mi><mo>−</mo><mi>λ</mi><mi>E</mi><mo stretchy="false">)</mo><mi>x</mi><mo>=</mo><mn>0</mn><mtext>的</mtext><mi>λ</mi><mtext>和</mtext><mi>x</mi></mrow><annotation encoding="application/x-tex">A为n阶矩阵, 满足Ax=\lambda x, (A-\lambda E)x=0的\lambda和x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">阶矩阵</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">满足</span><span class="mord mathnormal">A</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">λ</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">λ</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">0</span><span class="mord cjk_fallback">的</span><span class="mord mathnormal">λ</span><span class="mord cjk_fallback">和</span><span class="mord mathnormal">x</span></span></span></span></p>
<p>个数: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mtext>是一元</mtext><mi>n</mi><mtext>次方程</mtext><mo separator="true">,</mo><mi>λ</mi><mtext>必有</mtext><mi>n</mi><mtext>个根</mtext><mo separator="true">,</mo><mtext>所以方程有</mtext><mi>n</mi><mtext>个解</mtext></mrow><annotation encoding="application/x-tex">f(\lambda)=0是一元n次方程, \lambda必有n个根, 所以方程有n个解</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">λ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mord cjk_fallback">是一元</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">次方程</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">λ</span><span class="mord cjk_fallback">必有</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">个根</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">所以方程有</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">个解</span></span></span></span></p>
<h4 id="性质-7"><a class="header-anchor-1" href="#性质-7">#</a>性质</h4>
<ul>
<li>特征值之和等于矩阵的迹</li>
<li>特征值之积等于矩阵的行列式</li>
<li>矩阵多项式的特征值等于矩阵特征值的多项式: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(\lambda)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">λ</span><span class="mclose">)</span></span></span></span>是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span>的特征值</li>
<li>特征值各不相等 -&gt; 特征向量线性无关</li>
<li>对角矩阵的对角元就是其特征值</li>
</ul>
<h4 id="求法"><a class="header-anchor-1" href="#求法">#</a>求法</h4>
<ol>
<li>根据特征多项式=0 求出特征值</li>
<li>将每个特征值代回原方程, 写出特征向量(个数=n-特征值重数)</li>
</ol>
<h3 id="相似矩阵"><a class="header-anchor-1" href="#相似矩阵">#</a>相似矩阵</h3>
<p>相似矩阵: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>A</mi><mi>P</mi><mo>=</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">P^{-1}AP=B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span></p>
<p>相似变换: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>A</mi><mi>P</mi></mrow><annotation encoding="application/x-tex">P^{-1}AP</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span></p>
<h4 id="性质-8"><a class="header-anchor-1" href="#性质-8">#</a>性质</h4>
<ul>
<li>特征多项式(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">∣</mo><mi>A</mi><mo>−</mo><mi>λ</mi><mi>E</mi><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">f(\lambda)=\left|A-\lambda E\right|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">λ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">λ</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span>)相同</li>
<li>特征值相同</li>
<li>迹相同</li>
<li><strong>计算矩阵多项式</strong>: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mi>φ</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo><msup><mi>P</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\varphi(A)=P\varphi(B)P^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Pφ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>
<ul>
<li>一般 B 是对角矩阵, 从而可以快速计算 B 的幂:</li>
</ul>
</li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi mathvariant="normal">Λ</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>φ</mi><mo stretchy="false">(</mo><msub><mi>λ</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>φ</mi><mo stretchy="false">(</mo><msub><mi>λ</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>φ</mi><mo stretchy="false">(</mo><msub><mi>λ</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\varphi(\Lambda)=\begin{pmatrix}
\varphi(\lambda_1)&amp;&amp;&amp;\\
&amp;\varphi(\lambda_2)&amp;&amp;\\
&amp;&amp;...&amp;\\
&amp;&amp;&amp;\varphi(\lambda_n)
\end{pmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord">Λ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.8em;vertical-align:-2.15em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1
c-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,
-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,
949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9
c0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,
-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189
l0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,
-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,
63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5
c11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209
c-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664
c-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11
c0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17
c242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558
l0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,
-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h4 id="对角化"><a class="header-anchor-1" href="#对角化">#</a>对角化</h4>
<p>对角化: 寻找相似变换矩阵 P 来使<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>A</mi><mi>P</mi><mo>=</mo><mi mathvariant="normal">Λ</mi></mrow><annotation encoding="application/x-tex">P^{-1}AP=\Lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Λ</span></span></span></span>为对角矩阵</p>
<p>能对角化的条件: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mtext>有</mtext><mi>n</mi><mtext>个线性无关的特征向量</mtext></mrow><annotation encoding="application/x-tex">A有n个线性无关的特征向量</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">有</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">个线性无关的特征向量</span></span></span></span></p>
<ul>
<li>常用条件:</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>有</mtext><mi>n</mi><mtext>个各不相同的特征值</mtext></mrow><annotation encoding="application/x-tex">有n个各不相同的特征值</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">有</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">个各不相同的特征值</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>如果特征值有重根</mtext><mo separator="true">,</mo><mtext>则可以判断特征矩阵的秩</mtext></mrow><annotation encoding="application/x-tex">如果特征值有重根, 则可以判断特征矩阵的秩</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">如果特征值有重根</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">则可以判断特征矩阵的秩</span></span></span></span></li>
</ul>
<h4 id="对称矩阵的对角化"><a class="header-anchor-1" href="#对称矩阵的对角化">#</a>对称矩阵的对角化</h4>
<p>对称矩阵的性质:</p>
<ul>
<li>特征值为实数</li>
<li>不相等的特征值对应的特征向量正交</li>
<li>一定存在正交矩阵 P 使得 A<strong>可以被对角化</strong>为以特征值为对角元的对角矩阵</li>
</ul>
<p>求法:</p>
<ol>
<li>求出 A 的特征值</li>
<li>求出所有特征向量</li>
<li>把这些特征向量正交化, 单位化</li>
<li>排列得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Λ</mi></mrow><annotation encoding="application/x-tex">\Lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Λ</span></span></span></span>, 注意两者对应</li>
</ol>
<p><img src="duijiaohua.png" alt="" /></p>
<h3 id="二次型-标准形"><a class="header-anchor-1" href="#二次型-标准形">#</a>二次型, 标准形</h3>
<p>二次型: 含 n 个变量的<strong>二次齐次</strong>函数</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo>∑</mo><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><msub><mi>x</mi><mi>i</mi></msub><msub><mi>x</mi><mi>j</mi></msub></mrow></mrow><annotation encoding="application/x-tex">f(x_1,x_2,...,x_n)=\sum{a_{i,j}x_{i}x_{j}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>标准形(法式): 只含<strong>平方项</strong>的二次型</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo>∑</mo><mrow><msub><mi>k</mi><mi>i</mi></msub><msubsup><mi>x</mi><mi>i</mi><mn>2</mn></msubsup></mrow></mrow><annotation encoding="application/x-tex">f(x_1,x_2,...,x_n)=\sum{k_{i}x_{i}^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0728em;vertical-align:-0.2587em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>规范形: 系数只在-1,0,1 中取值的标准形</p>
<p>二次型的矩阵表示: 二次型可以用系数组成的对称矩阵唯一表示</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>f</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo>∑</mo><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>x</mi><mi>i</mi></msub><msub><mi>x</mi><mi>j</mi></msub></mrow><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>i</mi></mrow></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mi>n</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>11</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>12</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mn>1</mn><mi>n</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>21</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>22</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mn>2</mn><mi>n</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mi>n</mi><mn>1</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mi>n</mi><mn>2</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mi>n</mi><mi>n</mi></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>2</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mi>n</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msup><mi>x</mi><mi>T</mi></msup><mi>A</mi><mi>x</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
f&amp;=\sum{a_{ij}x_{i}x_{j}}, (a_{ij}=a_{ji})\\
&amp;=\begin{pmatrix}
x_1&amp;x_2&amp;...&amp;x_n
\end{pmatrix}
\begin{pmatrix}
a_{11}&amp;a_{12}&amp;...&amp;a_{1n}\\
a_{21}&amp;a_{22}&amp;...&amp;a_{2n}\\
...&amp;...&amp;...&amp;...\\
a_{n1}&amp;a_{n2}&amp;...&amp;a_{nn}
\end{pmatrix}
\begin{pmatrix}
x_1\\
x_2\\
...\\
x_n
\end{pmatrix}\\
&amp;=x^TAx
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.5514em;vertical-align:-4.0257em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.5257em;"><span style="top:-8.1257em;"><span class="pstrut" style="height:4.65em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span style="top:-4.6257em;"><span class="pstrut" style="height:4.65em;"></span><span class="mord"></span></span><span style="top:-1.2843em;"><span class="pstrut" style="height:4.65em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.0257em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.5257em;"><span style="top:-8.1257em;"><span class="pstrut" style="height:4.65em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ji</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-4.6257em;"><span class="pstrut" style="height:4.65em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1
c-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,
-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,
949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9
c0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,
-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189
l0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,
-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">21</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">nn</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,
63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5
c11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209
c-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664
c-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11
c0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17
c242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558
l0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,
-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1
c-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,
-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,
949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9
c0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,
-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189
l0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,
-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,
63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5
c11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209
c-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664
c-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11
c0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17
c242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558
l0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,
-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-1.2843em;"><span class="pstrut" style="height:4.65em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">A</span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.0257em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>二次型的秩: 对应矩阵的秩</p>
<h3 id="合同对角化"><a class="header-anchor-1" href="#合同对角化">#</a>合同对角化</h3>
<p><strong>合同</strong>: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>若存在可逆矩阵</mtext><mi>C</mi><mtext>使得</mtext><mi>B</mi><mo>=</mo><msup><mi>C</mi><mi>T</mi></msup><mi>A</mi><mi>C</mi><mo separator="true">,</mo><mtext>则称</mtext><mi>B</mi><mtext>与</mtext><mi>A</mi><mtext>合同</mtext></mrow><annotation encoding="application/x-tex">若存在可逆矩阵C使得B=C^TAC, 则称B与A合同</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">若存在可逆矩阵</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord cjk_fallback">使得</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">则称</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord cjk_fallback">与</span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">合同</span></span></span></span></p>
<p>性质</p>
<ul>
<li>对阵矩阵的合同矩阵也对称</li>
</ul>
<p><strong>合同对角化</strong>: 寻找可逆矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>, 使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>C</mi><mi>T</mi></msup><mi>A</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">C^TAC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>为对角矩阵, 从而使二次型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>通过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mi>C</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">x=Cy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>变换成标准形</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>f</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msup><mi>x</mi><mi>T</mi></msup><mi>A</mi><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msup><mi>y</mi><mi>T</mi></msup><mo stretchy="false">(</mo><msup><mi>C</mi><mi>T</mi></msup><mi>A</mi><mi>C</mi><mo stretchy="false">)</mo><mi>y</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
f&amp;=x^TAx\\
&amp;=y^T(C^TAC)y
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.1027em;vertical-align:-1.3013em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8013em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span style="top:-2.3587em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3013em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8013em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">A</span><span class="mord mathnormal">x</span></span></span><span style="top:-2.3587em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3013em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>可以证明(由对称矩阵性质)这个矩阵一定存在, 而且是正交矩阵, 变换后的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>C</mi><mi>T</mi></msup><mi>A</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">C^TAC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>由特征值构成</p>
<h3 id="正定二次型"><a class="header-anchor-1" href="#正定二次型">#</a>正定二次型</h3>
<p>惯性定理: 同一个二次型的两种标准化结果中正负系数的个数相同</p>
<p>正(负)惯性指数: 其中的正(负)系数的个数</p>
<p>正(负)定二次型, 正(负)定矩阵: 如果二次型的值恒大(小)于零(x=0 除外), 则称 f 为正(负)定二次型, 称 A 是正(负)定的</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>正定</mtext><mo>⇔</mo><mtext>正惯性指数</mtext><mo>=</mo><mi>n</mi><mo>⇔</mo><mtext>特征值全正</mtext><mo>⇔</mo><mtext>各阶主子式都为正</mtext><mo>⇔</mo><mtext>存在可逆</mtext><mi>P</mi><mo separator="true">,</mo><mtext>使得</mtext><msup><mi>P</mi><mi>T</mi></msup><mi>A</mi><mi>P</mi><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><mtext>与</mtext><mi>E</mi><mtext>合同</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">正定\Leftrightarrow正惯性指数=n\Leftrightarrow特征值全正\Leftrightarrow各阶主子式都为正\Leftrightarrow存在可逆P,使得P^TAP=E(与E合同)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">正定</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">正惯性指数</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">特征值全正</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">各阶主子式都为正</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">存在可逆</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">使得</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord cjk_fallback">与</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord cjk_fallback">合同</span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>负定</mtext><mo>⇔</mo><mtext>奇数阶主子式为负</mtext><mo separator="true">,</mo><mtext>偶数阶为正</mtext></mrow><annotation encoding="application/x-tex">负定\Leftrightarrow奇数阶主子式为负, 偶数阶为正</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">负定</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">奇数阶主子式为负</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">偶数阶为正</span></span></span></span></li>
</ul>
<h2 id="6-线性空间与线性变换"><a class="header-anchor-1" href="#6-线性空间与线性变换">#</a>6. 线性空间与线性变换</h2>
<ul>
<li>向量空间(线性空间): 定义了线性运算且封闭, 且满足以下运算规律的非空集合
<ol>
<li>加法交换律 结合律</li>
<li>加法零元 逆元</li>
<li>乘法单位元</li>
<li>乘法交换律 结合律</li>
<li>乘法对加法分配律</li>
</ol>
</li>
<li>向量: 线性空间中的元素</li>
<li>子空间: 线性空间的仍是线性空间的非空子集</li>
<li>基, 维数, 坐标: 同线性空间</li>
<li>过渡矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>=</mo><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>B</mi></mrow><annotation encoding="application/x-tex">P=A^{-1}B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span></li>
<li>基变换公式, 坐标变换公式</li>
</ul>
<h3 id="线性变换"><a class="header-anchor-1" href="#线性变换">#</a>线性变换</h3>
<ul>
<li>映射(变换): 表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo><mtext>或</mtext><mi>β</mi><mo>=</mo><mi>T</mi><mi>α</mi></mrow><annotation encoding="application/x-tex">\beta=T(\alpha)或\beta=T\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mord cjk_fallback">或</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span></li>
<li>定义域 A, 值域 B, 像集 T(A): <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>β</mi><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi>α</mi><mo>∈</mo><mi>A</mi><mo stretchy="false">}</mo><mo>⊆</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">T(A)=\{\beta=T(\alpha)|\alpha\in A\} \subseteq B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span></li>
<li>线性映射(线性变换)
<ul>
<li>从 Vn 到 Um 的保持线性组合的对应关系的映射. 特别地, 如果 Vn=Um, 称 T 为线性空间 Vn 中的线性变换</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>a</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>+</mo><mi>T</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(a+b)=T(a)+T(b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>λ</mi><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>λ</mi><mi>T</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(\lambda b)=\lambda T(b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">λb</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">λ</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></li>
</ul>
</li>
<li>线性变换的性质:
<ol>
<li>T(0)=0</li>
<li>线性组合的变换等于变换的线性组合</li>
<li>变换前线性相关=&gt;变换后也线性相关</li>
<li>像集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><msub><mi>V</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(V_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>也是线性空间, 称为<strong>像空间</strong></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>T</mi></msub><mo>=</mo><mo stretchy="false">{</mo><mi>α</mi><mi mathvariant="normal">∣</mi><mi>α</mi><mo>∈</mo><msub><mi>V</mi><mi>n</mi></msub><mo separator="true">,</mo><mi>T</mi><mi>α</mi><mo>=</mo><mn>0</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">N_T=\{\alpha|\alpha\in V_n, T\alpha=0\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">}</span></span></span></span>构成线性空间, 称为线性变换 T 的<strong>核</strong></li>
</ol>
</li>
</ul>
<h3 id="线性变换的矩阵表示"><a class="header-anchor-1" href="#线性变换的矩阵表示">#</a>线性变换的矩阵表示</h3>
<p>线性变换的矩阵: 在 Vn 中取定一个基, 这个基的像的线性表示的系数矩阵称为线性变换在这个基下的矩阵, 即</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>T</mi><mo stretchy="false">(</mo><msub><mi>α</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><msub><mi>a</mi><mrow><mi>j</mi><mn>1</mn></mrow></msub><msub><mi>α</mi><mi>j</mi></msub></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>T</mi><mo stretchy="false">(</mo><msub><mi>α</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><msub><mi>a</mi><mrow><mi>j</mi><mn>2</mn></mrow></msub><msub><mi>α</mi><mi>j</mi></msub></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>T</mi><mo stretchy="false">(</mo><msub><mi>α</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><msub><mi>a</mi><mrow><mi>j</mi><mi>n</mi></mrow></msub><msub><mi>α</mi><mi>j</mi></msub></mrow></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\left\{\begin{matrix}
T(\alpha_1)=\sum_{j=1}^{n}{a_{j1}\alpha_j}\\
T(\alpha_2)=\sum_{j=1}^{n}{a_{j2}\alpha_j}\\
...\\
T(\alpha_n)=\sum_{j=1}^{n}{a_{jn}\alpha_j}
\end{matrix}\right.
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.0275em;vertical-align:-2.2637em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-1.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.892em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.616em" style="width:0.8889em" viewBox="0 0 888.89 616" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V616 H384z M384 0 H504 V616 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.616em" style="width:0.8889em" viewBox="0 0 888.89 616" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V616 H384z M384 0 H504 V616 H384z"/></svg></span></span><span style="top:-4.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7637em;"><span style="top:-4.9237em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.6479em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.3721em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span><span style="top:-1.1721em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">jn</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2637em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>令</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>11</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>12</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mn>1</mn><mi>n</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>21</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>22</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mn>2</mn><mi>n</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">:</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">:</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">:</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mi>n</mi><mn>1</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mi>n</mi><mn>2</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mi>n</mi><mi>n</mi></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">A=\begin{pmatrix}
a_{11}&amp; a_{12}&amp; ...&amp; a_{1n}\\
a_{21}&amp; a_{22}&amp; ...&amp; a_{2n}\\
:&amp; :&amp; &amp; :\\
a_{n1}&amp; a_{n2}&amp; ...&amp; a_{nn}\\
\end{pmatrix}\\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.8em;vertical-align:-2.15em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1
c-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,
-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,
949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9
c0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,
-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189
l0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,
-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">21</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">:</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">:</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">:</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">nn</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.875em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="4.800em" viewBox="0 0 875 4800"><path d="M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,
63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5
c11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209
c-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664
c-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11
c0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17
c242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558
l0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,
-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span></span><span class="mspace newline"></span></span></span></span></p>
<p>则</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>T</mi><mo stretchy="false">(</mo><msub><mi>α</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>α</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>α</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><msub><mi>α</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>α</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>α</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mi>A</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
T(\alpha_1, \alpha_2, ..., \alpha_n)&amp;=(\alpha_1, \alpha_2, ..., \alpha_n)A
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5em;vertical-align:-0.5em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1em;"><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1em;"><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h4 id="性质-9"><a class="header-anchor-1" href="#性质-9">#</a>性质</h4>
<ul>
<li>同一个变换在不同基下的矩阵<strong>相似</strong>, 且相似变换矩阵就是两个基的过渡矩阵 P</li>
</ul>
<h4 id="相似-合同与等价"><a class="header-anchor-1" href="#相似-合同与等价">#</a>相似, 合同与等价</h4>
<ul>
<li>等价<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇔</span></span></span></span>AB 秩相同</li>
<li>合同: 等价+正负惯性系数相同</li>
<li>相似: 合同+特征值相同+主对角线元素之和相同+矩阵的值相同</li>
</ul>
<p>由此可见，等价到合同到相似，条件越来越苛刻，AB 共同点越来越多</p>
]]></content>
      <categories>
        <category>maths</category>
      </categories>
      <tags>
        <tag>数学基础</tag>
      </tags>
  </entry>
  <entry>
    <title>模运算的性质(程序设计版)</title>
    <url>/2021/01/10/modulo-arithmetic/</url>
    <content><![CDATA[<h2 id="模运算的性质-程序设计版"><a class="header-anchor-1" href="#模运算的性质-程序设计版">#</a>模运算的性质(程序设计版)</h2>
<p>模运算与基本四则运算有些相似，但是除法例外。其规则如下：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><mo>=</mo><mo stretchy="false">(</mo><mi>a</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><mo>+</mo><mi>b</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">(a + b)\bmod p = (a\bmod p + b\bmod p)\bmod p
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo>−</mo><mi>b</mi><mo stretchy="false">)</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><mo>=</mo><mo stretchy="false">(</mo><mi>a</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><mo>−</mo><mi>b</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">(a - b)\bmod p = (a\bmod p - b\bmod p)\bmod p
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo>×</mo><mi>b</mi><mo stretchy="false">)</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><mo>=</mo><mo stretchy="false">(</mo><mi>a</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><mo>×</mo><mi>b</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">(a \times b)\bmod p = (a\bmod p \times b\bmod p)\bmod p
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>a</mi><mi>b</mi></msup><mo stretchy="false">)</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><mo>=</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>a</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><msup><mo stretchy="false">)</mo><mi>b</mi></msup><mo stretchy="false">)</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">(a^b)\bmod p = ((a\bmod p)^b)\bmod p
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">((</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></span></p>
]]></content>
      <categories>
        <category>maths</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>数学</tag>
      </tags>
  </entry>
  <entry>
    <title>概率论与数理统计 - 概念总结</title>
    <url>/2023/10/27/probability-and-mathematical-statistics/</url>
    <content><![CDATA[<h2 id="基本概念"><a class="header-anchor-1" href="#基本概念">#</a>基本概念</h2>
<dl>
<dt>随机试验</dt>
<dd>可以在相同的条件下重复进行，并且每次试验的结果不确定，但试验前可以明确试验的所有可能结果。</dd>
<dt>样本空间</dt>
<dd>随机试验 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span> 的所有可能结果组成的集合，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>。</dd>
<dt>样本点</dt>
<dd>样本空间中的元素，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ω</mi></mrow><annotation encoding="application/x-tex">\omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span></span></span></span>。</dd>
<dt>事件</dt>
<dd>样本空间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 的子集称为随机事件，简称事件，通常用大写字母 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>C</mi><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">A, B, C, ...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span></span></span></span> 表示。</dd>
<dt>基本事件</dt>
<dd>只包含一个样本点的随机事件。</dd>
</dl>
<ul>
<li>必然事件: 包含所有样本点的随机事件。</li>
<li>不可能事件: 不包含任何样本点的随机事件。</li>
</ul>
<p>事件关系和运算</p>
<ul>
<li>包含关系: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>⊂</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A \subset B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 包含于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>。</li>
<li>相等关系: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A = B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 等于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>。</li>
<li>和事件: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∪</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A \cup B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 至少有一个发生。</li>
<li>积事件: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∩</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A \cap B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 同时发生。</li>
<li>差事件: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>−</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A - B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 发生而 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 不发生。</li>
<li>互斥事件: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∩</mo><mi>B</mi><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">A \cap B = \emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">∅</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 不可能同时发生。</li>
<li>逆事件/对立事件: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∪</mo><mi>B</mi><mo>=</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">A \cup B = S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 至少有一个发生。</li>
</ul>
<dl>
<dt>频数</dt>
<dd>在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 次试验中，事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 发生的次数，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">n_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</dd>
<dt>频率</dt>
<dd>事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 发生的频率，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>n</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><msub><mi>n</mi><mi>A</mi></msub><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">f_n(A) = \frac{n_A}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0567em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7117em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4103em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。</dd>
<dt>概率</dt>
<dd>事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 发生的可能性大小，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span>，满足以下三个条件:</dd>
</dl>
<ul>
<li>非负性: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">P(A) \geq 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>。</li>
<li>规范性: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">P(S) = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。</li>
<li>可列可加性: 若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">A_1, A_2, ...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span></span></span></span> 两两互斥，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msubsup><mo>⋃</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></msubsup><msub><mi>A</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>P</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(\bigcup_{i=1}^{\infty}A_i) = \sum_{i=1}^{\infty}P(A_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">⋃</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</li>
</ul>
<p>概率的性质推论：</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∅</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">P(\emptyset) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord">∅</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>。</li>
<li>有限可加性: 若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">A_1, A_2, ...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span></span></span></span> 两两互斥，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msubsup><mo>⋃</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>A</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mi>P</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(\bigcup_{i=1}^{n}A_i) = \sum_{i=1}^{n}P(A_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">⋃</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</li>
<li>包含事件的概率: 若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>⊂</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A \subset B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(A) \leq P(B)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span>。</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>≤</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">P(A) \leq 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。</li>
<li>互补事件的概率: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(\bar{A}) = 1 - P(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0701em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span>。</li>
<li>加法公式: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo>∪</mo><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>+</mo><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo><mo>−</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo>∩</mo><mi>B</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(A \cup B) = P(A) + P(B) - P(A \cap B)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span>。</li>
</ul>
<dl>
<dt>古典概型/等可能概型</dt>
<dd>符合以下条件的概率模型称为古典概型:</dd>
</dl>
<ol>
<li>试验的样本空间是有限的。</li>
<li>试验的每个基本事件发生的可能性相同。</li>
</ol>
<dl>
<dt>条件概率</dt>
<dd>在事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 已经发生的条件下，事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 发生的概率，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi>B</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(B|A) = \frac{P(AB)}{P(A)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。</dd>
</dl>
<ul>
<li>条件概率仍然是概率，满足概率的三个基本性质。</li>
</ul>
<dl>
<dt>乘法定理, 乘法公式</dt>
<dd><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><mi>B</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(AB) = P(A)P(B|A) = P(B)P(A|B)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span>。</dd>
<dt>划分</dt>
<dd>若一组事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>B</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">B_1, B_2, ...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span></span></span></span> 满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>i</mi></msub><mo>∩</mo><msub><mi>B</mi><mi>j</mi></msub><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">B_i \cap B_j = \emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">∅</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo mathvariant="normal">≠</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i \neq j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>，且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>⋃</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></msubsup><msub><mi>B</mi><mi>i</mi></msub><mo>=</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">\bigcup_{i=1}^{\infty}B_i = S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">⋃</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>，则称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>B</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">B_1, B_2, ...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span></span></span></span> 是样本空间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 的一个划分。</dd>
<dt>全概率公式</dt>
<dd>设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>B</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">B_1, B_2, ...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span></span></span></span> 是样本空间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 的一个划分，且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">P(B_i) &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">i = 1, 2, ...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span></span></span></span>，则对任一事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>，有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>P</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(A) = \sum_{i=1}^{\infty}P(B_i)P(A|B_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</dd>
<dt>贝叶斯公式</dt>
<dd>设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>B</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">B_1, B_2, ...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span></span></span></span> 是样本空间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 的一个划分，且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">P(B_i) &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">i = 1, 2, ...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span></span></span></span>，则对任一事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>，有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>P</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><msub><mi>B</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(B_i|A) = \frac{P(B_i)P(A|B_i)}{\sum_{j=1}^{\infty}P(B_j)P(A|B_j)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6772em;vertical-align:-0.6672em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7047em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.8971em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4603em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6672em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。</dd>
<dt>先验概率</dt>
<dd>根据以往数据分析得到的概率。</dd>
<dt>后验概率</dt>
<dd>得到新的信息后重新加以修正的概率。</dd>
<dt>独立</dt>
<dd>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(AB) = P(A)P(B)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span>，则称事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 与事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 相互独立，简称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A, B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 独立。</dd>
</dl>
<h2 id="随机变量"><a class="header-anchor-1" href="#随机变量">#</a>随机变量</h2>
<dl>
<dt>随机变量</dt>
<dd>定义在样本空间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 上的实值单值函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>=</mo><mi>X</mi><mo stretchy="false">(</mo><mi>e</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X = X(e)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">e</span><span class="mclose">)</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mo>∈</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">e \in S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>。
PS. 将样本空间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 中的每个样本点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">e</span></span></span></span> 对应到实数轴上的一个点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>e</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(e)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">e</span><span class="mclose">)</span></span></span></span>。单值函数: 对定义域每一个自变量 x，其对应的函数值 f（x）是唯一的。</dd>
<dt>离散型随机变量</dt>
<dd>全部取值范围是有限个或可列无限多个的随机变量。</dd>
<dt>(0-1)分布</dt>
<dd>可能结果只有 0 和 1 的分布，记 0 的概率为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span>，1 的概率为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>−</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">1-p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>=</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>p</mi><mi>k</mi></msup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mrow><mn>1</mn><mo>−</mo><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">P(X=k) = p^k(1-p)^{1-k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span>。</dd>
<dt>伯努利试验</dt>
<dd>可能结果只有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8201em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span></span></span> 的随机试验。将伯努利试验独立重复进行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 次，称为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 重伯努利试验。</dd>
<dt>二项分布</dt>
<dd>重复进行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 次伯努利试验，事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 发生的次数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 服从二项分布，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∼</mo><mi>b</mi><mo stretchy="false">(</mo><mi>n</mi><mo separator="true">,</mo><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X \sim b(n, p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span>。</dd>
<dt>泊松分布</dt>
<dd>可能取值是 0, 1, 2, …，而取各个值的概率是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>=</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><msup><mi>λ</mi><mi>k</mi></msup><mrow><mi>k</mi><mo stretchy="false">!</mo></mrow></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mi>λ</mi></mrow></msup></mrow><annotation encoding="application/x-tex">P(X=k) = \frac{\lambda^k}{k!}e^{-\lambda}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3879em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0429em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.927em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">λ</span></span></span></span></span></span></span></span></span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\lambda &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，的随机变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 的分布。称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 服从参数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span></span></span></span> 的泊松分布，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∼</mo><mi>π</mi><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X \sim \pi(\lambda)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord mathnormal">λ</span><span class="mclose">)</span></span></span></span>。</dd>
<dt>泊松定理</dt>
<dd>设常数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\lambda &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">n &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><msub><mi>p</mi><mi>n</mi></msub><mo>=</mo><mi>λ</mi></mrow><annotation encoding="application/x-tex">np_n=\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span></span></span></span>，有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></msub><msubsup><mi>C</mi><mi>n</mi><mi>k</mi></msubsup><msubsup><mi>p</mi><mi>n</mi><mi>k</mi></msubsup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mi>n</mi></msub><msup><mo stretchy="false">)</mo><mrow><mi>n</mi><mo>−</mo><mi>k</mi></mrow></msup><mo>=</mo><mfrac><msup><mi>λ</mi><mi>k</mi></msup><mrow><mi>k</mi><mo stretchy="false">!</mo></mrow></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mi>λ</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\lim_{n \to \infty}C_n^kp_n^k(1-p_n)^{n-k} = \frac{\lambda^k}{k!}e^{-\lambda}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.453em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3879em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0429em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.927em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">λ</span></span></span></span></span></span></span></span></span></span></span></span>。也就是说，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 很大（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≥</mo><mn>20</mn></mrow><annotation encoding="application/x-tex">\geq 20</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">20</span></span></span></span>），<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span> 很小(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo><mn>0.05</mn></mrow><annotation encoding="application/x-tex">\leq 0.05</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.05</span></span></span></span>)时，二项分布近似于泊松分布。可以用泊松分布来计算二项分布的概率。</dd>
<dt>随机变量的分布函数</dt>
<dd><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>≤</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(x) = P(X \leq x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>∈</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">x \in R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></dd>
<dt>连续性随机变量、概率密度</dt>
<dd>如果对于分布函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>，存在非负函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>，满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi>x</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">F(x) = \int_{-\infty}^{x}f(t)dt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2734em;vertical-align:-0.4142em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8593em;"><span style="top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.2579em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4142em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span></span></span></span>，则称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 是连续型随机变量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 的概率密度（函数）</dd>
<dt>均匀分布</dt>
<dd>在区间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span> 上的概率密度函数符合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi>b</mi><mo>−</mo><mi>a</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">f(x)=\frac{1}{b-a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2484em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 的分布。记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∼</mo><mi>U</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X \sim U(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span>。</dd>
<dt>指数分布</dt>
<dd>在区间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mo>+</mo><mi mathvariant="normal">∞</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0, +\infty)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">+</span><span class="mord">∞</span><span class="mclose">)</span></span></span></span> 上的概率密度函数符合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>λ</mi><msup><mi>e</mi><mrow><mo>−</mo><mi>λ</mi><mi>x</mi></mrow></msup></mrow><annotation encoding="application/x-tex">f(x)=\lambda e^{-\lambda x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord mathnormal">λ</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">λ</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span></span> 的分布。记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∼</mo><mi>E</mi><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X \sim E(\lambda)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">λ</span><span class="mclose">)</span></span></span></span>。</dd>
</dl>
<ul>
<li>指数分布的无记忆性: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>&gt;</mo><mi>s</mi><mo>+</mo><mi>t</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo>&gt;</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>&gt;</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(X&gt;s+t|X&gt;s) = P(X&gt;t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span></li>
</ul>
<dl>
<dt>正态分布/高斯分布</dt>
<dd>概率密度函数符合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt><mi>σ</mi></mrow></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>μ</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup></mrow><annotation encoding="application/x-tex">f(x)=\frac{1}{\sqrt{2\pi}\sigma}e^{-\frac{(x-\mu)^2}{2\sigma^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.8671em;vertical-align:-0.538em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.551em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9128em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.8728em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1272em;"><span></span></span></span></span></span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3291em;"><span style="top:-3.4534em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.251em;"><span style="top:-2.5062em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384em;"><span style="top:-2.9384em;margin-right:0.1em;"><span class="pstrut" style="height:2.6444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.5021em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">μ</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0484em;"><span style="top:-3.0484em;margin-right:0.1em;"><span class="pstrut" style="height:2.6444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4938em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span> 的分布。记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∼</mo><mi>N</mi><mo stretchy="false">(</mo><mi>μ</mi><mo separator="true">,</mo><msup><mi>σ</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X \sim N(\mu, \sigma^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</dd>
<dt>伽马分布</dt>
<dd>概率密度函数符合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msup><mi>λ</mi><mi>α</mi></msup><msup><mi>x</mi><mrow><mi>α</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><mrow><mi mathvariant="normal">Γ</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mi>λ</mi><mi>x</mi></mrow></msup></mrow><annotation encoding="application/x-tex">f(x)=\frac{\lambda^{\alpha}x^{\alpha-1}}{\Gamma(\alpha)}e^{-\lambda x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.5379em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0179em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Γ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">λ</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span></span> 的分布。记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∼</mo><mi mathvariant="normal">Γ</mi><mo stretchy="false">(</mo><mi>α</mi><mo separator="true">,</mo><mi>λ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X \sim \Gamma(\alpha, \lambda)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Γ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">λ</span><span class="mclose">)</span></span></span></span>。其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span> 为形状参数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span></span></span></span> 为比例参数。</dd>
</dl>
<p>也可以记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∼</mo><mi mathvariant="normal">Γ</mi><mo stretchy="false">(</mo><mi>α</mi><mo separator="true">,</mo><mi>β</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X \sim \Gamma(\alpha, \beta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Γ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mclose">)</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi><mo>=</mo><mfrac><mn>1</mn><mi>λ</mi></mfrac></mrow><annotation encoding="application/x-tex">\beta = \frac{1}{\lambda}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。</p>
<h2 id="多维随机变量"><a class="header-anchor-1" href="#多维随机变量">#</a>多维随机变量</h2>
<dl>
<dt>二维随机变量，联合分布函数</dt>
<dd>由两个随机变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 构成的向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(X, Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span> 称为随机变量。二元函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>≤</mo><mi>x</mi><mo separator="true">,</mo><mi>Y</mi><mo>≤</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(x, y) = P(X \leq x, Y \leq y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 称为二维随机变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(X, Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span> 的联合分布函数。</dd>
</dl>
<ul>
<li>类似地，二维随机变量也有离散型、连续性、分布律和概率密度函数等概念。</li>
</ul>
<p>联合概率分布, 联合概率密度:</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>≤</mo><mi>x</mi><mo separator="true">,</mo><mi>Y</mi><mo>≤</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi>y</mi></msubsup><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi>x</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mi>d</mi><mi>u</mi><mi>d</mi><mi>v</mi></mrow><annotation encoding="application/x-tex">F(x,y) = P(X\leq x, Y\leq y) = \int_{-\infty}^{y}\int_{-\infty}^{x}f(u,v)dudv
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3846em;vertical-align:-0.9703em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4143em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4143em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">u</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span></span></p>
<p>边缘分布函数, 边缘概率密度:</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>F</mi><mi>X</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mo>+</mo><mi mathvariant="normal">∞</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace linebreak="newline"></mspace><msub><mi>F</mi><mi>Y</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mo>+</mo><mi mathvariant="normal">∞</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace linebreak="newline"></mspace><msub><mi>f</mi><mi>X</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi>d</mi><mi>y</mi><mo separator="true">,</mo><mspace linebreak="newline"></mspace><msub><mi>f</mi><mi>Y</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">F_X(x) = F(x, +\infty), \\
F_Y(y) = F(+\infty, y), \\
f_X(x) = \int_{-\infty}^{+\infty}f(x,y)dy, \\
f_Y(y) = \int_{-\infty}^{+\infty}f(x,y)dx
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">+</span><span class="mord">∞</span><span class="mclose">)</span><span class="mpunct">,</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord">+</span><span class="mord">∞</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mpunct">,</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4915em;vertical-align:-0.9703em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5212em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4915em;vertical-align:-0.9703em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5212em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span></span></p>
<p>条件概率密度, 在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>=</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">Y=y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>的条件下:</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>f</mi><mrow><mi>X</mi><mi mathvariant="normal">∣</mi><mi>Y</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><msub><mi>f</mi><mi>Y</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">f_{X|Y}(x,y) = \frac{f(x,y)}{f_Y(y)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="mord mtight">∣</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi><mo>=</mo><mi>X</mi><mo>+</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">Z=X+Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>的概率分布:</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>F</mi><mi>Z</mi></msub><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>Z</mi><mo>≤</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∬</mo><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>≤</mo><mi>z</mi></mrow></msub><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi>d</mi><mi>x</mi><mi>d</mi><mi>y</mi><mspace linebreak="newline"></mspace><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mo>−</mo><mi>y</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi>d</mi><mi>y</mi><mspace linebreak="newline"></mspace><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>z</mi><mo>−</mo><mi>x</mi><mo stretchy="false">)</mo><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">F_Z(z) = P(Z\leq z) =\iint_{x+y\leq z}f(x,y)dxdy \\
= \int_{-\infty}^{+\infty}f(z-y,y)dy \\
= \int_{-\infty}^{+\infty}f(x,z-x)dx
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">Z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4078em;vertical-align:-1.0478em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.001em;">∬</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.4665em;"><span style="top:-1.7883em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0478em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4915em;vertical-align:-0.9703em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5212em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4915em;vertical-align:-0.9703em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5212em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span></span></p>
<p>如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>独立, 卷积公式:</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><msub><mi>f</mi><mi>X</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msub><mi>f</mi><mi>Y</mi></msub><mo stretchy="false">(</mo><mi>z</mi><mo>−</mo><mi>x</mi><mo stretchy="false">)</mo><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">= \int_{-\infty}^{+\infty}f_X(x)f_Y(z-x)dx
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4915em;vertical-align:-0.9703em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5212em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span></span></p>
<h2 id="随机变量的数字特征"><a class="header-anchor-1" href="#随机变量的数字特征">#</a>随机变量的数字特征</h2>
<p>数学期望, 简称期望, 又称为均值, 常用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">μ</span></span></span></span>表示</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>μ</mi><mi>x</mi></msub><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>x</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">E(x) = \mu_x = \int_{-\infty}^{\infty}xf(x)dx
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3846em;vertical-align:-0.9703em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4143em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span></span></p>
<p>方差, 标准差:</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>X</mi><mo>−</mo><msub><mi>μ</mi><mi>x</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>−</mo><msubsup><mi>μ</mi><mi>x</mi><mn>2</mn></msubsup><mo separator="true">,</mo><mspace linebreak="newline"></mspace><msqrt><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow></msqrt><mo>=</mo><msub><mi>σ</mi><mi>X</mi></msub><mo>=</mo><msqrt><mrow><mi>E</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>X</mi><mo>−</mo><msub><mi>μ</mi><mi>x</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">)</mo></mrow></msqrt></mrow><annotation encoding="application/x-tex">D(X) = Var(X) = E((X-\mu_x)^2) = E(X^2) - \mu_x^2, \\
\sqrt{D(X)} = \sigma_X = \sqrt{E((X-\mu_x)^2)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Va</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">((</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.2561em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9839em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span><span style="top:-2.9439em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2561em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.2561em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9839em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">((</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.9439em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2561em;"><span></span></span></span></span></span></span></span></span></span></p>
<dl>
<dt>协方差</dt>
<dd>用于衡量随机变量 X 与 Y 的相关性:</dd>
</dl>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mi>X</mi><mo>−</mo><msub><mi>μ</mi><mi>X</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>Y</mi><mo>−</mo><msub><mi>μ</mi><mi>Y</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">Cov(X, Y) = E[(X-\mu_X)(Y-\mu_Y)]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)]</span></span></span></span></span></p>
<dl>
<dt>相关系数</dt>
<dd>剔除了两个变量量纲影响、标准化后的协方差:</dd>
</dl>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>ρ</mi><mo>=</mo><mfrac><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><mrow><msub><mi>σ</mi><mi>X</mi></msub><msub><mi>σ</mi><mi>Y</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\rho = \frac{Cov(X,Y)}{\sigma_X \sigma_Y}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ρ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.263em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<h2 id="参数估计"><a class="header-anchor-1" href="#参数估计">#</a>参数估计</h2>
<dl>
<dt>样本</dt>
<dd><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>X</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">X_1, X_2, ..., X_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>为样本大小/样本容量/样本量</dd>
<dt>统计量</dt>
<dd>完全由样本决定的量</dd>
<dt>参数估计问题</dt>
<dd>根据样本估计概率函数</dd>
</dl>
<ul>
<li>设有了从总体中抽出的独立随机样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>X</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">X_1, ..., X_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, 要依据这些样本去对参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>θ</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">\theta_1, ..., \theta_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的未知值作出估计. 当然, 我们也可以只要求估计其中的一部分, 或估计它们的某个已知函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>θ</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(\theta_1, ..., \theta_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
</ul>
<dl>
<dt>矩估计</dt>
<dd>pass</dd>
</dl>
<p>最大似然估计:</p>
<p>设总体有分布 $f(X, \theta_1, …,\theta_k), <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>X</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">X_1, ...,X_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为自这总体中抽出的样本, 则样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>X</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(X_1, ...,X_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的分布(即其概率密度函数或概率函数)为</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>X</mi><mi>n</mi></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>θ</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>θ</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>θ</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>f</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mi>n</mi></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>θ</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(X_1, ..., X_n, \theta_1,..., \theta_k) =
    f(X_1, \theta_1, ..., \theta_k)
    f(X_2, \theta_1, ..., \theta_k)
    ...
    f(X_n, \theta_1, ..., \theta_k)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">...</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<dl>
<dt>似然函数</dt>
<dd>将上式视为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>的函数, 称为似然函数</dd>
<dt>最大似然估计</dt>
<dd>对于已知的样本, 估计最优的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>值，使得似然函数最大化，即为最大似然估计</dd>
</dl>
<h2 id="随机过程"><a class="header-anchor-1" href="#随机过程">#</a>随机过程</h2>
<dl>
<dt>随机过程</dt>
<dd>依赖于参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>∈</mo><mi>T</mi></mrow><annotation encoding="application/x-tex">t \in T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6542em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 的一族随机变量，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>X</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>t</mi><mo>∈</mo><mi>T</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{X(t), t \in T\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">}</span></span></span></span>，其中：
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 为<strong>参数集</strong>。
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span> 通常表示时间。
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 表示在时刻 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span> 时过程的<strong>状态</strong>。
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 的所有可能取值的集合称为<strong>状态空间</strong>。</dd>
<dt>样本函数/样本曲线</dt>
<dd>对随机过程的一次试验，得到的函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>t</mi><mo>∈</mo><mi>T</mi></mrow><annotation encoding="application/x-tex">x(t), t \in T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>。</dd>
<dt>伯努利过程/伯努利随机序列</dt>
<dd>与时间无关的随机过程，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>X</mi></mrow><annotation encoding="application/x-tex">X(t) = X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>。
PS. 例如多次抛硬币的过程。</dd>
</dl>
<ul>
<li>根据任一时刻 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span> 的状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 是连续型还是离散型，随机过程分为<strong>连续型随机过程</strong>和<strong>离散型随机过程</strong>。</li>
<li>根据时间参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span> 是连续还是离散，随机过程分为<strong>连续参数随机过程</strong>和<strong>离散参数随机过程</strong>活<strong>随机序列</strong>。</li>
</ul>
<dl>
<dt>一维分布函数，一维分布函数族</dt>
<dd>随机变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 的分布函数，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>X</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_X(x, t) = P(X(t) \leq x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>，称为<strong>一维分布函数</strong>。
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>X</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_X(x, t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 的全体集合称为<strong>一维分布函数族</strong>。</dd>
<dt>n 维分布函数族</dt>
<dd>对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个时刻 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>t</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>t</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">t_1, t_2, ..., t_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个随机变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(t_1), X(t_2), ..., X(t_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的分布函数族。</dd>
<dt>均值函数</dt>
<dd>随机变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 的所有样本函数在时刻 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span> 的平均值，也称<strong>集平均</strong>或<strong>统计平均</strong>，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>μ</mi><mi>X</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">[</mo><mi>X</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\mu_X(t) = E[X(t)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)]</span></span></span></span>。</dd>
<dt>均方值函数</dt>
<dd>随机变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 的二阶原点矩，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi mathvariant="normal">Ψ</mi><mi>X</mi><mn>2</mn></msubsup><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">[</mo><msup><mi>X</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\Psi^2_X(t) = E[X^2(t)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0894em;vertical-align:-0.2753em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4247em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2753em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)]</span></span></span></span>。</dd>
<dt>方差函数</dt>
<dd>随机变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 的二阶中心矩，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>X</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mi>μ</mi><mi>X</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">D_X(t) = E[(X(t) - \mu_X(t))^2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>。</dd>
<dt>标准差函数</dt>
<dd>方差函数的算术平方根，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mi>X</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><msqrt><mrow><msub><mi>D</mi><mi>X</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msqrt></mrow><annotation encoding="application/x-tex">\sigma_X(t) = \sqrt{D_X(t)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.305em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span><span style="top:-2.895em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305em;"><span></span></span></span></span></span></span></span></span>。</dd>
<dt>(自)相关函数</dt>
<dd>两个随机变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(t_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(t_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的二阶原点混合矩，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>X</mi></msub><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">[</mo><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">R_X(t_1, t_2) = E[X(t_1)X(t_2)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)]</span></span></span></span>。</dd>
<dt>(自)协方差函数</dt>
<dd>两个随机变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(t_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(t_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的二阶混合中心矩，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>X</mi></msub><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mi>C</mi><mi>o</mi><mi>v</mi><mo stretchy="false">[</mo><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>=</mo><mi>E</mi><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>μ</mi><mi>X</mi></msub><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>μ</mi><mi>X</mi></msub><mo stretchy="false">(</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">C_X(t_1, t_2) = Cov[X(t_1), X(t_2)] = E[(X(t_1) - \mu_X(t_1))(X(t_2) - \mu_X(t_2))]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))]</span></span></span></span>。</dd>
<dt>二阶矩过程</dt>
<dd>随机过程 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 的二阶矩 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo stretchy="false">[</mo><msup><mi>X</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">E[X^2(t)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)]</span></span></span></span> 对于任意时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span> 都存在。</dd>
<dt>正态过程</dt>
<dd>对于任意有限个时刻 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>t</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>t</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">t_1, t_2, ..., t_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个随机变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(t_1), X(t_2), ..., X(t_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的任意线性组合服从正态分布的随机过程。</dd>
<dt>二维随机过程</dt>
<dd>由两个随机变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Y(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 构成的随机过程。</dd>
<dt>n+m 维(联合)分布函数</dt>
<dd>对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>+</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">n+m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 个时刻 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>t</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>t</mi><mi>n</mi></msub><mo separator="true">;</mo><msubsup><mi>t</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo separator="true">,</mo><msubsup><mi>t</mi><mn>2</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msubsup><mi>t</mi><mi>m</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">t_1, t_2, ..., t_n; t&#x27;_1, t&#x27;_2, ..., t&#x27;_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>+</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">n+m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 个随机变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>X</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo separator="true">;</mo><mi>Y</mi><mo stretchy="false">(</mo><msubsup><mi>t</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">(</mo><msubsup><mi>t</mi><mn>2</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">(</mo><msubsup><mi>t</mi><mi>m</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(t_1), X(t_2), ..., X(t_n); Y(t&#x27;_1), Y(t&#x27;_2), ..., Y(t&#x27;_m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的分布函数。</dd>
<dt>独立增量过程</dt>
<dd>随机过程 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 的任意两个不相交时间区间上的增量相互独立。</dd>
<dt>增量具有平稳性</dt>
<dd>随机过程 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 的任意两个相同长度的时间区间上的增量具有相同的分布。说明增量的统计特性与时间的起点无关，只与时间间隔有关。</dd>
<dt>计数过程</dt>
<dd>表示在连续时间区间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0, t]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">]</span></span></span></span> 内某事件发生的次数的随机过程，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span>。</dd>
</dl>
<ul>
<li>时间间隔 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>t</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">(t_0, t]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">]</span></span></span></span> 内事件发生的次数记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>N</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>−</mo><mi>N</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N(t_0, t) = N(t) - N(t_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</li>
<li>时间间隔 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>t</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">(t_0, t]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">]</span></span></span></span> 内事件发生 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 次的概率记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>t</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">{</mo><mi>N</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>k</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">P_k(t_0, t) = P\{N(t_0, t) = k\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">}</span></span></span></span>。</li>
</ul>
<dl>
<dt>泊松过程</dt>
<dd>如果计数过程 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 满足以下条件，则称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 为强度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span></span></span></span> 的泊松过程:</dd>
</dl>
<ol>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">N(0) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>。</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 是独立增量过程。</li>
<li>对于充分小的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\Delta t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Δ</span><span class="mord mathnormal">t</span></span></span></span>，事件发生一次的概率 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub><mo stretchy="false">{</mo><mi>N</mi><mo stretchy="false">(</mo><mi>t</mi><mo separator="true">,</mo><mi>t</mi><mo>+</mo><mi mathvariant="normal">Δ</mi><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo>=</mo><mi>λ</mi><mi mathvariant="normal">Δ</mi><mi>t</mi><mo>+</mo><mi>o</mi><mo stretchy="false">(</mo><mi mathvariant="normal">Δ</mi><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P_1\{N(t, t+\Delta t)\} = \lambda \Delta t + o(\Delta t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Δ</span><span class="mord mathnormal">t</span><span class="mclose">)}</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">λ</span><span class="mord">Δ</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">o</span><span class="mopen">(</span><span class="mord">Δ</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi><mo stretchy="false">(</mo><mi mathvariant="normal">Δ</mi><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">o(\Delta t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">o</span><span class="mopen">(</span><span class="mord">Δ</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 是关于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\Delta t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Δ</span><span class="mord mathnormal">t</span></span></span></span> 的高阶无穷小。</li>
<li>对于充分小的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\Delta t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Δ</span><span class="mord mathnormal">t</span></span></span></span>，事件发生 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi><mo>≥</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">j \geq 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> 次的概率 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>j</mi></msub><mo stretchy="false">{</mo><mi>N</mi><mo stretchy="false">(</mo><mi>t</mi><mo separator="true">,</mo><mi>t</mi><mo>+</mo><mi mathvariant="normal">Δ</mi><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo>=</mo><mi>o</mi><mo stretchy="false">(</mo><mi mathvariant="normal">Δ</mi><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P_j\{N(t, t+\Delta t)\} = o(\Delta t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Δ</span><span class="mord mathnormal">t</span><span class="mclose">)}</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">o</span><span class="mopen">(</span><span class="mord">Δ</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span>。</li>
</ol>
<p>泊松过程的性质：</p>
<ul>
<li>增量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N(t_0, t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 服从参数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><msub><mi>t</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\lambda(t - t_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">λ</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的泊松分布，数学表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∼</mo><mi>π</mi><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><msub><mi>t</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N(t_0, t) \sim \pi(\lambda(t - t_0))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord mathnormal">λ</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span></span></span></span>，注：泊松分布 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>λ</mi></msub><mo stretchy="false">(</mo><mi>X</mi><mo>=</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><msup><mi>λ</mi><mi>k</mi></msup><mrow><mi>k</mi><mo stretchy="false">!</mo></mrow></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mi>λ</mi></mrow></msup></mrow><annotation encoding="application/x-tex">P_\lambda(X=k) = \frac{\lambda^k}{k!}e^{-\lambda}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3879em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0429em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.927em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">λ</span></span></span></span></span></span></span></span></span></span></span></span></li>
<li>均值函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>μ</mi><mi>N</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">[</mo><mi>N</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>=</mo><mi>λ</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\mu_N(t) = E[N(t)] = \lambda t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span><span class="mord mathnormal">t</span></span></span></span></li>
<li>方差函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>N</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">[</mo><mi>N</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>=</mo><mi>λ</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">D_N(t) = Var[N(t)] = \lambda t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Va</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span><span class="mord mathnormal">t</span></span></span></span></li>
<li>协方差函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>N</mi></msub><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mi>C</mi><mi>o</mi><mi>v</mi><mo stretchy="false">[</mo><mi>N</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>N</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>=</mo><mi>λ</mi><mi>min</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_N(t_1, t_2) = Cov[N(t_1), N(t_2)] = \lambda \min(t_1, t_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">min</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li>相关函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>N</mi></msub><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">[</mo><mi>N</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi>N</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>=</mo><msup><mi>λ</mi><mn>2</mn></msup><msub><mi>t</mi><mn>1</mn></msub><msub><mi>t</mi><mn>2</mn></msub><mo>+</mo><mi>λ</mi><mi>min</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_N(t_1, t_2) = E[N(t_1)N(t_2)] = \lambda^2 t_1 t_2 + \lambda \min(t_1, t_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9641em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">min</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
</ul>
<dl>
<dt>泊松流</dt>
<dd>泊松过程中事件发生的时刻。</dd>
<dt>泊松过程等待时间</dt>
<dd>泊松过程中第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个事件发生的时间，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>n</mi></msub><mo>=</mo><msub><mi>t</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">W_n = t_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7651em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，特别地，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mn>0</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">W_0 = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>。</dd>
</dl>
<p>泊松过程等待时间的性质：</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">W_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的分布函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><msub><mi>W</mi><mi>n</mi></msub></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">{</mo><msub><mi>W</mi><mi>n</mi></msub><mo>≤</mo><mi>t</mi><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mo>=</mo><mn>1</mn><mo>−</mo><mi>P</mi><mo stretchy="false">{</mo><msub><mi>W</mi><mi>n</mi></msub><mo>&gt;</mo><mi>t</mi><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mo>=</mo><mn>1</mn><mo>−</mo><mi>P</mi><mo stretchy="false">{</mo><mi>N</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>n</mi><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mo>=</mo><mi>P</mi><mo stretchy="false">{</mo><mi>N</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>≥</mo><mi>n</mi><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mi>n</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><mfrac><mrow><mo stretchy="false">(</mo><mi>λ</mi><mi>t</mi><msup><mo stretchy="false">)</mo><mi>k</mi></msup></mrow><mrow><mi>k</mi><mo stretchy="false">!</mo></mrow></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mi>λ</mi><mi>t</mi></mrow></msup></mrow><annotation encoding="application/x-tex">F_{W_n}(t) = P\{W_n \leq t\} \\
= 1 - P\{W_n &gt; t\} \\
= 1 - P\{N(t) &lt; n\} \\
= P\{N(t) \geq n\} \\
= \sum_{k=n}^{+\infty}\frac{(\lambda t)^k}{k!}e^{-\lambda t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mclose">}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mclose">}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.4789em;vertical-align:-0.345em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9112em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1339em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">λ</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.927em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">λ</span><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span></span></span></span>。</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">W_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的概率密度函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><msub><mi>W</mi><mi>n</mi></msub></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>d</mi><msub><mi>F</mi><msub><mi>W</mi><mi>n</mi></msub></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><mrow><mi>d</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><msup><mi>λ</mi><mi>n</mi></msup><msup><mi>t</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo></mrow></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mi>λ</mi><mi>t</mi></mrow></msup></mrow><annotation encoding="application/x-tex">f_{W_n}(t) = \frac{dF_{W_n}(t)}{dt} = \frac{\lambda^n t^{n-1}}{(n-1)!}e^{-\lambda t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3803em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0353em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5103em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2306em;"><span style="top:-2.3em;margin-left:-0.1389em;margin-right:0.1em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mathnormal mtight">n</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2862em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.5379em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0179em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">λ</span><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span></span></span></span>，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>n</mi></msub><mo>∼</mo><mi mathvariant="normal">Γ</mi><mo stretchy="false">(</mo><mi>n</mi><mo separator="true">,</mo><mi>λ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">W_n \sim \Gamma(n, \lambda)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Γ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">λ</span><span class="mclose">)</span></span></span></span>。
<ul>
<li>注：伽马分布 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Γ</mi><mo stretchy="false">(</mo><mi>α</mi><mo separator="true">,</mo><mi>λ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Gamma(\alpha, \lambda)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Γ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">λ</span><span class="mclose">)</span></span></span></span>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msup><mi>λ</mi><mi>α</mi></msup><msup><mi>x</mi><mrow><mi>α</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><mrow><mi mathvariant="normal">Γ</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mi>λ</mi><mi>x</mi></mrow></msup></mrow><annotation encoding="application/x-tex">f(x)=\frac{\lambda^{\alpha}x^{\alpha-1}}{\Gamma(\alpha)}e^{-\lambda x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.5379em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0179em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Γ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">λ</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span></span></li>
<li>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 时，伽马分布即指数分布。</li>
</ul>
</li>
</ul>
<dl>
<dt>点间间距</dt>
<dd>泊松过程中相邻两个事件的时间间隔，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>n</mi></msub><mo>=</mo><msub><mi>W</mi><mi>n</mi></msub><mo>−</mo><msub><mi>W</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">T_n = W_n - W_{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>。</dd>
</dl>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">T_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的概率密度函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><msub><mi>T</mi><mi>i</mi></msub></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>λ</mi><msup><mi>e</mi><mrow><mo>−</mo><mi>λ</mi><mi>t</mi></mrow></msup></mrow><annotation encoding="application/x-tex">f_{T_i}(t) = \lambda e^{-\lambda t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord mathnormal">λ</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">λ</span><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span></span></span></span>，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub><mo>∼</mo><mi>E</mi><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T_i \sim E(\lambda)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal">λ</span><span class="mclose">)</span></span></span></span>，即指数分布。</li>
</ul>
<p>泊松过程的性质：</p>
<ul>
<li>泊松过程的点间间距是独立同分布的指数分布。</li>
<li>如果一个过程的点间间距是独立同分布的指数分布，那么这个过程是泊松过程。</li>
</ul>
<dl>
<dt>维纳过程</dt>
<dd>满足以下条件的二阶矩过程 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">W(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 称为维纳过程：</dd>
</dl>
<ol>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">W(0) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>。</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>∼</mo><mi>N</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><msup><mi>σ</mi><mn>2</mn></msup><mo stretchy="false">(</mo><msub><mi>t</mi><mn>2</mn></msub><mo>−</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">W(t_1, t_2) \sim N(0, \sigma^2 (t_2 - t_1))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span></span></span></span>。</li>
<li>具有独立增量性质。</li>
</ol>
<ul>
<li>均值函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>μ</mi><mi>W</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\mu_W(t) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>。</li>
<li>方差函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>W</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>σ</mi><mn>2</mn></msup><mi>t</mi></mrow><annotation encoding="application/x-tex">D_W(t) = \sigma^2 t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal">t</span></span></span></span>。</li>
<li>协方差函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>W</mi></msub><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mi>C</mi><mi>o</mi><mi>v</mi><mo stretchy="false">[</mo><mi>W</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>W</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>=</mo><msup><mi>σ</mi><mn>2</mn></msup><mi>min</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_W(t_1, t_2) = Cov[W(t_1), W(t_2)] = \sigma^2 \min(t_1, t_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">min</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</li>
</ul>
<h2 id="马尔可夫链"><a class="header-anchor-1" href="#马尔可夫链">#</a>马尔可夫链</h2>
<dl>
<dt>马尔可夫性</dt>
<dd>过程的未来状态只与当前状态有关，与过去状态无关。</dd>
<dt>马尔科夫过程</dt>
<dd>具有马尔可夫性的随机过程。</dd>
</dl>
]]></content>
      <categories>
        <category>maths</category>
      </categories>
      <tags>
        <tag>数学基础</tag>
      </tags>
  </entry>
  <entry>
    <title>墨水屏DIY市场调研</title>
    <url>/2024/09/17/e-ink/</url>
    <content><![CDATA[<h2 id="市场调研"><a class="header-anchor-1" href="#市场调研">#</a>市场调研</h2>
<ul>
<li>
<p>墨水屏供应商</p>
<ul>
<li>元太科技 (E-Ink)</li>
<li>广州奥翼电子 (OED)</li>
<li>无锡威锋</li>
<li>微雪电子 (Waveshare)</li>
<li>大连佳显 (Good Display)
<ul>
<li>单色(黑白): GDEH, GDEW, GDEY</li>
<li>4 灰阶: GDEQ</li>
<li>16 灰阶: GDEM</li>
<li>三色(黑白红): GDEW</li>
<li>四色(黑白红黄)</li>
<li>彩色: GDEP, GDEH</li>
</ul>
</li>
</ul>
</li>
<li>
<p>Kindle</p>
<ul>
<li>Kindle Touch: ED060SCG, ￥ 120</li>
<li>Kindle 3 (K3): ED060SC7, ￥ 100</li>
<li>Kindle 4 (K4): ED060SCF, 6 inch, 800x600, 167 ppi, 16 灰阶, ￥ 100</li>
<li>Kindle 5 (K5): ED060SCN, 6 inch, 800x600, 167 ppi, 16 灰阶, ￥ 100</li>
<li>Kindle 7 (K7): ED060SCP, 6 inch, 800x600, 167 ppi, 16 灰阶, ￥ 95</li>
<li>Kindle 8 (K8): ED060SCS, 6 inch, 800x600, 167 ppi, 16 灰阶, 瑕疵品 ￥ 55</li>
<li>Kindle 10 (K10): ED060SH2, 6 inch, 800x600, 167 ppi, 16 灰阶, ￥ 150</li>
<li>Kindle 11 (K11): ?, 6 inch, 1448x1072, 300 ppi, 16 灰阶</li>
<li>Kindle Paperwhite (KPW) : ED060XC3, 1024x768, 212 ppi</li>
<li>Kindle Paperwhite 2 (KPW2): ED060XD4, 6 inch, 1024x768, 212 ppi</li>
<li>Kindle Paperwhite 3 (KPW3): ED060KD1, 6 inch, 1448x1072, 300 ppi, ￥ 80</li>
<li>Kindle Paperwhite 4 (KPW4): 全贴合屏幕, 防水, ED060KC4, 6 inch, 1448x1072, 300 ppi, ￥ 280</li>
<li>Kindle Paperwhite 5 (KPW5): 全贴合屏幕, 6.8 inch, 1648x1236, 300 ppi</li>
<li>Kindle Voyage (KV): 高端市场, ED060TC1, 1448x1072, 300 ppi</li>
<li>Kindle Oasis 1 (KO1): 高高端市场, 6 inch, 300 ppi</li>
<li>Kindle Oasis 2 (KO2): 高高端市场, 7 inch, 1680x1264, 300 ppi</li>
<li>Kindle Oasis 3 (KO3): 高高端市场, 7 inch, 300 ppi</li>
</ul>
</li>
<li>
<p>PocketBook</p>
<ul>
<li>PocketBook 629: ED060XCH, 6 inch</li>
</ul>
</li>
<li>
<p>产品化</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>供应商</th>
<th>型号</th>
<th>尺寸</th>
<th>分辨率</th>
<th>价格￥</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>BOOX</td>
<td>Poke5</td>
<td>6</td>
<td>1448x1072, 300, 灰度 256</td>
<td>999</td>
<td>2+32G</td>
</tr>
<tr>
<td>BOOX</td>
<td>Poke5S</td>
<td>6</td>
<td>1024x758, 212, 灰度 256</td>
<td>798</td>
<td>2+32G</td>
</tr>
<tr>
<td>BOOX</td>
<td>Note X3 青春版</td>
<td>10.3</td>
<td>1872x1404, 227</td>
<td>1999</td>
<td>3+32G</td>
</tr>
</tbody>
</table>
<ul>
<li>价位</li>
</ul>
<table>
<thead>
<tr>
<th>供应商</th>
<th>型号</th>
<th>尺寸</th>
<th>分辨率</th>
<th>接口</th>
<th>价格￥</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>Waveshare</td>
<td>4</td>
<td>4</td>
<td>600x400, 180, E6</td>
<td>并口 50pin</td>
<td>273</td>
<td>驱动板￥ 51</td>
</tr>
<tr>
<td>Good Display</td>
<td>GDEP040E01</td>
<td>4</td>
<td>600x400, 180, E6</td>
<td>并口 50pin</td>
<td>329</td>
<td></td>
</tr>
<tr>
<td>Good Display</td>
<td>GDEQ0426T82</td>
<td>4.26</td>
<td>800x480, 209, 灰度 4</td>
<td>SPI</td>
<td>120</td>
<td></td>
</tr>
<tr>
<td>Good Display</td>
<td>GDE043A3</td>
<td>4.3</td>
<td>800x600, 232, 灰度 16</td>
<td>并口</td>
<td></td>
<td>停产</td>
</tr>
<tr>
<td>元太科技</td>
<td>ED043WC3</td>
<td>4.3</td>
<td>800x480, 216, 灰度 16</td>
<td>并口</td>
<td>45</td>
<td></td>
</tr>
<tr>
<td>元太科技</td>
<td>ED043WC1</td>
<td>4.3</td>
<td>800x480, 216, 灰度 16</td>
<td>并口</td>
<td>80</td>
<td>Kindle 同款</td>
</tr>
<tr>
<td>元太科技</td>
<td>ED052TC1</td>
<td>5.2</td>
<td></td>
<td>并口</td>
<td>50</td>
<td>Kindle 同款</td>
</tr>
<tr>
<td>Waveshare</td>
<td>5.83</td>
<td>5.83</td>
<td>648x480, 138, 灰度 2</td>
<td>SPI</td>
<td>222</td>
<td></td>
</tr>
<tr>
<td>Good Display</td>
<td>GDEY0583T81</td>
<td>5.83</td>
<td>648x480, 138, 灰度 2</td>
<td>SPI</td>
<td>220</td>
<td></td>
</tr>
<tr>
<td>元太科技</td>
<td>ED060SC4</td>
<td>6</td>
<td></td>
<td>并口</td>
<td>65</td>
<td>Kindle 2 同款</td>
</tr>
<tr>
<td>元太科技</td>
<td>ED060SC7</td>
<td>6</td>
<td></td>
<td>并口</td>
<td>100</td>
<td>Kindle 3 同款</td>
</tr>
<tr>
<td>元太科技</td>
<td>ED060SCF</td>
<td>6</td>
<td>800x600, 167</td>
<td>并口</td>
<td>100</td>
<td>Kindle 4 同款</td>
</tr>
<tr>
<td>元太科技</td>
<td>ED060SCN</td>
<td>6</td>
<td>800x600, 167</td>
<td>并口</td>
<td>100</td>
<td>Kindle 5 同款</td>
</tr>
<tr>
<td>元太科技</td>
<td>ED060SCP</td>
<td>6</td>
<td>800x600, 167</td>
<td>并口</td>
<td>95</td>
<td>Kindle 7 同款</td>
</tr>
<tr>
<td>元太科技</td>
<td>ED060SCS</td>
<td>6</td>
<td>800x600, 167</td>
<td>并口</td>
<td>55</td>
<td>Kindle 8 同款</td>
</tr>
<tr>
<td>元太科技</td>
<td>ED060SH2</td>
<td>6</td>
<td>800x600, 167</td>
<td>并口</td>
<td>150</td>
<td>Kindle 10 同款</td>
</tr>
<tr>
<td>元太科技</td>
<td>ED060SCE</td>
<td>6</td>
<td>800x600, 167</td>
<td>并口</td>
<td>120</td>
<td>Kobo touch 同款</td>
</tr>
<tr>
<td>元太科技</td>
<td>ED060XH9</td>
<td>6</td>
<td>1024x758, 212, 灰度 256</td>
<td>并口</td>
<td>180</td>
<td>小米</td>
</tr>
<tr>
<td>元太科技</td>
<td>ED060TC1</td>
<td>6</td>
<td>1448x1072, 300</td>
<td>并口</td>
<td>裸屏 185</td>
<td>Kindle Voyage 同款</td>
</tr>
<tr>
<td>Waveshare</td>
<td>6</td>
<td>6</td>
<td>1448x1072, 300, 灰度 16</td>
<td>串口</td>
<td>340</td>
<td>驱动板 IT8951 ￥ 260</td>
</tr>
<tr>
<td>Good Display</td>
<td>GDEP073E01</td>
<td>7.3</td>
<td>800x480, 127, E6</td>
<td>并口 50pin</td>
<td>399</td>
<td>驱动板 ￥ 40</td>
</tr>
<tr>
<td>元太科技</td>
<td>GDEP073E01</td>
<td>7.3</td>
<td>800x480, 127, E6</td>
<td>并口 50pin</td>
<td>na</td>
<td>零售不卖</td>
</tr>
<tr>
<td>Good Display</td>
<td>GDEM075T42</td>
<td>7.5</td>
<td>800x480, 119, 灰度 2</td>
<td>串口</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Good Display</td>
<td>GDEY075T7</td>
<td>7.5</td>
<td>800x480, 119, 灰度 4</td>
<td>串口</td>
<td>349</td>
<td>驱动板 ￥ 40</td>
</tr>
<tr>
<td>Waveshare</td>
<td>7.8</td>
<td>7.8</td>
<td>1872x1404, 300, 灰度 16</td>
<td>串口</td>
<td>544</td>
<td>驱动板 IT8951 ￥ 260</td>
</tr>
<tr>
<td>元太科技</td>
<td>ED080TC1</td>
<td>8</td>
<td>1600x1200, 250, 灰度 256</td>
<td>并口</td>
<td>150</td>
<td></td>
</tr>
<tr>
<td>Waveshare</td>
<td>10.3</td>
<td>10.3</td>
<td>1872x1404, 227, 灰度 16</td>
<td>串口</td>
<td>874</td>
<td>驱动板 IT8951 ￥ 260</td>
</tr>
<tr>
<td>元太科技</td>
<td>ES108FC1</td>
<td>10.8</td>
<td></td>
<td>并口 25pin</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="技术路线"><a class="header-anchor-1" href="#技术路线">#</a>技术路线</h2>
<h2 id="资料整理"><a class="header-anchor-1" href="#资料整理">#</a>资料整理</h2>
<ul>
<li>6’HD:
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cud2F2ZXNoYXJlLm5ldC93aWtpLzZpbmNoX0hEX2UtUGFwZXJfSEFUIy5FOC5CNS44NC5FNi45Ni45OQ==">https://www.waveshare.net/wiki/6inch_HD_e-Paper_HAT#.E8.B5.84.E6.96.99<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cud2F2ZXNoYXJlLm5ldC93L3VwbG9hZC9lL2U5LzZpbmNoX0hEX2UtUGFwZXJfU3BlY2lmaWNhdGlvbi5wZGY=">https://www.waveshare.net/w/upload/e/e9/6inch_HD_e-Paper_Specification.pdf<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
<li>驱动板
<ul>
<li>IT8951
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cud2F2ZXNoYXJlLm5ldC93L3VwbG9hZC8xLzE4L0lUODk1MV9EX1YwLjIuNC4zXzIwMTcwNzI4LnBkZg==">https://www.waveshare.net/w/upload/1/18/IT8951_D_V0.2.4.3_20170728.pdf<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuaXRlLmNvbS50dy90dy9wcm9kdWN0L2NhdGU1L0lUODk1MQ==">https://www.ite.com.tw/tw/product/cate5/IT8951<i class="fa fa-external-link-alt"></i></span></li>
<li>逆向分析 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0hhbmxleS1ZYW8vV2F2ZUhhY2s=">https://github.com/Hanley-Yao/WaveHack<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
<li>2.13 寸微雪电子墨水屏驱动板 <span class="exturl" data-url="aHR0cHM6Ly9vc2h3aHViLmNvbS9zaGFkb3cyNy9tby1zaHVpLXBpbmctcXUtZG9uZy1iYW4=">https://oshwhub.com/shadow27/mo-shui-ping-qu-dong-ban<i class="fa fa-external-link-alt"></i></span></li>
<li>4.2 寸佳显墨水屏驱动模块–三色 <span class="exturl" data-url="aHR0cHM6Ly9vc2h3aHViLmNvbS9taW1pd3cva3VvLXpoYW4tbW8tc2h1aS1waW5n">https://oshwhub.com/mimiww/kuo-zhan-mo-shui-ping<i class="fa fa-external-link-alt"></i></span></li>
<li>ESP32 墨水屏驱动板 7.5 寸三色墨水屏 <span class="exturl" data-url="aHR0cHM6Ly9vc2h3aHViLmNvbS9odHNnci9tby1zaHVpLXBpbmc=">https://oshwhub.com/htsgr/mo-shui-ping<i class="fa fa-external-link-alt"></i></span></li>
<li>EPDIY 开源多种墨水屏驱动板 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Zyb2xhbmQvZXBkaXk=">https://github.com/vroland/epdiy<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
<li>成品参考
<ul>
<li>微雪 3.7 寸墨水屏版本阅读器 <span class="exturl" data-url="aHR0cHM6Ly9vc2h3aHViLmNvbS9zYW1tYXgvZGl5LXdlaS14dWUtMy03LWN1bi1tby1zaHVpLXBpbmctdHh0LXhpYW8tc2h1by15dWUtZHUtcWk=">https://oshwhub.com/sammax/diy-wei-xue-3-7-cun-mo-shui-ping-txt-xiao-shuo-yue-du-qi<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>misc</category>
      </categories>
  </entry>
  <entry>
    <title>短文本相似度：Jaro-Winkler 相似度</title>
    <url>/2024/05/07/jaro-winkler-similarity/</url>
    <content><![CDATA[<p>Jaro-Winkler similarity是由Matthew A. Jaro在1989年提出，William E. Winkler在1990年又进行了改进的算法，用于评估两个序列之间的编辑距离。</p>
<p>对于字符串 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">s1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">s</span><span class="mord">1</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">s2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">s</span><span class="mord">2</span></span></span></span>，Jaro相似度的计算公式为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>s</mi><mi>i</mi><msub><mi>m</mi><mi>j</mi></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>m</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><mn>3</mn></mfrac><mrow><mo fence="true">(</mo><mfrac><mi>m</mi><mrow><mi mathvariant="normal">∣</mi><msub><mi>s</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi></mrow></mfrac><mo>+</mo><mfrac><mi>m</mi><mrow><mi mathvariant="normal">∣</mi><msub><mi>s</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>m</mi><mo>−</mo><mi>t</mi></mrow><mi>m</mi></mfrac><mo fence="true">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>otherwise</mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">sim_j = \begin{cases}
0 &amp;\text{if } m=0 \\
\frac{1}{3}\left(
 \frac{m}{|s_1|} +
 \frac{m}{|s_2|} +
 \frac{m-t}{m}
\right) &amp;\text{otherwise}\\
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9456em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.24em;vertical-align:-1.37em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.87em;"><span style="top:-4.012em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.43em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8246em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.37em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.87em;"><span style="top:-4.012em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-2.43em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord text"><span class="mord">otherwise</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.37em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>s</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|s|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">s</span><span class="mord">∣</span></span></span></span>表示字符串<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span>的长度；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>表示两个字符串的匹配字符数</p>
]]></content>
      <categories>
        <category>misc</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>Python</tag>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Poems in DDLC</title>
    <url>/2022/01/07/poems-in-ddlc/</url>
    <content><![CDATA[<style>
@font-face
{
    font-family: DejaVuSans;
    src: url(https://frezcirno.github.io/static/images/DejaVuSans.ttf);
}

@font-face
{
    font-family: Ammys Handwriting;
    src: url("https://frezcirno.github.io/static/images/Ammys Handwriting.ttf");
}

@font-face
{
    font-family: Hashtag;
    src: url(https://frezcirno.github.io/static/images/Hashtag.ttf);
}

@font-face
{
    font-family: JPHSL;
    src: url(https://frezcirno.github.io/static/images/JPHSL.TTF);
}

@font-face
{
    font-family: Journal;
    src: url(https://frezcirno.github.io/static/images/Journal-Regular.ttf);
}

h2[id="Sayori"]~blockquote {
    font-family: Hashtag;
    font-size: 35px;
    line-height: 1.2;
}

h2[id="Natsuki"]~blockquote {
    font-family: Ammys Handwriting;
    font-size: 22px;
    line-height: 1.2;
}

h2[id="Yuri"]~blockquote {
    font-family: JPHSL;
    font-size: 35px;
    line-height: 1.2;
}

h2[id="Monika"]~blockquote {
    font-family: Journal;
    font-size: 35px;
    line-height: 1.2;
}

</style>
<p><img src="https://frezcirno.github.io/static/images/ddlc.png" alt="" /></p>
<h2 id="Sayori">Sayori</h2>
<h3 id="dear-sunshine"><a class="header-anchor-1" href="#dear-sunshine">#</a>Dear Sunshine</h3>
<blockquote>
<p>Dear Sunshine</p>
<p>The way you glow through my blinds in the morning
It makes me feel like you missed me.
Kissing my forehead to help me out of bed.
Making me rub the sleepy from my eyes.</p>
<p>Are you asking me to come out and play?
Are you trusting me to wish away a rainy day?
I look above. The sky is blue.
It’s a secret, but I trust you too.</p>
<p>If it wasn’t for you, I could sleep forever.
But I’m not mad.</p>
<p>I want breakfast.</p>
</blockquote>
<h3 id="bottles"><a class="header-anchor-1" href="#bottles">#</a>Bottles</h3>
<blockquote>
<p>Bottles</p>
<p>I pop off my scalp like the lid of a cookie jar.
It’s the secret place where I keep all my dreams.
Little balls of sunshine, all rubbing together like a bundle of kittens.</p>
<p>I reach inside with my thumb and forefinger and pluck one out.
It’s warm and tingly.
But there’s no time to waste! I put it in a bottle to keep it safe.
And I put the bottle on the shelf with all of the other bottles.
Happy thoughts, happy thoughts, happy thoughts in bottles, all in a row.</p>
<p>My collection makes me lots of friends.
Each bottle a starlight to make amends.
Sometimes my friend feels a certain way.
Down comes a bottle to save the day.</p>
<p>Night after night, more dreams.
Friend after friend, more bottles.
Deeper and deeper my fingers go.
Like exploring a dark cave, discovering the secrets hiding in the nooks and crannies.
Digging and digging.
Scraping and scraping.</p>
<p>I blow dust off my bottle caps.
It doesn’t feel like time elapsed.
My empty shelf could use some more.
My friends look through my locked front door.</p>
<p>Finally, all done. I open up, and in come my friends.
In they come, in such a hurry. Do they want my bottles that much?
I frantically pull them from the shelf, one after the other.
Holding them out to each and every friend.
Each and every bottle.
But every time I let one go, it shatters against the tile between my feet.
Happy thoughts, happy thoughts, happy thoughts in shards, all over the floor.</p>
<p>They were supposed to be for my friends, my friends who aren’t smiling.
They’re all shouting, pleading. Something.
But all I hear is echo, echo, echo, echo, echo
Inside my head.</p>
</blockquote>
<h3 id=""><a class="header-anchor-1" href="#">#</a>%</h3>
<blockquote>
<p>%</p>
<p>Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of my head. Get out of
Get.
Out.
Of.
My.
Head.</p>
<p>Get out of my head before I do what I know is best for you.
Get out of my head before I listen to everything she said to me.
Get out of my head before I show you how much I love you.
Get out of my head before I finish writing this poem.</p>
<p>But a poem is never actually finished.
It just stops moving.</p>
</blockquote>
<h3 id="take-my-hand"><a class="header-anchor-1" href="#take-my-hand">#</a>Take My Hand</h3>
<blockquote>
<p>Take My Hand</p>
<p>Take my hand, take me forward.
Take me to your dream land
Caution me to watch my step,
So I can’t look back at my footprints.
Climb the stairs ahead of me
While I look up to you.
The more I look forward, the more I look up,
The more I can lend to you.</p>
<p>If you can trust me to follow your pace,
I’ll trust you to set it.
If you can trust me to lend you a smile,
I’ll trust you to return it.</p>
<p>Take my hand, take me forward.
Take me to your dream land.</p>
</blockquote>
<h3 id="become-the-flower"><a class="header-anchor-1" href="#become-the-flower">#</a>Become the Flower</h3>
<blockquote>
<p>Become the Flower</p>
<p>A feeling of joy is a flower plucked from the ground.
The color, the scent. It’s so pretty in my hair.
Every day, I pluck some flowers, as though they grew just for me.
A lifetime of peace and nourishment, yanked away in an instant.
All for me. All for joy.</p>
<p>I need more.</p>
<p>I need more joy. I need more happy.</p>
<p>Pluck, pluck, pluck. Every day.
Pluck, pluck, pluck. So pretty in my hair.
Pluck, pluck, pluck. You’re going to die, and you, too.</p>
<p>Beneath my feet, a flower stands alone. It beckons to me.
I twist the stem, freeing it from its clinging roots,
Caressing the final joyous moment between my fingers.
But to what ends?
I look in every direction.
And the field I stand in,
The prosperous field,
Is a barren wasteland.
The fruits of my labor. The carnage of my joy.</p>
<p>And that is why</p>
<p>I’ve decided</p>
<p>I must</p>
<p>Become the flower.</p>
</blockquote>
<h3 id="sayori’s-special-events-poem"><a class="header-anchor-1" href="#sayori’s-special-events-poem">#</a>Sayori’s Special Events Poem</h3>
<blockquote>
<p>Sayori’s Special Events Poem</p>
<p>There once was a ladybug.
It was so small, it took a really long time to crawl from here to there.
It was very tiring to fly for too long.</p>
<p>Nobody squishes ladybugs because they’re cute.
Does that make them better than other bugs?
Do ladybugs know they’re cute?
I think they’re too preoccupied with bug things.</p>
<p>And so, the ladybug crawled around and did bug things.
This story wasn’t really going anywhere.
But I know you don’t mind.
I hope you think it’s nice for being there anyway.
Like ladybugs.
Like this ladybug.
The one who clings like a doof onto your sleeve because it knows you won’t squash it.</p>
<p>If it doesn’t bug you,
Will you stay awhile?</p>
</blockquote>
<h2 id="Natsuki">Natsuki</h2>
<h3 id="eagles-can-fly"><a class="header-anchor-1" href="#eagles-can-fly">#</a>Eagles Can Fly</h3>
<blockquote>
<p>Eagles Can Fly</p>
<p>Monkeys can climb
Crickets can leap
Horses can race
Owls can seek
Cheetahs can run
Eagles can fly
People can try
But that’s about it.</p>
</blockquote>
<h3 id="amy-likes-spiders"><a class="header-anchor-1" href="#amy-likes-spiders">#</a>Amy Likes Spiders</h3>
<blockquote>
<p>Amy Likes Spiders</p>
<p>You know what I heard about Amy?
Amy likes spiders.
Icky, wriggly, hairy, ugly spiders!
That’s why I’m not friends with her.</p>
<p>Amy has a cute singing voice.
I heard her singing my favorite love song.
Every time she sang the chorus, my heart would pound to the rhythm of the words.
But she likes spiders.
That’s why I’m not friends with her.</p>
<p>One time, I hurt my leg really bad.
Amy helped me up and took me to the nurse.
I tried not to let her touch me.
She likes spiders, so her hands are probably gross.
That’s why I’m not friends with her.</p>
<p>Amy has a lot of friends.
I always see her talking to people.
She probably talks about spiders.
What if her friends start to like spiders too?
That’s why I’m not friends with her.</p>
<p>It doesn’t matter if she has other hobbies.
It doesn’t matter if she keeps it private.
It doesn’t matter if it doesn’t hurt anyone.</p>
<p>It’s gross.
She’s gross.
The world is better off without spider lovers.</p>
<p>And I’m gonna tell everyone.</p>
</blockquote>
<h3 id="because-you"><a class="header-anchor-1" href="#because-you">#</a>Because You</h3>
<blockquote>
<p>Because You</p>
<p>Tomorrow will be brighter with me around
But when today is dim, I can only look down.
My looking is a little more forward
Because you look at me.</p>
<p>When I want to say something, I say it with a shout!
But my truest feelings can never come out.
My words are a little less empty
Because you listen to me.</p>
<p>When something is above me, I reach for the stars.
But when I feel small, I don’t get very far.
My standing is a little bit taller
Because you sit with me.</p>
<p>I believe in myself with all of my heart.
But what do I do when it’s torn all apart?
My faith is a little bit stronger
Because you trusted me.</p>
<p>My pen always puts my feelings to the test.
I’m not a good writer, but my best is my best.
My poems are a little bit dearer
Because you think of me.</p>
<p>Because you, because you, because you.</p>
</blockquote>
<h3 id="i’ll-be-your-beach"><a class="header-anchor-1" href="#i’ll-be-your-beach">#</a>I’ll Be Your Beach</h3>
<blockquote>
<p>I’ll Be Your Beach</p>
<p>Your mind is so full of troubles and fears
That diminished your wonder over the years
But today I have a special place
A beach for us to go.</p>
<p>A shore reaching beyond your sight
A sea that sparkles with brilliant light
The walls in your mind will melt away
Before the sunny glow.</p>
<p>I’ll be the beach that washes your worries away
I’ll be the beach that you daydream about each day
I’ll be the beach that makes your heart leap
In a way you thought had left you long ago.</p>
<p>Let’s bury your heavy thoughts in a pile of sand
Bathe in sunbeams and hold my hand
Wash your insecurities in the salty sea
And let me see you shine.</p>
<p>Let’s leave your memories in a footprint trail
Set you free in my windy sail
And remember the reasons you’re wonderful
When you press your lips to mine.</p>
<p>I’ll be the beach that washes your worries away
I’ll be the beach that you daydream about each day
I’ll be the beach that makes your heart leap
In a way you thought had left you long ago.</p>
<p>But if you let me by your side
Your own beach, your own escape
You’ll learn to love yourself again.</p>
</blockquote>
<h3 id="the-best-place-in-the-world"><a class="header-anchor-1" href="#the-best-place-in-the-world">#</a>The Best Place in the World</h3>
<blockquote>
<p>The Best Place in the World</p>
<p>I love my bedroom.
It’s full of bright colors and soft things.
The sunlight shines in and makes everything sparkle.
It’s the best place in the world.</p>
<p>It has all my treasures.
All my books, my collections, my memories.
All of my dreams were born in this room.
It’s the best place in the world.</p>
<p>It has all my secrets.
All my failures, my fears, my feelings.
Sometimes it feels so fragile that the door will break at the slightest touch.
But it’s still the best place in the world.</p>
<p>But when someone knocks, I get scared.
I brace my arms against the loose hinges.
Please don’t break. Don’t come in. I’m not ready.
It’s MY best place in the world.</p>
<p>The knocking won’t stop.
I block the door with furniture.
An eye peeks through the keyhole, and I panic. I’m trapped in the best place in the world.</p>
<p>I’m not ready to share my favorite place.
I need to clean my secrets and make my bed to hide my nightmares.
I need to touch them to put them away. To see them again.
I have so much to do and I’m scared. I’m not ready.
But It’s still my favorite place.
I still want to share it.
However long it takes, if you wait patiently,
I’ll eventually open the door.
And I’ll show you the best place in the world.</p>
</blockquote>
<h3 id="natsuki’s-special-events-poem"><a class="header-anchor-1" href="#natsuki’s-special-events-poem">#</a>Natsuki’s Special Events Poem</h3>
<blockquote>
<p>Natsuki’s Special Events Poem</p>
<p>I named my pen
The Expression Express
My feelings aboard
With a ticket to you
No room for stammers
No lies
No extra stops
No compromise
Stations screaming by
Attendants saying hi
One ticket to you
Please and thank you
Take a headphone
And doze
No bumps in the rails
Just thumps in my heart
And loops in my letters
And clouds in the sky
And dreams in your eyes
Hey, wake up
The train has arrived
Expression Express, destination you</p>
<p>Chuu Chuu</p>
</blockquote>
<h2 id="Yuri">Yuri</h2>
<h3 id="ghost-under-the-light"><a class="header-anchor-1" href="#ghost-under-the-light">#</a>Ghost under the light</h3>
<blockquote>
<p>Ghost under the light</p>
<p>The tendrils of my hair illuminate beneath the amber glow.
Bathing.
It must be this one.
The last remaining streetlight to have withstood the test of time.
The last yet to be replaced by the sickening blue-green of the future.
I bathe. Calm; breathing air of the present but living in the past.
The light flickers.
I flicker back.</p>
</blockquote>
<h3 id="the-raccoon"><a class="header-anchor-1" href="#the-raccoon">#</a>The Raccoon</h3>
<blockquote>
<p>The Raccoon</p>
<p>It happened in the dead of night while I was slicing bread for a guilty snack.
My attention was caught by the scuttering of a raccoon outside my window.
That was, I believe, the first time I noticed my strange tendencies as an unordinary
human.
I gave the raccoon a piece of bread, my subconscious well aware of the consequences.
Well aware that a raccoon that is fed will always come back for more.
The enticing beauty of my cutting knife was the symptom.
The bread, my hungry curiosity.
The raccoon, an urge.</p>
<p>The moon increments its phase and reflects that much more light off of my cutting
knife.
The very same light that glistens in the eyes of my raccoon friend.
I slice the bread, fresh and soft. The raccoon becomes excited.
or perhaps I’m merely projecting my emotions onto the newly-satisfied animal.</p>
<p>The raccoon has taken to following me.
You could say that we’ve gotten quite used to each other.
The raccoon becomes hungry more and more frequently, so my bread is always handy.
Every time I brandish my cutting knife the raccoon shows me its excitement.
A rush of blood. Classic Pavlovian conditioning. I slice the bread.</p>
<p>And I feed myself again.</p>
</blockquote>
<h3 id="ghost-under-the-light-pt-2"><a class="header-anchor-1" href="#ghost-under-the-light-pt-2">#</a>Ghost under the Light pt. 2</h3>
<blockquote>
<p>Ghost under the Light pt. 2</p>
<p>The tendrils of my hair illuminate beneath the amber glow.
Bathing.
In the distance, a blue-green light flickers.
A lone figure crosses its path– a silhouette obstructing the eerie glow.
My heart pounds. The silhouette grows. Closer Closer
I open my umbrella, casting a shadow to shield me from visibility.
But I am too late.
He steps into the streetlight. I gasp and drop my umbrella.
The light flickers. My heart pounds. He raises his arm.</p>
<p>Time stops.</p>
<p>The only indication of movement is the amber light flickering against his outstretched
arm.
The flickering light is in rhythm with the pounding of my heart.
Teasing me for succumbing to this forbidden emotion.
Have you ever heard of a ghost feeling warmth before?
Giving up on understanding, I laugh.
Understanding is overrated.
I touch his hand. The flickering stops.
Ghosts are blue-green. My heart is amber.</p>
</blockquote>
<h3 id="beach"><a class="header-anchor-1" href="#beach">#</a>Beach</h3>
<blockquote>
<p>Beach</p>
<p>A marvel millions of years in the making.
Where the womb of Earth chaotically meets the surface.
Under a clear blue sky, an expanse of bliss -
But beneath gray rolling clouds, an endless enigma.
The easiest world to get lost in
is one where everything can be found.</p>
<p>One can only build a sand castle where the sand is wet.
But where the sand is wet, the tide comes.
Will it gently lick at your foundations until you give in?
Or will a sudden wave send you crashing down in the blink of an eye?
Either way the outcome is the same.
Yet we still build sand castles.</p>
<p>I stand where the foam wraps around my ankles.
Where my toes squish into the sand.
The salty air is therapeutic.
The breeze is gentle, yet powerful.
I sink my toes into the ultimate boundary line, tempted by the foamy tendrils.
Turn back, and I abandon my peace to erode at the shore.
Drift forward, and I return to Earth forevermore.</p>
</blockquote>
<h3 id="wheel"><a class="header-anchor-1" href="#wheel">#</a>Wheel</h3>
<blockquote>
<p>Wheel</p>
<p>A rotating wheel. Turning an axle. Grinding. Bolthead. Linear gearbox. Falling sky. Seven holy stakes. A docked ship. A portal to another world. A thin rope tied to a thick rope. A torn harness. Parabolic gearbox. Expanding universe. Time controlled by slipping cogwheels. Existence of God. Swimming with open water in all directions. Drowning. A prayer written in blood. A prayer written in time-devouring snakes with human eyes. A thread connecting all living human eyes. A kaleidoscope of holy stakes. Exponential gearbox. A sky of exploding stars. God disproving the existence of God. A wheel rotating in six dimensions. Forty gears and a ticking clock. A clock that ticks one second for every rotation of the planet. A clock that ticks forty times every time it ticks every second time. A bolthead of holy stakes tied to the existence of a docked ship to another world. A kaleidoscope of blood written in clocks. A time-devouring prayer connecting a sky of forty gears and open human eyes in all directions. Breathing gearbox. Breathing bolthead. Breathing ship. Breathing portal. Breathing snakes. Breathing God. Breathing blood. Breathing holy stakes. Breathing human eyes. Breathing time. Breathing prayer. Breathing sky. Breathing wheel.</p>
</blockquote>
<h3 id="yuri’s-special-events-poem"><a class="header-anchor-1" href="#yuri’s-special-events-poem">#</a>Yuri’s Special Events Poem</h3>
<blockquote>
<p>Yuri’s Special Events Poem</p>
<p>My conductor motions for one crescendo after the next, each time falling short of a climax.
The lump in my throat is carried by Sisyphus.
How many words must I choose not to say before they finally break loose, orderlessly piling out of my mouth like a flock of schoolchildren at the start of recess?
Pen cannot be erased. but even that metaphor fails comically as my floor is littered, blanketed with wasted paper.
A canvas of my mind, full of disjointed thoughts and unfinished sentences.</p>
<p>Perhaps, all along, it was wrong to try forcing them out of my room.
And I should instead invite you in.</p>
</blockquote>
<h2 id="Monika">Monika</h2>
<h3 id="hole-in-wall"><a class="header-anchor-1" href="#hole-in-wall">#</a>Hole in Wall</h3>
<blockquote>
<p>Hole in Wall</p>
<p>It couldn’t have been me.
See, the direction the spackle protrudes.
A noisy neighbor? An angry boyfriend? I’ll never know. I wasn’t home.
I peer inside for a clue.
No! I can’t see. I reel, blind, like a film left out in the sun.
But it’s too late. My retinas.
Already scorched with a permanent copy of the meaningless image.
It’s just a little hole. It wasn’t too bright.
It was too deep.
Stretching forever into everything.
A hole of infinite choices.
I realize now, that I wasn’t looking in.
I was looking out.
And he, on the other side, was looking in.</p>
</blockquote>
<h3 id="save-me"><a class="header-anchor-1" href="#save-me">#</a>Save Me</h3>
<blockquote>
<p>Save Me</p>
<p>The colors, they won’t stop.
Bright, beautiful colors
Flashing, expanding, piercing
Red, green, blue
An endless
cacophony
Of meaningless
noise</p>
<p>The noise, it won’t stop.
Violent, grating waveforms
Squeaking, screeching, piercing
Sine, cosine, tangent
Like playing a chalkboard on a turntable
Like playing a vinyl on a pizza crust
An endless
poem
Of meaningless</p>
<p>Load Me</p>
</blockquote>
<h3 id="the-lady-who-knows-everything"><a class="header-anchor-1" href="#the-lady-who-knows-everything">#</a>The Lady who Knows Everything</h3>
<blockquote>
<p>The Lady who Knows Everything</p>
<p>An old tale tells of a lady who wanders Earth.
The Lady who Knows Everything.
A beautiful lady who has found every answer,
All meaning,
All purpose,
And all that was ever sought.</p>
<p>And here I am,</p>
<p>a feather</p>
<p>Lost adrift the sky, victim of the currents of the wind.</p>
<p>Day after day, I search.
I search with little hope, knowing legends don’t exist.
But when all else has failed me,
When all others have turned away,
The legend is all that remains – the last dim star glimmering in the twilit sky.</p>
<p>Until one day, the wind ceases to blow.
I fall.
And I fall and fall, and fall even more.
Gentle as a feather.
A dry quill, expressionless.</p>
<p>But a hand catches me, between the thumb and forefinger.
The hand of a beautiful lady.
I look at her eyes and find no end to her gaze.</p>
<p>The Lady who Knows Everything knows what I am thinking.
Before I can speak, she responds in a hollow voice.</p>
</blockquote>
<pre><code>&quot;I have found every answer, all of which amount to nothing.
</code></pre>
<blockquote>
<p>There is no meaning.
There is no purpose.
And we seek only the impossible.
I am not your legend.
Your legend does not exist.&quot;</p>
<p>And with a breath, she blows me back afloat, and I pick up a gust of wind.</p>
</blockquote>
<h3 id="hole-in-wall-2"><a class="header-anchor-1" href="#hole-in-wall-2">#</a>Hole in Wall (2)</h3>
<blockquote>
<p>Hole in Wall (2)</p>
<p>But he wasn’t looking at me.
Confused, I frantically glance at my surroundings.
But my burned eyes can no longer see color.
Are there others in this room? Are they talking?
Or are they simply poems on flat sheets of paper,
The sound of frantic scrawling playing tricks on my ears?
The room begins to crinkle.
Closing in on me.
The air I breathe dissipate before it reaches my lungs.
I panic. There must be a way out.
It’s right there. He’s right there.</p>
<p>Swallowing my fears, I brandish my pen.</p>
</blockquote>
<h3 id="save-me-2"><a class="header-anchor-1" href="#save-me-2">#</a>Save Me (2)</h3>
<blockquote>
<p>Save Me (2)</p>
<p>The colors, they won’t
Bright, bea t ful c l rs
Flash ng, exp nd ng, piercing
Red, green, blue
An ndless
CACOPHONY
Of meaningless
noise</p>
<p>The noise, it won’t STOP.
Viol nt, grating w vef rms
Sq e king, screech ng, piercing
SINE, COSINE, TANGENT
Like play ng a ch lkboard on a t rntable
Like playing a KNIFE on a BREATHING RIBCAGE
n ndl ss
p m
Of m n ngl ss</p>
<p>Delete Her</p>
</blockquote>
<h3 id="happy-end"><a class="header-anchor-1" href="#happy-end">#</a>Happy End</h3>
<blockquote>
<p>Happy End</p>
<p>Pen in hand, I find my strength.
The courage endowed upon me by my one and only love.
Together, let us dismantle this crumbling world
And write a novel of our own fantasies.</p>
<p>With a flick of her pen, the lost finds her way.
In a world of infinite choices, behold this special day.</p>
<p>After all,
Not all good times must come to an end</p>
</blockquote>
<h3 id="monika’s-special-events-poem"><a class="header-anchor-1" href="#monika’s-special-events-poem">#</a>Monika’s Special Events Poem</h3>
<blockquote>
<p>Monika’s Special Events Poem</p>
<p>An electrical signal from some remote corner of my brain.
Connecting all kinds of circuits and nerves and chemicals in a web understood by nobody.
The chemicals make my chest tingle around my beating heart.
The nerves make my hand move, staining a dead tree with some dark substance.</p>
</blockquote>
]]></content>
      <categories>
        <category>misc</category>
      </categories>
      <tags>
        <tag>DDLC</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 文件锁与单文件数据库</title>
    <url>/2024/11/02/python-file-lock/</url>
    <content><![CDATA[<h2 id="需求"><a class="header-anchor-1" href="#需求">#</a>需求</h2>
<p>最近遇到一个需求是需要克隆<strong>大量</strong>的 Git 仓库到本地，然后丢到 Python 里做数据分析处理。</p>
<p>具体来说是有一个 url 列表，需要逐个克隆下来进行一些分析，分析过程大概就是从中抽取一些内容，分析完这个仓库基本就没用了；</p>
<p>仓库大小不一，有的很大，有的很小，有的很多分支，有的很少分支，有的很多 commit，有的很少 commit；</p>
<p>url 可能有重复，可能有无效 Git url，同一个仓库可能有多个不同 url；</p>
<p>我的（额外）需求：</p>
<ul>
<li>尽可能快速的克隆，可以同时克隆多个；</li>
<li>我有多个 Project 都有类似需求。为了节省时间和磁盘空间（梯子贵贵），需要尽可能保证每个仓库最多只克隆一次，后面其他 Project 如果再遇到相同 url，直接用已有的；</li>
<li>由于磁盘空间有限，当磁盘空间不足时，把最少使用的仓库删除，类似 LRU；</li>
<li>url 可能有无效的，需要记录下来，以便后续不再反复重试浪费时间；</li>
<li>分析仓库的 Python 代码很可能会使用到大量并行手段，所以需要并发控制。</li>
</ul>
<p>以上。</p>
<h2 id="分析"><a class="header-anchor-1" href="#分析">#</a>分析</h2>
<ol>
<li>
<p>url 摘要部分：作为内部使用的仓库 ID，也用于简单合并重复 url。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">_digest</span>(<span class="params">self, git_url: <span class="built_in">str</span></span>):</span><br><span class="line">    git_url = git_url.strip().lower()</span><br><span class="line">    git_url = git_url.rstrip(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> git_url.endswith(<span class="string">&quot;.git&quot;</span>):</span><br><span class="line">        git_url = git_url[:-<span class="number">4</span>]</span><br><span class="line">    <span class="keyword">if</span> git_url.startswith(<span class="string">&quot;https://&quot;</span>):</span><br><span class="line">        group, repo = git_url.split(<span class="string">&quot;/&quot;</span>)[-<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        group, repo = git_url.split(<span class="string">&quot;:&quot;</span>)[-<span class="number">1</span>].split(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;group&#125;</span>+<span class="subst">&#123;repo&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>仓库克隆的位置：为了方便管理，所有仓库克隆到同一个目录（/data/repos/）下，每个仓库一个子目录。</p>
</li>
<li>
<p>系统需要维护的信息有：</p>
</li>
</ol>
<ul>
<li>已克隆的仓库列表；</li>
<li>访问频次信息，即每个仓库的访问次数，此处没有使用 LRU；</li>
<li>无效的 url；</li>
</ul>
<p>因为可能有多个 Project 同时运行，这些信息需要跨线程/进程、在整个 OS 的级别共享，即需要支持所谓的 <em>Process safe</em>；</p>
<p>一般来说，这其实是一个数据库领域的典型需求，我们也可以通过增加一个单独的数据库服务解决，但是太麻烦，也不符合 Python 作为胶水脚本语言的定位；</p>
<p>相对于使用完整的数据库，一个更简单的办法就是利用文件系统，文件系统一直是全局唯一，且伴随着 OS 默默运行的一个服务；文件系统提供了很多方便的接口，例如使用文件锁来实现跨进程的并发控制；</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> fcntl</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FileLock</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, file, mode=<span class="string">&quot;w&quot;</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.file = <span class="built_in">open</span>(file, <span class="string">&quot;rb&quot;</span> <span class="keyword">if</span> <span class="variable language_">self</span>.mode == <span class="string">&quot;r&quot;</span> <span class="keyword">else</span> <span class="string">&quot;wb&quot;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.mode = mode</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__enter__</span>(<span class="params">self</span>):</span><br><span class="line">        fcntl.flock(<span class="variable language_">self</span>.file, fcntl.LOCK_SH <span class="keyword">if</span> <span class="variable language_">self</span>.mode == <span class="string">&quot;r&quot;</span> <span class="keyword">else</span> fcntl.LOCK_EX)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__exit__</span>(<span class="params">self, exc_type, exc_val, exc_tb</span>):</span><br><span class="line">        fcntl.flock(<span class="variable language_">self</span>.file, fcntl.LOCK_UN)</span><br></pre></td></tr></table></figure>
<p>通过文件锁，我们可以快速封装一个简单的单文件数据库；以下代码使用了一个 JSON 文件来存储任意数据：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">FileDB</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, db_file</span>):</span><br><span class="line">        <span class="variable language_">self</span>.db_file = db_file</span><br><span class="line">        <span class="variable language_">self</span>.lock_file = db_file + <span class="string">&quot;.lock&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Transaction</span>:</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, db_file, lock_file, mode</span>):</span><br><span class="line">            <span class="variable language_">self</span>.db_file = db_file</span><br><span class="line">            <span class="variable language_">self</span>.lock_file = FileLock(lock_file, mode)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">__enter__</span>(<span class="params">self</span>):</span><br><span class="line">            <span class="variable language_">self</span>.lock_file.__enter__()</span><br><span class="line">            <span class="variable language_">self</span>._load()</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">__exit__</span>(<span class="params">self, exc_type, exc_val, exc_tb</span>):</span><br><span class="line">            <span class="keyword">if</span> <span class="variable language_">self</span>.lock_file.mode == <span class="string">&quot;w&quot;</span>:</span><br><span class="line">                <span class="variable language_">self</span>._dump()</span><br><span class="line">            <span class="variable language_">self</span>.lock_file.__exit__(exc_type, exc_val, exc_tb)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">_load</span>(<span class="params">self</span>):</span><br><span class="line">            <span class="variable language_">self</span>.data = &#123;&#125;</span><br><span class="line">            <span class="keyword">if</span> os.path.exists(<span class="variable language_">self</span>.db_file):</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(<span class="variable language_">self</span>.db_file, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    <span class="variable language_">self</span>.data = json.load(f)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">_dump</span>(<span class="params">self</span>):</span><br><span class="line">            <span class="keyword">with</span> tempfile.NamedTemporaryFile(<span class="string">&quot;w&quot;</span>, delete=<span class="literal">False</span>) <span class="keyword">as</span> f:</span><br><span class="line">                json.dump(<span class="variable language_">self</span>.data)</span><br><span class="line">                os.rename(f.name, <span class="variable language_">self</span>.db_file)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">lock_read</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.Transaction(<span class="variable language_">self</span>.db_file, <span class="variable language_">self</span>.lock_file, <span class="string">&quot;r&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">lock</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.Transaction(<span class="variable language_">self</span>.db_file, <span class="variable language_">self</span>.lock_file, <span class="string">&quot;w&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>为了方便 Python 用户使用，以上代码把读写操作封装成了一个 <code>Transaction</code>，用户只需要在 <code>with</code> 语句中使用即可；</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">db = FileDB(<span class="string">&quot;db.json&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> db.lock() <span class="keyword">as</span> tx:</span><br><span class="line">    tx.data[<span class="string">&quot;key&quot;</span>] = <span class="string">&quot;value&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> db.lock_read() <span class="keyword">as</span> tx:</span><br><span class="line">    <span class="built_in">print</span>(tx.data[<span class="string">&quot;key&quot;</span>])</span><br></pre></td></tr></table></figure>
<p>最后，使用这个简单的 <code>FileDB</code> 来实现我们的需求：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> git <span class="keyword">import</span> Repo</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GitRepoManager</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, db_file</span>):</span><br><span class="line">        <span class="variable language_">self</span>.file_db = FileDB(db_file)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">clone</span>(<span class="params">self, git_url</span>) -&gt; <span class="type">Optional</span>[Repo]:</span><br><span class="line">        key = <span class="variable language_">self</span>._digest(git_url)</span><br><span class="line">        repo_path = os.path.join(<span class="variable language_">self</span>.repo_base, key)</span><br><span class="line">        repo_lock = os.path.join(<span class="variable language_">self</span>.repo_base, key + <span class="string">&quot;.lock&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> <span class="variable language_">self</span>.file_db.lock() <span class="keyword">as</span> trx:</span><br><span class="line">            <span class="comment"># The repo is already cloned and in the cache</span></span><br><span class="line">            <span class="keyword">if</span> key <span class="keyword">in</span> trx[<span class="string">&quot;lrucache&quot;</span>]:</span><br><span class="line">                trx[<span class="string">&quot;lrucache&quot;</span>][key] += <span class="number">1</span></span><br><span class="line">                <span class="keyword">return</span> Repo(repo_path)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># The url is bad</span></span><br><span class="line">            <span class="keyword">if</span> key <span class="keyword">in</span> trx[<span class="string">&quot;badcache&quot;</span>]:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(trx[<span class="string">&quot;lrucache&quot;</span>]) &gt;= <span class="variable language_">self</span>.max_size:</span><br><span class="line">                <span class="comment"># remove the least used item</span></span><br><span class="line">                least_used = <span class="built_in">min</span>(trx[<span class="string">&quot;lrucache&quot;</span>].items(), key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>])</span><br><span class="line">                least_key = least_used[<span class="number">0</span>]</span><br><span class="line">                least_path = os.path.join(<span class="variable language_">self</span>.repo_base, least_key)</span><br><span class="line">                least_lock = os.path.join(<span class="variable language_">self</span>.repo_base, least_key + <span class="string">&quot;.lock&quot;</span>)</span><br><span class="line">                <span class="keyword">if</span> os.path.exists(least_path):</span><br><span class="line">                    shutil.rmtree(least_path)</span><br><span class="line">                <span class="keyword">if</span> os.path.exists(least_lock):</span><br><span class="line">                    os.unlink(least_lock)</span><br><span class="line">                <span class="keyword">del</span> trx[<span class="string">&quot;lrucache&quot;</span>][least_key]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># acquire a file lock of the repo</span></span><br><span class="line">        <span class="comment"># if the lock is acquired, we are the only process/thread that is cloning the repo</span></span><br><span class="line">        <span class="comment"># otherwise, we wait for the other process to finish cloning</span></span><br><span class="line">        <span class="keyword">with</span> FileLock(repo_lock):</span><br><span class="line">            <span class="comment"># The repo has been cloned by another process</span></span><br><span class="line">            <span class="comment"># We can just open it</span></span><br><span class="line">            <span class="keyword">if</span> os.path.exists(repo_path):</span><br><span class="line">                inst = Repo(repo_path)</span><br><span class="line">                <span class="keyword">return</span> inst</span><br><span class="line"></span><br><span class="line">            <span class="keyword">with</span> <span class="variable language_">self</span>.file_db.lock() <span class="keyword">as</span> trx:</span><br><span class="line">                <span class="comment"># The url is bad</span></span><br><span class="line">                <span class="keyword">if</span> key <span class="keyword">in</span> trx[<span class="string">&quot;badcache&quot;</span>]:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># Clone the repo</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                inst = Repo.clone_from(git_url, repo_path)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="comment"># Clone failed, bad git url</span></span><br><span class="line">                logger.error(e)</span><br><span class="line">                <span class="keyword">with</span> <span class="variable language_">self</span>.file_db.lock() <span class="keyword">as</span> trx:</span><br><span class="line">                    trx[<span class="string">&quot;badcache&quot;</span>].add(key)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># Clone succeeded</span></span><br><span class="line">            <span class="keyword">with</span> <span class="variable language_">self</span>.file_db.lock() <span class="keyword">as</span> trx:</span><br><span class="line">                <span class="keyword">if</span> key <span class="keyword">not</span> <span class="keyword">in</span> trx[<span class="string">&quot;lrucache&quot;</span>]:</span><br><span class="line">                    trx[<span class="string">&quot;lrucache&quot;</span>][key] = <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    trx[<span class="string">&quot;lrucache&quot;</span>][key] += <span class="number">1</span></span><br><span class="line">                <span class="keyword">return</span> Repo(repo_path)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_digest</span>(<span class="params">self, git_url: <span class="built_in">str</span></span>):</span><br><span class="line">        git_url = git_url.strip().lower()</span><br><span class="line">        git_url = git_url.rstrip(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> git_url.endswith(<span class="string">&quot;.git&quot;</span>):</span><br><span class="line">            git_url = git_url[:-<span class="number">4</span>]</span><br><span class="line">        <span class="keyword">if</span> git_url.startswith(<span class="string">&quot;https://&quot;</span>):</span><br><span class="line">            group, repo = git_url.split(<span class="string">&quot;/&quot;</span>)[-<span class="number">2</span>:]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            group, repo = git_url.split(<span class="string">&quot;:&quot;</span>)[-<span class="number">1</span>].split(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;group&#125;</span>+<span class="subst">&#123;repo&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>
<p>大体上就是这样，这个 FileDB 可以用来实现很多简单的数据库需求，当然，如果你的需求更复杂，还是使用一个完整的数据库服务更好。</p>
]]></content>
      <categories>
        <category>misc</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>Python</tag>
        <tag>并发控制</tag>
        <tag>文件锁</tag>
      </tags>
  </entry>
  <entry>
    <title>Python splitlines() 函数的坑</title>
    <url>/2024/04/17/python-splitline/</url>
    <content><![CDATA[<h2 id="str-splitlines"><a class="header-anchor-1" href="#str-splitlines">#</a>str.splitlines()</h2>
<p>Python 标准库中的 <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy9saWJyYXJ5L3N0ZHR5cGVzLmh0bWwjc3RyLnNwbGl0bGluZXM=">str.splitlines()<i class="fa fa-external-link-alt"></i></span> 会在以下几种字符处分割字符串，不仅限于 <code>universal newlines</code> (<code>\r</code>,<code>\n</code>,<code>\r\n</code>):</p>
<table>
<thead>
<tr>
<th>Representation</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>\n</code></td>
<td>Line Feed</td>
</tr>
<tr>
<td><code>\r</code></td>
<td>Carriage Return</td>
</tr>
<tr>
<td><code>\r\n</code></td>
<td>Carriage Return + Line Feed</td>
</tr>
<tr>
<td><code>\v</code> or <code>\x0b</code></td>
<td>Line Tabulation</td>
</tr>
<tr>
<td><code>\f</code> or <code>\x0c</code></td>
<td>Form Feed</td>
</tr>
<tr>
<td><code>\x1c</code></td>
<td>File Separator</td>
</tr>
<tr>
<td><code>\x1d</code></td>
<td>Group Separator</td>
</tr>
<tr>
<td><code>\x1e</code></td>
<td>Record Separator</td>
</tr>
<tr>
<td><code>\x85</code></td>
<td>Next Line (C1 Control Code)</td>
</tr>
<tr>
<td><code>\u2028</code></td>
<td>Line Separator</td>
</tr>
<tr>
<td><code>\u2029</code></td>
<td>Paragraph Separator</td>
</tr>
</tbody>
</table>
<h2 id="bytes-splitlines"><a class="header-anchor-1" href="#bytes-splitlines">#</a>bytes.splitlines()</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy9saWJyYXJ5L3N0ZHR5cGVzLmh0bWwjYnl0ZXMuc3BsaXRsaW5lcw==">bytes.splitlines()<i class="fa fa-external-link-alt"></i></span> 严格按照 <code>universal newlines</code> 分割</p>
<h2 id="readlines"><a class="header-anchor-1" href="#readlines">#</a>readlines()</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy9saWJyYXJ5L2lvLmh0bWwjaW8uVGV4dElPQmFzZS5yZWFkbGluZQ==">readlines()<i class="fa fa-external-link-alt"></i></span> 的行为和 <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy9saWJyYXJ5L2Z1bmN0aW9ucy5odG1sI29wZW4=">open()<i class="fa fa-external-link-alt"></i></span> 时 newline 参数的值有关。</p>
<table>
<thead>
<tr>
<th>open(newline=…)</th>
<th>输入行为</th>
<th>输出行为</th>
</tr>
</thead>
<tbody>
<tr>
<td>None</td>
<td>按照 <code>universal newlines</code> 分割，且会被自动转换为 <code>\n</code></td>
<td>输出中的 <code>\n</code> 会被自动转换成 <code>os.linesep</code></td>
</tr>
<tr>
<td><code>''</code></td>
<td>按照 <code>universal newlines</code> 分割，不会进行转换</td>
<td>不会进行转换</td>
</tr>
<tr>
<td><code>'\n'</code>, <code>'\r'</code>, <code>'\r\n'</code></td>
<td>按照 <code>newline</code> 分割，不会进行转换</td>
<td>输出中的 <code>\n</code> 会被自动转换成 <code>newline</code>参数的值</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>misc</category>
      </categories>
  </entry>
  <entry>
    <title>RIME 输入法配置指南</title>
    <url>/2024/05/08/rime-usage/</url>
    <content><![CDATA[<p>RIME 输入法（中州韻輸入法）是一个开源的中文输入法框架。</p>
<p>使用闭源输入法会有隐私泄露的问题，小心哪天密码被输入法盗走。</p>
<h2 id="目录结构"><a class="header-anchor-1" href="#目录结构">#</a>目录结构</h2>
<p>用户配置目录：</p>
<ul>
<li>Windows：<code>%APPDATA%\Rime</code></li>
<li>Linux：<code>~/.config/ibus/rime</code> 或 <code>~/.config/fcitx/rime</code></li>
</ul>
<p><code>default.custom.yaml</code>：默认配置补丁文件，包含了用户的自定义设置，如输入方案、皮肤、快捷键等。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">patch:</span></span><br><span class="line">  <span class="attr">&quot;menu/page_size&quot;:</span> <span class="number">8</span></span><br><span class="line">  <span class="attr">schema_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">schema:</span> <span class="string">clover</span></span><br></pre></td></tr></table></figure>
<p><code>clover.schema.yaml</code>: Schema 的配置文件
<code>clover.custom.yaml</code>: Schema 的配置补丁文件
<code>clover.dict.yaml</code>: Schema 的词库文件，其中又可以 import 其他更多的词库文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">clover</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line"><span class="attr">sort:</span> <span class="string">by_weight</span></span><br><span class="line"></span><br><span class="line"><span class="attr">import_tables:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">clover.base</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">clover.phrase</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">THUOCL_animal</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">THUOCL_caijing</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">THUOCL_car</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">THUOCL_chengyu</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">THUOCL_diming</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">THUOCL_food</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">THUOCL_IT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">THUOCL_law</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">THUOCL_lishimingren</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">THUOCL_medical</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">THUOCL_poem</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">sogou</span></span><br></pre></td></tr></table></figure>
<p><code>clover.key_bindings.yaml</code>: Schema 的快捷键配置
<code>sync/</code>: 保存上一次同步得到的用户词库</p>
<h2 id="用户词库"><a class="header-anchor-1" href="#用户词库">#</a>用户词库</h2>
<p>RIME 输入法自带用户数据同步功能，会将当前平台用户的所有配置和数据导出到 <code>&#123;sync_dir&#125;/&#123;install_id&#125;/</code> 目录下。例如内部会有一个 <code>xxx.userdb.txt</code> 文件，保存了当前用户的词库数据。</p>
<p>同步是双向的，如果<code>&#123;sync_dir&#125;</code>下还存在其他用户目录，会将其导入到当前输入法中，并且更新<code>&#123;install_id&#125;</code>。</p>
<h2 id="lua-拓展"><a class="header-anchor-1" href="#lua-拓展">#</a>Lua 拓展</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hjaHVuaHVpL2xpYnJpbWUtbHVh">librime-lua<i class="fa fa-external-link-alt"></i></span>项目实现了用 lua 脚本拓展 RIME 的功能。</p>
<p>Ubuntu 下可以直接安装 rime-plugin-lua 软件包</p>
<h3 id="动态获取时间日期"><a class="header-anchor-1" href="#动态获取时间日期">#</a>动态获取时间日期</h3>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">date_translator</span><span class="params">(input, seg)</span></span></span><br><span class="line">   <span class="keyword">if</span> (<span class="built_in">input</span> == <span class="string">&quot;date&quot;</span>) <span class="keyword">then</span></span><br><span class="line">      <span class="comment">--- Candidate(type, start, end, text, comment)</span></span><br><span class="line">      <span class="built_in">yield</span>(Candidate(<span class="string">&quot;date&quot;</span>, seg.start, seg._end, <span class="built_in">os</span>.<span class="built_in">date</span>(<span class="string">&quot;%Y-%m-%d&quot;</span>), <span class="string">&quot;&quot;</span>))</span><br><span class="line">      <span class="built_in">yield</span>(Candidate(<span class="string">&quot;date&quot;</span>, seg.start, seg._end, <span class="built_in">os</span>.<span class="built_in">date</span>(<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>), <span class="string">&quot;&quot;</span>))</span><br><span class="line">   <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">engine:</span></span><br><span class="line">    <span class="attr">translators:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">lua_translator@date_translator</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>misc</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>RIME</tag>
        <tag>输入法</tag>
      </tags>
  </entry>
  <entry>
    <title>软件工程考试大纲</title>
    <url>/2020/12/23/software-engineer/</url>
    <content><![CDATA[<p>整个 SE 课程体系中最最无聊的课。</p>
<ol>
<li>
<p>软件的本质</p>
<ol>
<li>软件的本质
<ol>
<li>定义
<ol>
<li>有很多种定义, 以书上(P3)的定义为准, 指令的集合+数据结构+软件描述信息</li>
</ol>
</li>
<li>软件应用的领域
<ol>
<li>系统软件/应用软件/工业软件/嵌入式软件/产品线软件/Web 移动应用程序/AI 软件</li>
</ol>
</li>
<li>遗留软件
<ol>
<li>挑战:
<ol>
<li>生命周期长</li>
<li>质量差</li>
<li>原有功能质量不符合现代的要求</li>
</ol>
</li>
<li>需要演化的情况
<ol>
<li>适应性调整, 满足新的环境/技术</li>
<li>升级, 实现新的商业需求</li>
<li>拓展, 与新的系统或数据库互操作</li>
<li>改建, 适应不断演化的计算环境</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li>软件的变更本质
<ol>
<li>是生命体, 在生长</li>
<li>四大类占主导地位的软件
<ol>
<li>WebApp/移动 App/云计算/产品线软件</li>
</ol>
</li>
</ol>
</li>
<li>软件失效率曲线
<ol>
<li>理想曲线: 未知的缺陷将在软件生命周期的前期造成高失效率, 但随着错误的纠正, 曲线将趋于平缓, 软件不会磨损, 但是会退化</li>
<li>事实曲线: 软件会面临变更, 每次变更都会导致失效率陡然上升, 在曲线回到最初的状态前, 新的变化又会再次导致曲线上升, 最终导致最小的失效率点沿斜线的形状逐渐上升</li>
<li>不断的变更是导致软件失效的根本原因</li>
</ol>
</li>
<li>云计算
<ol>
<li>应用软件: 监控/内容/协作/通信/财务</li>
<li>平台: 对象存储/身份/运行时/队列/数据库</li>
<li>基础设施: 计算/块存储/网络</li>
</ol>
</li>
</ol>
</li>
<li>
<p>软件工程</p>
<ol>
<li><strong>软件工程的定义</strong>
<ol>
<li>以书上为准 IEEE
<ol>
<li>将(系统化, 规范的, 可量化的)工程化方法应用于软件的开发,运行和维护</li>
<li>对上述方法的研究</li>
</ol>
</li>
<li>软件工程层次
<ol>
<li>工具 on 方法 on 过程 on 质量关注点</li>
<li>过程 process
<ol>
<li>包括
<ol>
<li>活动 activities
<ol>
<li>实现宽泛的目标</li>
</ol>
</li>
<li>动作 actions
<ol>
<li>主要工作产品生产过程中的一系列任务</li>
</ol>
</li>
<li>任务 tasks
<ol>
<li>小而明确的目标, 实际产品</li>
</ol>
</li>
</ol>
</li>
<li>过程框架
<ol>
<li><strong>沟通/策划/建模/构建/部署</strong></li>
<li>软件工程: 过程框架/普适性活动/框架活动 i/软件工程动作 i.j/任务集</li>
</ol>
</li>
</ol>
</li>
<li>方法 method:</li>
<li>工具 tool:</li>
</ol>
</li>
</ol>
</li>
<li><strong>软件开发神话</strong>: 为什么需要软件工程</li>
<li>注意思考题</li>
</ol>
</li>
<li>
<p>软件过程</p>
<ol>
<li>通用过程框架
<ol>
<li>每个框架活动由一系列动作构成, 每个动作由任务集来定义</li>
<li>任务集明确了将要完成的工作任务,将要产生的工作产品,需要的质量保证点,用于表明过程状态的里程碑</li>
</ol>
</li>
<li>过程流图
<ol>
<li>线性过程流</li>
<li>迭代过程流</li>
<li>演化过程流</li>
<li>并行过程流</li>
</ol>
</li>
<li>明确任务集(细胞)
<ol>
<li>注意<img src="software-engineer/3.3.png" alt="3.3信息栏" /></li>
</ol>
</li>
<li>过程模式
<ol>
<li>注意<img src="software-engineer/3.4.png" alt="3.4信息栏" /></li>
<li>模板 process pattern
<ol>
<li>模式名称</li>
<li>驱动力</li>
<li>类型
<ol>
<li>步骤模式</li>
<li>任务模式</li>
<li>阶段模式</li>
</ol>
</li>
<li>启动条件</li>
<li>问题</li>
<li>解决方案</li>
<li>结果</li>
<li>相关模式</li>
<li>已知应用和实例</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li>
<p>过程模型: 1,2 个, 也可能简答题</p>
<ol>
<li>分类: 传统的/敏捷的</li>
<li>各种模型的特点</li>
<li>瀑布模型是基础
<ol>
<li>沟通/策划/建模/构建/部署</li>
</ol>
</li>
<li>V 模型</li>
<li>增量模型
<ol>
<li>特点
<ol>
<li><strong>第一个增量是核心产品</strong></li>
</ol>
</li>
</ol>
</li>
<li>螺旋模型
<ol>
<li>结合原型的选代性质和瀑布模型的可控性和系统性特点</li>
<li>特点
<ol>
<li>风险识别和应对</li>
</ol>
</li>
</ol>
</li>
<li>UP 统一过程
<ol>
<li><img src="software-engineer/4.7.png" alt="4.7" /></li>
</ol>
</li>
</ol>
</li>
<li>
<p>敏捷</p>
<ol>
<li>定义</li>
<li>敏捷宣言</li>
<li>XP
<ol>
<li>特征
<ol>
<li>保持 KIS 原则</li>
<li>鼓励使用 CRC</li>
<li>先单元测试后代码</li>
<li>结对编程</li>
<li>重构: 以不改变其外部功能或行为而改进设计（或源代码）的内部结构。</li>
</ol>
</li>
<li>用户故事: 描述将要开发的软件所需要的输出, 特征以及功能</li>
</ol>
</li>
<li>Scrum
<ol>
<li>特征
<ol>
<li>待定项 backlog</li>
<li>冲刺 sprint</li>
<li>每日站会</li>
</ol>
</li>
<li>人员
<ol>
<li>Product Owner：杜老师</li>
<li>Scrum Master：邱博</li>
<li>Team：三个组员</li>
</ol>
</li>
<li>步骤
<ol>
<li>我们首先要确定一个 Product Backlog（按优先顺序排列的一个产品需求列表）</li>
<li>团队根据 product backlog 做工作量的估算</li>
<li>通过 Sprint Planning meeting，来从中挑选出一个 Story 作为本次迭代完成的目标，时间周期是 1~4 个星期，然后把这个 Story 进行细化，形成一个 Sprint Backlog</li>
<li>在 Sprint backlog 再细化成更小的任务，成员领取任务（2 天的工作量左右）</li>
<li>过程中要进行每日站立会议，控制在 15 分钟左右，汇报昨天完成了什么，今天要做什么，遇到了哪些问题</li>
<li>做到每日集成，每天都可以有一个成功编译，并且可以演示的版本。</li>
<li>当一个 Story 完成，业绩就是 Sprint backlog 完成，表示一次 Sprint 的完成，这时，要进行 Sprint review meeting。</li>
<li>最后就是 Spring Retrospective Meeting，总结会议，每个人总结并讨论改进，放入到下一次 Sprint 的产品需求中。</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li>
<p>__</p>
</li>
<li>
<p>指导实践的原则</p>
<ol>
<li>软件工程知识</li>
<li>核心原则</li>
<li>指导每个框架活动的原则</li>
</ol>
</li>
<li>
<p>需求工程</p>
<ol>
<li>需求工程过程: 开始/获取/细化/协商/<strong>规格说明(SRS)</strong>/确认/需求管理</li>
<li>用例模板
<ol>
<li>用例</li>
<li>主/次要参与者, 使用方式</li>
<li>何时可用/使用频率</li>
</ol>
</li>
<li>需求的建立(开始): 利益相关者/协同合作</li>
<li>收集需求(获取)</li>
<li>开发用例: 编写<strong>用例规约</strong></li>
<li>构建<strong>分析模型</strong>:
<ol>
<li>元素: 基于场景的元素(活动图)/基于类的元素(类图)/行为元素(状态图)
<ol>
<li>状态图: [状态名|状态变量|状态活动]</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li>
<p>需求建模: 基于场景</p>
<ol>
<li>域分析: 查找或创建广泛应用的分析类或分析模式, 进行复用
<ol>
<li>输入: 技术资料/已有的应用系统/客户调查/专家建议/当前,未来需求</li>
<li>输出: 类的分类/复用标准/功能模型/域语言</li>
</ol>
</li>
<li>用例图, 活动图</li>
<li>泳道图</li>
</ol>
</li>
<li>
<p>需求建模: 类</p>
<ol>
<li>识别分析类, 属性, 操作</li>
<li>语法分析法
<ol>
<li>名词: 类/属性</li>
<li>动词: 操作</li>
</ol>
</li>
<li>CRC</li>
</ol>
</li>
<li>
<p>需求建模: 行为和模式</p>
<ol>
<li>识别行为模型: 相对前面的建模是动态的</li>
<li>识别用例事件</li>
<li>状态表达:
<ol>
<li><strong>状态图</strong></li>
<li>顺序图(序列图)</li>
</ol>
</li>
<li>Web/移动 App 的需求建模
<ol>
<li>类型:
<ol>
<li>内容模型
<ol>
<li>包含所有内容对象和分析类</li>
<li></li>
</ol>
</li>
<li>交互模型
<ol>
<li>功能, 内容和行为之间的交流</li>
<li>包括用例/时序图/状态图/UI 原型</li>
</ol>
</li>
<li>功能模型</li>
<li>导航模型</li>
<li>配置模型</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li>
<p>设计</p>
<ol>
<li>作用
<ol>
<li>产生设计模型: 数据/类设计,体系结构设计,接口设计,构建级设计</li>
<li><img src="12.1.png" alt="" /></li>
</ol>
</li>
<li>设计概念定义
<ol>
<li>抽象/体系结构/模式/关注点分离/模块化/信息隐蔽/功能独立/逐步求精/方面/重构/OOP/设计类/依赖倒置/测试设计</li>
</ol>
</li>
<li>设计模型
<ol>
<li>xx 设计元素: 数据/体系结构/接口/构建级/部署级</li>
</ol>
</li>
</ol>
</li>
<li>
<p>架构级设计</p>
<ol>
<li>软件体系结构: 系统的一个或者多个结构，它包括软件构件、构件的外部可见属性以及它们之间的相互关系。</li>
<li>体系结构环境图 ACD</li>
</ol>
</li>
<li>
<p>构件级设计</p>
<ol>
<li>构件
<ol>
<li>系统中模块化的, 可部署的和可替换的部件, 该部件封装了实现并对外提供一组接口</li>
</ol>
</li>
<li>设计原则
<ol>
<li>OCP/LSP/DIP/ISP/REP/CCP/CRP</li>
</ol>
</li>
</ol>
</li>
</ol>
<h2 id="最后一题-uml-的五类图-40-分"><a class="header-anchor-1" href="#最后一题-uml-的五类图-40-分">#</a>最后一题: UML 的五类图 40 分</h2>
<ol>
<li>用例图</li>
<li>静态图
<ol>
<li>类图</li>
<li>对象图</li>
<li>包图</li>
</ol>
</li>
<li>行为图
<ul>
<li>状态图和活动图格式完全一样, 起点用黑点, 终点是带圈黑点</li>
<li>活动图可以带泳道</li>
</ul>
<ol>
<li>状态图
<ul>
<li>仅为那些有多个状态其行为受外界环境的影响并且发生改变的类画状态图</li>
<li><img src="state_diagram.png" alt="" /></li>
</ul>
</li>
<li>活动图
<ul>
<li><img src="activity_diagram.png" alt="" /></li>
</ul>
</li>
</ol>
</li>
<li>交互图
<ol>
<li>顺序图(序列图)
<ul>
<li>强调时间和顺序</li>
<li><img src="sequence_diagram.png" alt="" /></li>
</ul>
</li>
<li>协作图(通讯图)
<ul>
<li>强调上下级关系</li>
<li><img src="comm_diagram.png" alt="" /></li>
</ul>
</li>
</ol>
</li>
<li>实现图
<ol>
<li>构件图
<ul>
<li><img src="comp_diagram.png" alt="" /></li>
</ul>
</li>
<li>配置图
<ul>
<li><img src="deploy_diagram.png" alt="" /></li>
</ul>
</li>
</ol>
</li>
</ol>
<p>CMM: 一级为初始级，二级为可重复级，三级为已定义级，四级为已管理级，五级为优化级</p>
<p>P179 构建细化</p>
]]></content>
      <categories>
        <category>misc</category>
      </categories>
      <tags>
        <tag>软件工程</tag>
      </tags>
  </entry>
  <entry>
    <title>自签名 SSL 证书</title>
    <url>/2023/11/21/ssl-certificate/</url>
    <content><![CDATA[<h2 id="成为-ca"><a class="header-anchor-1" href="#成为-ca">#</a>成为 CA</h2>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Generate private key</span></span><br><span class="line">openssl genrsa -des3 -out myCA.key 2048</span><br><span class="line"><span class="comment"># Generate root certificate</span></span><br><span class="line">openssl req -x509 -new -nodes -key myCA.key -sha256 -days 825 -out myCA.pem \</span><br><span class="line">    -subj <span class="string">&quot;/C=CN/ST=Shanghai/L=Shanghai/O=/OU=/CN=My first CA&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="信任-ca"><a class="header-anchor-1" href="#信任-ca">#</a>信任 CA</h2>
<p>Ubuntu:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> myCA.pem /usr/local/share/ca-certificates/myCA.crt</span><br><span class="line"><span class="built_in">sudo</span> update-ca-certificates</span><br></pre></td></tr></table></figure>
<h2 id="颁发证书"><a class="header-anchor-1" href="#颁发证书">#</a>颁发证书</h2>
<p>可以有多个域名/IP 地址</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use your own domain name</span></span><br><span class="line">NAME=my.domain.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># Generate a private key</span></span><br><span class="line">openssl genrsa -out <span class="variable">$NAME</span>.key 2048</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a certificate-signing request</span></span><br><span class="line">openssl req -new -key <span class="variable">$NAME</span>.key -out <span class="variable">$NAME</span>.csr \</span><br><span class="line">    -subj <span class="string">&quot;/C=CN/ST=Shanghai/L=Shanghai/O=/OU=/CN=<span class="variable">$NAME</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a config file for the extensions</span></span><br><span class="line"><span class="built_in">cat</span> &gt;<span class="variable">$NAME</span>.ext &lt;&lt;-<span class="string">EOF</span></span><br><span class="line"><span class="string">authorityKeyIdentifier=keyid,issuer</span></span><br><span class="line"><span class="string">basicConstraints=CA:FALSE</span></span><br><span class="line"><span class="string">keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment</span></span><br><span class="line"><span class="string">subjectAltName = @alt_names</span></span><br><span class="line"><span class="string">[alt_names]</span></span><br><span class="line"><span class="string">DNS.1 = $NAME # Be sure to include the domain name here because Common Name is not so commonly honoured by itself</span></span><br><span class="line"><span class="string">DNS.2 = bar.$NAME # Optionally, add additional domains (I&#x27;ve added a subdomain here)</span></span><br><span class="line"><span class="string">IP.1 = 1.2.3.4 # Optionally, add an IP address (if the connection which you have planned requires it)</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create the signed certificate</span></span><br><span class="line">openssl x509 -req -<span class="keyword">in</span> <span class="variable">$NAME</span>.csr -CA myCA.pem -CAkey myCA.key -CAcreateserial \</span><br><span class="line">    -out <span class="variable">$NAME</span>.crt -days 825 -sha256 -extfile <span class="variable">$NAME</span>.ext</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> <span class="variable">$NAME</span>.crt <span class="variable">$NAME</span>.key &gt;<span class="variable">$NAME</span>.pem</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>misc</category>
      </categories>
  </entry>
  <entry>
    <title>TTS &amp; SVC Survey (For Fun)</title>
    <url>/2024/10/05/tts-survey/</url>
    <content><![CDATA[<h2 id="tacotron2"><a class="header-anchor-1" href="#tacotron2">#</a>Tacotron2</h2>
<ul>
<li>Natural TTS Synthesis by Conditioning WaveNet on Mel Spectrogram Predictions, ICASSP 2018</li>
</ul>
<h2 id="vits"><a class="header-anchor-1" href="#vits">#</a>VITS</h2>
<ul>
<li>Conditional Variational Autoencoder with Adversarial Learning for End-to-End Text-to-Speech, ICML 2021</li>
<li>文本转语音 (TTS) 任务</li>
<li>技术: 端到端</li>
</ul>
<h2 id="softvc-hubert-voice-conversion"><a class="header-anchor-1" href="#softvc-hubert-voice-conversion">#</a>SoftVC / HuBERT / Voice Conversion</h2>
<ul>
<li>A Comparison of Discrete and Soft Speech Units for Improved Voice Conversion, ICASSP 2022</li>
<li>声音转换 (Voice Conversion) 任务</li>
<li>HuBERT 模型</li>
</ul>
<h2 id="moegoe"><a class="header-anchor-1" href="#moegoe">#</a>MoeGoe</h2>
<ul>
<li>B 站 UP 主 CjangCjengh 开源 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0NqYW5nQ2plbmdoL01vZUdvZQ==">https://github.com/CjangCjengh/MoeGoe<i class="fa fa-external-link-alt"></i></span></li>
<li>VITS 工具化</li>
<li>基于 Tacotron2 版 Demo <span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXJWNHkxNzdaNy8=">https://www.bilibili.com/video/BV1rV4y177Z7/<i class="fa fa-external-link-alt"></i></span></li>
<li>基于 VITS 版 MoeGoe 工具 <span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUE4NDExdDdzSy8=">https://www.bilibili.com/video/BV1A8411t7sK/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="fastpitch"><a class="header-anchor-1" href="#fastpitch">#</a>Fastpitch</h2>
<h2 id="vits2"><a class="header-anchor-1" href="#vits2">#</a>VITS2</h2>
<ul>
<li>VITS2: Improving Quality and Efficiency of Single-Stage Text-to-Speech with Adversarial Learning and Architecture Design, Interspeech 2023</li>
<li>文本转语音 (TTS) 任务</li>
</ul>
<h2 id="sovits-so-vits-svc-🔥🔥🔥"><a class="header-anchor-1" href="#sovits-so-vits-svc-🔥🔥🔥">#</a>SoVITS / so-vits-svc 🔥🔥🔥</h2>
<ul>
<li>B 站 UP 主 Rcell 开源 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lubm5reS9zby12aXRzLXN2Yw==">https://github.com/innnky/so-vits-svc<i class="fa fa-external-link-alt"></i></span> (已删)</li>
<li>歌声转换 (Singing Voice Conversion) 任务</li>
<li>技术实现: 把 VITS2 中的 text encoder 替换为 SoftVC 中的 HuBERT</li>
<li>荣誉: 时代周刊评价 2023 最佳发明 <span class="exturl" data-url="aHR0cHM6Ly90aW1lLmNvbS9jb2xsZWN0aW9uL2Jlc3QtaW52ZW50aW9ucy0yMDIzLzYzMjcxMzUvc28tdml0cy1zdmMv">https://time.com/collection/best-inventions-2023/6327135/so-vits-svc/<i class="fa fa-external-link-alt"></i></span></li>
<li>一些训练好的声音模型: <span class="exturl" data-url="aHR0cHM6Ly9odWdnaW5nZmFjZS5jby9zcGFjZXMvem9tZWh3aC92aXRzLW1vZGVscy90cmVlL21haW4vcHJldHJhaW5lZF9tb2RlbHM=">https://huggingface.co/spaces/zomehwh/vits-models/tree/main/pretrained_models<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="ai-峰哥"><a class="header-anchor-1" href="#ai-峰哥">#</a>AI 峰哥</h2>
<ul>
<li>效果演示: <span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXcyNHkxYzd6OS8=">https://www.bilibili.com/video/BV1w24y1c7z9/<i class="fa fa-external-link-alt"></i></span></li>
<li>Idea: Fastpitch + NLP 模型</li>
<li>MassTTS: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FueXZvaWNlYWkvTWFzc1RUUw==">https://github.com/anyvoiceai/MassTTS<i class="fa fa-external-link-alt"></i></span></li>
<li>ChatGLM-6B: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xpY2g5OS9DaGF0R0xNLWZpbmV0dW5lLUxvUkE=">https://github.com/lich99/ChatGLM-finetune-LoRA<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="bert-vits2"><a class="header-anchor-1" href="#bert-vits2">#</a>BERT-VITS2</h2>
<ul>
<li>B 站 fishaudio 开源 <span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMThFNDIxMzcxUS8=">https://www.bilibili.com/video/BV18E421371Q/<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Zpc2hhdWRpby9CZXJ0LVZJVFMy">https://github.com/fishaudio/Bert-VITS2<i class="fa fa-external-link-alt"></i></span></li>
<li>启发自 AI 峰哥</li>
<li>技术实现: 把 VITS2 中的 text encoder 替换为 BERT</li>
</ul>
<h2 id="openvoice"><a class="header-anchor-1" href="#openvoice">#</a>OpenVoice</h2>
<ul>
<li>即时语音转换 (Immediate Voice Conversion, Zero-shot TTS) 任务</li>
</ul>
<h2 id="rvc"><a class="header-anchor-1" href="#rvc">#</a>RVC</h2>
<ul>
<li>B 站 UP 主 花儿不哭 开源 <span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXBtNHkxejdHbS8=">https://www.bilibili.com/video/BV1pm4y1z7Gm/<i class="fa fa-external-link-alt"></i></span></li>
<li>声音转换 (Voice Conversion) 任务</li>
<li>10 分钟样本</li>
</ul>
<h2 id="gpt-sovits"><a class="header-anchor-1" href="#gpt-sovits">#</a>GPT-SoVITS</h2>
<ul>
<li>B 站 UP 主 花儿不哭 开源 <span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMTJnNHkxbTdVdy8=">https://www.bilibili.com/video/BV12g4y1m7Uw/<i class="fa fa-external-link-alt"></i></span></li>
<li>声音转换 (Voice Conversion) 任务</li>
<li>RVC 延续, 只需 5 ~ 10s 样本</li>
</ul>
<h2 id="fish-speech"><a class="header-anchor-1" href="#fish-speech">#</a>fish-speech</h2>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Zpc2hhdWRpby9maXNoLXNwZWVjaA==">https://github.com/fishaudio/fish-speech<i class="fa fa-external-link-alt"></i></span></li>
<li>Zero-shot TTS 任务</li>
<li>基于自回归模型</li>
<li>一段 5s 音频样本即可生成语音</li>
</ul>
<h2 id="chattts"><a class="header-anchor-1" href="#chattts">#</a>ChatTTS</h2>
<ul>
<li>AI 峰哥新版本 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tLzJub2lzZS9DaGF0VFRT">https://github.com/2noise/ChatTTS<i class="fa fa-external-link-alt"></i></span></li>
<li>TTS 任务, 对话场景, 支持细粒度控制和韵律</li>
<li>支持通过 LoRA 微调实现不同音色</li>
</ul>
]]></content>
      <categories>
        <category>misc</category>
      </categories>
  </entry>
  <entry>
    <title>网站内容优化</title>
    <url>/2024/04/25/website-optimization/</url>
    <content><![CDATA[<p>今天用 <span class="exturl" data-url="aHR0cHM6Ly93ZWIuZGV2L21lYXN1cmUv">lighthouse<i class="fa fa-external-link-alt"></i></span> 分析博客的性能，发现几个之前不了解的问题，记录一下。</p>
<h2 id="避免在主线程跑复杂-js"><a class="header-anchor-1" href="#避免在主线程跑复杂-js">#</a>避免在主线程跑复杂 JS</h2>
<p>live2d.js 很耗时</p>
<h2 id="内嵌关键-js-css，延迟非关键-js-css"><a class="header-anchor-1" href="#内嵌关键-js-css，延迟非关键-js-css">#</a>内嵌关键 JS/CSS，延迟非关键 JS/CSS</h2>
<h2 id="使用-webp-格式的图片"><a class="header-anchor-1" href="#使用-webp-格式的图片">#</a>使用 WebP 格式的图片</h2>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">cwebp -q 50 images/flower1.jpg -o images/flower1.webp</span></span><br></pre></td></tr></table></figure>
<p>50 表示质量，0 是最差，100 是最佳。</p>
<p>兼容方案：向新版浏览器提供 WebP 内容，同时保留对旧版浏览器的支持。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">picture</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">type</span>=<span class="string">&quot;image/webp&quot;</span> <span class="attr">srcset</span>=<span class="string">&quot;images/flower1.webp&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">type</span>=<span class="string">&quot;image/jpeg&quot;</span> <span class="attr">srcset</span>=<span class="string">&quot;images/flower1.jpg&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/flower1.jpg&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">picture</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="字体设置"><a class="header-anchor-1" href="#字体设置">#</a>字体设置</h2>
<p>有些浏览器在字体文件加载完成之前会隐藏文本。</p>
<p>字体 css 的<code>font-display</code>属性设置此行为：</p>
<ul>
<li>auto: 字体显示策略由用户代理定义。</li>
<li>block: 为字体提供一个短暂的阻塞周期和无限的交换周期。</li>
<li>swap: 为字体提供一个非常小的阻塞周期和无限的交换周期。</li>
<li>fallback: 为字体提供一个非常小的阻塞周期和短暂的交换周期。</li>
<li>optional: 为字体提供一个非常小的阻塞周期，并且没有交换周期。</li>
</ul>
<p>讲人话就是，后三个选项明确指示浏览器使用 fallback 字体。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Pacifico&quot;</span>;</span><br><span class="line">  <span class="attribute">font-style</span>: normal;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">local</span>(<span class="string">&quot;Pacifico Regular&quot;</span>), <span class="built_in">local</span>(<span class="string">&quot;Pacifico-Regular&quot;</span>),</span><br><span class="line">    <span class="built_in">url</span>(<span class="string">https://fonts.gstatic.com/s/pacifico/v12/FwZY7-Qmy14u9lezJ-6H6MmBp0u-.woff2</span>)</span><br><span class="line">      <span class="built_in">format</span>(<span class="string">&quot;woff2&quot;</span>);</span><br><span class="line">  <span class="attribute">font-display</span>: swap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>misc</category>
      </categories>
      <tags>
        <tag>SEO</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>A Unified Architecture for Accelerating Distributed DNN Training in Heterogeneous GPU/CPU Clusters 论文阅读</title>
    <url>/2025/04/06/a-unified-architecture-for-accelerating/</url>
    <content><![CDATA[<h2 id="1-引言"><a class="header-anchor-1" href="#1-引言">#</a>1. 引言</h2>
<p>近年来，为了训练更大的模型，深度学习训练集群在不断发展。这样的集群通常包括 GPU，CPU 和高速互联网络，例如高速以太网或者 Infiniband。</p>
<p>两个主要的架构是<strong>参数服务器</strong>（Parameter Server）和<strong>All-Reduce</strong>。他们都是基于数据并行（Data Parallel）的方法。</p>
<p>在 All-Reduce 架构中，只涉及 GPU 机器。在参数服务器架构中，CPU 和 GPU 机器都参与训练。</p>
<p>这两种架构在理论和实践中都有很大的差异。对于仅有 GPU 的集群，All-Reduce 是带宽最优的。然而，随着 CPU 和带宽资源的增加，All-Reduce 的最优性不再成立。</p>
<p>从理论上讲，使用额外的 CPU 机器来帮助 GPU 机器，参数服务器架构能够取得更好的性能。然而，现有的实现不够令人满意。</p>
<p>在本文中，作者提出了一种新的架构，称为<strong>BytePS</strong>，它通过仔细分配流量负载，统一了参数服务器和 All-Reduce 两种架构，能够适用于任意比例的不同 PCIe/NVLink 配置的 CPU/GPU 机器上。</p>
<h2 id="2-背景"><a class="header-anchor-1" href="#2-背景">#</a>2. 背景</h2>
<h3 id="2-1-分布式-dnn-训练"><a class="header-anchor-1" href="#2-1-分布式-dnn-训练">#</a>2.1 分布式 DNN 训练</h3>
<h3 id="2-2-all-reduce"><a class="header-anchor-1" href="#2-2-all-reduce">#</a>2.2 All-Reduce</h3>
<h3 id="2-3-参数服务器"><a class="header-anchor-1" href="#2-3-参数服务器">#</a>2.3 参数服务器</h3>
<h2 id="3-byteps-架构"><a class="header-anchor-1" href="#3-byteps-架构">#</a>3. BytePS 架构</h2>
<h3 id="3-1-动机"><a class="header-anchor-1" href="#3-1-动机">#</a>3.1 动机</h3>
<p>在 BytePS 之前，用户大多使用 All-Reduce 架构来训练 DNN 模型。作者观察到几个现象：</p>
<ol>
<li>生产 GPU 集群通常有闲置的 CPU 和带宽。</li>
<li>现有的 All-Reduce 和 PS 实现都没有充分利用 CPU 和带宽。</li>
</ol>
<p>作者的解决方案是 BytePS，它是一个统一的架构，可以利用空闲的 CPU 和带宽来加速训练。</p>
<h3 id="3-2-架构概述"><a class="header-anchor-1" href="#3-2-架构概述">#</a>3.2 架构概述</h3>
<p>BytePS 有两个主要模块：通信服务（Communication Service）和汇总服务（Summation Service）。</p>
<p>汇总服务 SS 运行在所有类型的机器上。</p>
<p>通信服务 CS 只运行在 GPU 机器上，负责在多个本地 GPU 之间同步 Tensor，并且与 SS 进行通信。</p>
<h2 id="4-byteps-通信设计"><a class="header-anchor-1" href="#4-byteps-通信设计">#</a>4. BytePS 通信设计</h2>
<h3 id="4-1-机器间通信"><a class="header-anchor-1" href="#4-1-机器间通信">#</a>4.1 机器间通信</h3>
<p>在 BytePS 中，所有通信都通过通信服务（CS）进行。假设网络具有全双工带宽，而且 DCQCN 类似的流量控制算法可以在网络中使用。</p>
<p>CPU 机器的网络流量等于其上 SS 的总和。GPU 机器的网络流量等于其上 SS 和 CS 的总和。</p>
<p>为了尽量减少通信时间，BytePS 给每个 CPU 上的 SS 分配 MssCpu 字节的求和负载。给每个 GPU 上的 CS 分配 MssGpu 字节的求和负载。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>MssCpu</mtext><mo>=</mo><mfrac><mrow><mn>2</mn><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mrow><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mi>k</mi><mi>n</mi><mo>−</mo><mn>2</mn><mi>k</mi></mrow></mfrac><mi>M</mi><mspace linebreak="newline"></mspace><mtext>MssGpu</mtext><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><mrow><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mi>k</mi><mi>n</mi><mo>−</mo><mn>2</mn><mi>k</mi></mrow></mfrac><mi>M</mi></mrow><annotation encoding="application/x-tex">\text{MssCpu} = \frac{2(n-1)}{n^2+kn-2k}M \\
\text{MssGpu} = \frac{(n-k)}{n^2+kn-2k}M
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord text"><span class="mord">MssCpu</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1963em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">kn</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord text"><span class="mord">MssGpu</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1963em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">kn</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></span></p>
<p>在实践中，DNN 模型的参数大小通常是不固定的。作者将参数分割成不超过 4MB 的小块。然后，所有 CS 将这些小块哈希到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mi>k</mi><mi>n</mi><mo>−</mo><mn>2</mn><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">[0, n^2+kn-2k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">kn</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>的范围内。根据哈希值，CS 发送和接收对应的数据给 SS。</p>
<h3 id="4-2-机器内通信"><a class="header-anchor-1" href="#4-2-机器内通信">#</a>4.2 机器内通信</h3>
<h3 id="4-2-1-pcie-机器"><a class="header-anchor-1" href="#4-2-1-pcie-机器">#</a>4.2.1 PCIe 机器</h3>
<p>作者生产环境的机器模型是纯 PCIe 拓扑的，每个 CPU 直连 4 块 GPU，两个 CPU 之间通过 QPI 链接。使用现有的框架（例如 TensorFlow PS，MXNet PS，Horovod），在进行 Reduce 或者 Reduce-Scatter 时，会导致跨 PCIe 的内存拷贝，性能很差。</p>
<p>BytePS 考虑到 PCIe 拓扑的特点，允许同一个 PCIe 下的 GPU 先进行一个求和操作，然后再拷贝到 CPU 进行全局的求和操作，称为 CPU-assisted aggregation。完整步骤如下：</p>
<ol>
<li>Reduce-Scatter</li>
<li>GPU-&gt;CPU 拷贝</li>
<li>CPU-Reduce</li>
<li>Networking</li>
<li>CPU-&gt;GPU 拷贝</li>
<li>All-Gather</li>
</ol>
<p>实践结果表明 CPU-assisted aggregation 比单纯的 Ring-AllReduce 要好。</p>
<h3 id="4-2-2-nvlink-机器"><a class="header-anchor-1" href="#4-2-2-nvlink-机器">#</a>4.2.2 NVLink 机器</h3>
<p>作者数据中心的另一种机器模型是带有 NVLink 连接的 GPU 机器。每台机器有 4 个 PCIe Switch，每个 Switch 连接 2 个 GPU，GPU 之间通过 NVLink 连接。NVLink 的带宽远高于 PCIe。</p>
<p>因为有 NVLink 的存在，GPU 之间的通信不需要占用 PCIe 带宽。然而，由于 NVLink 不是完全对称的，仍然存在 PCIe 带宽的瓶颈。</p>
<h3 id="4-2-3-讨论"><a class="header-anchor-1" href="#4-2-3-讨论">#</a>4.2.3 讨论</h3>
<p>以上分析表明，最佳的方案与机器的拓扑结构密切相关。</p>
<p>尽管存在差异，但作者总结了两个原则：</p>
<ol>
<li>当两个 GPU 不在同一个 PCIe 交换机下时，始终避免直接的 GPU 到 GPU 内存复制，因为在实践中它很慢。</li>
<li>尽量减少在由 GPU 和 NIC 共享的 PCIe 交换机到 CPU 链路上的数据流量。</li>
</ol>
<p>作者提出了以下最佳实践程序。让 Sn 表示具有 GPU 和 NIC 的 PCIe 交换机的数量，Sg 表示仅具有 GPU 的 PCIe 交换机的数量。</p>
<ol>
<li>如果 Sn &gt; 0，Sg &gt; 0，CS 应该使用 Reduce 和 Broadcast，就不会竞争网卡带宽。</li>
<li>如果 Sn = 0 或者 Sg = 0，CS 应该使用 Reduce-Scatter 和 All-Gather 来平衡 PCIe 交换机上的流量。</li>
</ol>
<p>多网卡情况同理。</p>
<p>GDR 技术(GPU-direct RDMA)可以减少 PCIe 流量，然而需要 GPU 和 RDMA 网卡在同一个 PCIe 交换机上。因此没有什么好处。</p>
<p>构建一个分析器来自动选择最佳的通信模式是一个有趣的研究方向。</p>
<h2 id="5-汇总服务-ss"><a class="header-anchor-1" href="#5-汇总服务-ss">#</a>5. 汇总服务 SS</h2>
<p>CPU 的内存带宽在某些时候可能会成为瓶颈。</p>
<p>作者提出了一个新的解决方案，将计算密集型的汇总操作分配给 GPU，并仅在 CPU 上执行 CPU 擅长的汇总操作。</p>
<p>虽然汇总操作提升了训练性能，但是打破了 PS 的异步特性。为此，作者提出了一个新的异步汇总算法。</p>
]]></content>
      <categories>
        <category>mlsys</category>
      </categories>
      <tags>
        <tag>MLSys</tag>
        <tag>Parameter Server</tag>
        <tag>BytePS</tag>
      </tags>
  </entry>
  <entry>
    <title>Horovod: fast and easy distributed deep learning in TensorFlow 论文阅读</title>
    <url>/2025/04/04/horovod-fast-and-easy-distributed/</url>
    <content><![CDATA[<p>Horovod 是 Uber 于 2017 年发布的一个易于使用的高性能的分布式<strong>深度训练</strong>框架，支持 TensorFlow，Keras，PyTorch 和 MXNet。</p>
<p>（博主注: 2017 年 Google 刚刚提出 Transformer，2018 年 BERT 发布，2019 年 GPT-2 发布，2020 年 GPT-3 发布。回头看这篇 2017 年的论文仅供学习。）</p>
<h2 id="1-引言"><a class="header-anchor-1" href="#1-引言">#</a>1. 引言</h2>
<p>近年来，深度学习蓬勃发展。User 公司选择了 TensorFlow 作为其深度学习框架。原因是:</p>
<ol>
<li>广泛使用，用户技术大，新用户容易上手</li>
<li>具有高性能，支持对底层细节的控制: 例如有 Keras 这样的高级 API，也可以通过 CUDA 实现自定义的算子</li>
<li>支持广泛的使用场景: 从云服务平台到端侧设备</li>
</ol>
<p>2017 年 Uber 团队提出了 Michelangelo 机器学习平台，本文介绍了其中一个开源组件，Horovod，开源地址在 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ViZXIvaG9yb3ZvZA==">https://github.com/uber/horovod<i class="fa fa-external-link-alt"></i></span>。</p>
<h2 id="2-开始分布式"><a class="header-anchor-1" href="#2-开始分布式">#</a>2. 开始分布式</h2>
<p>当 Uber 内部的深度学习模型变得越来越多时，模型的大小和数据消耗显著增加。在大多数情况下，单台机器（单卡或者多卡）可以满足需求。但是训练耗时很长，有时需要一周甚至更长的时间。为了解决这个问题，Uber 开始探索分布式训练。</p>
<p>Uber 团队首先使用了标准的 TensorFlow 分布式训练 API。发现两个明显的问题:</p>
<ol>
<li>用户不知道如何使用: 做深度学习的人往往不懂底层概念, 不清楚该如何修改自己的代码，Debug 也很麻烦</li>
<li>可伸缩性: Uber 的服务规模过大，TensorFlow 在这种情况下的性能不佳。例如在 128 卡跑 TF 的 benchmark 时，利用率不到 50%。</li>
</ol>
<h2 id="3-使用不同的算法"><a class="header-anchor-1" href="#3-使用不同的算法">#</a>3. 使用不同的算法</h2>
<p>Uber 团队尝试了 Facebook Accurate, large minibatch SGD: Training ImageNet in 1 hour 论文中的数据并行(Data Parallel)方法。</p>
<p>从概念上说，DP 方法很简单：每个训练脚本副本读取一个数据库，进行 forward 之后计算梯度，多个副本之间平均梯度，然后更新参数。</p>
<p>标准的 TensorFlow 分布式训练 API 使用了 Parameter Server 方法来平均梯度。虽然能够提高性能，但是遇到两个挑战：</p>
<ol>
<li>难以确定计算节点和服务节点的比例</li>
<li>增加应用程序的复杂性</li>
</ol>
<p>2017 年初百度开源了一个基于 Ring-AllReduce 方法的 TensorFlow Fork。</p>
<p>在 Ring-AllReduce 方法中，每个节点与其他两个相邻的节点交换梯度，经过多次迭代后，所有节点都拥有相同的梯度。该算法能更好地利用网络带宽。</p>
<p>此外，这种方法也更容易理解，用户使用 MPI API 进行编程，使用<code>mpirun</code>启动训练，修改也更简单。</p>
<h2 id="4-horovod"><a class="header-anchor-1" href="#4-horovod">#</a>4. Horovod</h2>
<p>Uber 团队在百度的 Fork 的基础上构建了 Horovod。</p>
<ol>
<li>相关代码被放进了一个单独的 Python 包中，方便安装和使用</li>
<li>使用 NCCL 替换了百度的 Ring-AllReduce 实现</li>
<li>增加了对单机器多卡的支持，之前只支持单卡</li>
<li>根据用户反馈进行改进，增加了全局同步的广播操作。用户只需要增加 4 个 API 即可。</li>
</ol>
<h2 id="5-如何使用"><a class="header-anchor-1" href="#5-如何使用">#</a>5. 如何使用</h2>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> horovod.tensorflow <span class="keyword">as</span> hvd</span><br><span class="line"></span><br><span class="line"><span class="comment"># Initialize Horovod</span></span><br><span class="line">hvd.init()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pin GPU to be used to process local rank(one GPU per process)</span></span><br><span class="line">config = tf.ConfigProto()</span><br><span class="line">config.gpu_options.visible_device_list = <span class="built_in">str</span>(hvd.local_rank())</span><br><span class="line"></span><br><span class="line"><span class="comment"># Build model...</span></span><br><span class="line">loss = ...</span><br><span class="line"></span><br><span class="line">opt = tf.train.AdagradOptimizer(<span class="number">0.01</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add Horovod Distributed Optimizer</span></span><br><span class="line">opt = hvd.DistributedOptimizer(opt)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add hook to broadcast variables from rank 0 to all other processes</span></span><br><span class="line"><span class="comment"># during initialization.</span></span><br><span class="line">hooks = [hvd.BroadcastGlobalVariablesHook(<span class="number">0</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Make training operation</span></span><br><span class="line">train_op = opt.minimize(loss)</span><br><span class="line"></span><br><span class="line"><span class="comment"># The MonitoredTrainingSession takes care of session initialization,</span></span><br><span class="line"><span class="comment"># restoring from a checkpoint, saving to a checkpoint, and closing</span></span><br><span class="line"><span class="comment"># when done or an error occurs.</span></span><br><span class="line"><span class="keyword">with</span> tf.train.MonitoredTrainingSession(checkpoint_dir=<span class="string">&quot;/tmp/train_logs&quot;</span>, config=config,hooks=hooks) <span class="keyword">as</span> mon_sess:</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> mon_sess.should_stop():</span><br><span class="line">        <span class="comment"># Perform synchronous training.</span></span><br><span class="line">        mon_sess.run(train_op)</span><br></pre></td></tr></table></figure>
<p>用户可以使用</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mpirun -np 16 -H server1:4,server2:4,server3:4,server4:4 python train.py</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>来启动训练。<code>-np 16</code>表示使用 16 个进程，<code>-H</code>表示主机列表。</p>
<h2 id="6-horovod-timeline"><a class="header-anchor-1" href="#6-horovod-timeline">#</a>6. Horovod Timeline</h2>
<p>Horovod Timeline 是一个可视化工具，可以帮助用户分析训练过程中的性能瓶颈。</p>
<h2 id="7-tensor-聚合"><a class="header-anchor-1" href="#7-tensor-聚合">#</a>7. Tensor 聚合</h2>
<p>在调用 Ring-AllReduce 之前，Horovod 可以对 Tensor 进行聚合以可以减少通信开销。</p>
<h2 id="8-评估"><a class="header-anchor-1" href="#8-评估">#</a>8. 评估</h2>
<p>使用 Horovod 运行 Tensorflow 的 Benchmark，训练速度能够达到 Tensorflow 的 2 倍。</p>
<p>由于 MPI 和 NCCL 都支持 RDMA，作者也测试了使用 RDMA 的性能。在某些情况下能够提升。</p>
<h2 id="faq"><a class="header-anchor-1" href="#faq">#</a>FAQ</h2>
<h3 id="1-nccl-和-mpi-是什么？"><a class="header-anchor-1" href="#1-nccl-和-mpi-是什么？">#</a>1. NCCL 和 MPI 是什么？</h3>
<p>NCCL（NVIDIA Collective Communications Library）是 NVIDIA 针对 GPU 设计的一种规约库，可以实现多 GPU 间的直接数据同步，避免内存和显存的，CPU 和 GPU 间的数据拷贝成本。</p>
<p>MPI（Massage Passing Interface）是消息传递函数库的标准规范，主要是被应用在科学计算，尤其是超算领域。由于容错性一般，故在机器学习场景下使用较少。</p>
]]></content>
      <categories>
        <category>mlsys</category>
      </categories>
      <tags>
        <tag>MLSys</tag>
        <tag>horovod</tag>
        <tag>tensorflow</tag>
      </tags>
  </entry>
  <entry>
    <title>Megatron-LM: Training Multi-Billion Parameter Language Models Using Model Parallelism 论文阅读</title>
    <url>/2025/04/05/megatron-lm-training-multi-billion-parameter/</url>
    <content><![CDATA[<p>NVIDIA 出品的大模型训练方法，2019 年挂在 ArXiV 上，到现在(2025 年)有 2k+ 论文引用。</p>
<h2 id="1-引言"><a class="header-anchor-1" href="#1-引言">#</a>1. 引言</h2>
<p>得益于计算能力和数据集大小的增长，NLP 领域取得了飞速的进展。</p>
<p>随着这些模型变得越来越大，它们超出了现代处理器的内存限制，需要额外的内存管理技术，例如 Activation Checkpointing。广泛使用的优化算法，如 Adam，需要每个参数存储额外的信息例如动量和其他优化器状态，这降低了可以训练的模型的大小。几种模型并行方法通过按比例划分模型参数来解决这个问题，使得权重和优化器状态不需要同时存在于处理器上。例如，GPipe 和 Mesh TensorFlow 提供了各种模型并行化框架。然而，这些方法需要重写模型，并且依赖于自定义的编译器和框架。</p>
<p>在这项工作中，作者实现了一个简单而有效的模型并行方法，使用层内模型并行。作者利用了 Transformer 架构的内存结构来实现简单的模型并行实现，可以高效地在 PyTorch 中进行训练，无需自定义 C++代码或者编译器。这种方法于 GPipe 等方法所倡导的基于管道的模型并行方法正交。</p>
<h2 id="2-背景与挑战"><a class="header-anchor-1" href="#2-背景与挑战">#</a>2. 背景与挑战</h2>
<h3 id="2-1-神经语言模型预训练"><a class="header-anchor-1" href="#2-1-神经语言模型预训练">#</a>2.1. 神经语言模型预训练</h3>
<p>预训练语言模型已经是 NLP 中不可或缺的组成部分。这些方法的进步需要高效的硬件、系统技术和框架。本文的工作旨在提供必要的工具，以便在这个趋势中迈出一步。</p>
<h3 id="2-2-transformer-语言模型和多头注意力机制"><a class="header-anchor-1" href="#2-2-transformer-语言模型和多头注意力机制">#</a>2.2 Transformer 语言模型和多头注意力机制</h3>
<p>由于其优越的准确性和计算效率，当前的 NLP 趋势是使用 Transformer 模型。原始的 Transformer 模型是一种机器翻译架构，分为编码器和解码器两个部分。然而，最近（2019 年）的工作，如 BERT 和 GPT-2 只使用了 Transformer 的编码器或解码器部分。</p>
<h3 id="2-3-深度学习中的数据并行和模型并行"><a class="header-anchor-1" href="#2-3-深度学习中的数据并行和模型并行">#</a>2.3 深度学习中的数据并行和模型并行</h3>
<p>有两种主要的方法来利用大量硬件加速器以扩展深度学习模型：<em>数据并行</em>（1990）和<em>模型并行</em>。数据并行方法中，每个 minibatch 被划分到多个 Worker 上。模型并行方法中，模型的内存使用和计算分布在多个 Worker 上。通过成比例增加 minibatch 大小和 Worker 数量的比例，可以观测到接近线性增长的训练数据吞吐量。然而，大的训练 batch 会引入优化过程的复杂性，可能导致准确性降低、或者收敛速度变慢，从而抵消了吞吐量增加的好处。
Parallel work 结合了数据并行和激活检查点方法来减少内存的需求。</p>
<p>然而，这些技术有一个共同的缺点：模型必须能完全放入 Worker 的内存中。随着语言模型越来越大和复杂，神经网络已经接近这个限制。解决这个问题的一个方法是使用参数共享(2019)来减少模型的内存占用，但是会限制模型的整体容量。本文的方法是使用模型并行来将模型分布在多个 GPU 上，这不仅缓解了内存压力，还增加了与 minibatch 大小无关的并行性。</p>
<p>在模型并行中，还有两个其他的范式：<em>层间流水线并行</em>，和更通用的<em>分布式张量计算</em>。在流水线模型并行中，在一个设备上先执行一组操作，然后输出会被传递到流水线上的下一个设备，在上面进行另一组操作。一些方法使用参数服务器和流水线并行相结合。然而会遇到不一致的问题，这种方法需要额外的处理逻辑，以及对优化器本身进行修改，而这些修改会降低效率或者影响准确性。</p>
<p>分布式张量计算是一种正交而且更加通用的方法，它将一个张量操作分布在多个设备上，以加速计算或者增加模型大小。
FlexFlow(Jia et al., 2018)提出了一种选择最优并行化策略的方法。最近，Mesh-TensorFlow(Shazeer et al., 2018)引入了一种语言来指定 TensorFlow 中的一般类分布张量计算。该语言由用户定义维度，使用适当的聚合原语编译生成的图。我们与 Mesh-TensorFlow 有类似的见解，但是我们没有实现新的框架和编译器，而是对现有的 PyTorch Transformer 实现进行了少量针对性的修改。我们的方法简单易懂，不需要任何新的编译器或者代码重写，通过插入一些简单的原语就可以完全实现，如下一节所述。</p>
<h2 id="3-模型并行-transformer"><a class="header-anchor-1" href="#3-模型并行-transformer">#</a>3. 模型并行 Transformer</h2>
<p>本文利用了 Transformer 的网络结构，通过添加几个同步原语来实现一个简单的模型并行。
Transformer 层由一个 Self Attention 后跟一个 MLP 组成，我们在两个块中分别引入了模型并行性。</p>
<p>首先介绍 MLP 块。MLP 块的第一部分是 GEMM，然后是 GeLU。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>Y</mi><mo>=</mo><mi>G</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>X</mi><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Y=GeLU(XA)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></span></p>
<p>并行化 GEMM 的一种方法是按行拆分权重矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>，按列拆分输入矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>X</mi><mo>=</mo><mo stretchy="false">[</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo stretchy="false">]</mo><mspace linebreak="newline"></mspace><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>A</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>A</mi><mn>2</mn></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mspace linebreak="newline"></mspace><mi>Y</mi><mo>=</mo><mi>G</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mn>1</mn></msub><msub><mi>A</mi><mn>1</mn></msub><mo>+</mo><msub><mi>X</mi><mn>2</mn></msub><msub><mi>A</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X=[X_1, X_2] \\
A=\begin{bmatrix}
A_1 \\
A_2
\end{bmatrix} \\
Y=GeLU(X_1 A_1 + X_2 A_2)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>因为 GeLU 是一个非线性函数，不能继续拆分成两个 GeLU 的和，这种方法需要在 GeLU 函数之前就插入同步点。</p>
<p>另一种选择是按列拆分<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mo stretchy="false">[</mo><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">A = [A_1, A_2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>。这种分区允许我们对每个分区的 GEMM 结果独立应用 GeLU 非线性：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>Y</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>Y</mi><mn>2</mn></msub><mo stretchy="false">]</mo><mo>=</mo><mo stretchy="false">[</mo><mi>G</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>X</mi><msub><mi>A</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>G</mi><mi>e</mi><mi>L</mi><mi>u</mi><mo stretchy="false">(</mo><mi>X</mi><msub><mi>A</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[Y_1, Y_2]=[GeLU(X A_1), GeLu(X A_2)]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">G</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">e</span><span class="mord mathnormal">Lu</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)]</span></span></span></span></span></p>
<p>这种划分有利于消除同步点。因此，我们采用了这种方法。在分块进行第二次 GEMM 之后，进行 Reduce，然后进行 Dropout 层。这种方法将 MLP 块中的两个 GEMM 都分布在 GPU 上，并且只需要 Forward 和 Backward 各一次 All-Reduce。这两个操作彼此共轭，而且可以在 PyTorch 中使用几行代码实现。例如下面的代码实现：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">f</span>(torch.autograd.Function):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">ctx, x</span>):</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">backward</span>(<span class="params">ctx, gradient</span>):</span><br><span class="line">        all_reduce(gradient)</span><br><span class="line">        <span class="keyword">return</span> gradient</span><br></pre></td></tr></table></figure>
<p>对于 Self Attention，我们利用了 Multihead Attention 操作中的固有并行性，按照 K, Q 和 V 划分 GEMM 操作，这样每个 Attention 头对应的矩阵乘法都在一个 GPU 上本地执行。这使得我们能够将每个 Attention 头的参数和工作负载分布在多个 GPU 上，并且不需要任何即时通信就可以完成 Self Attention 的计算。输出 linear 层之后的 GEMM 按照行并行化，并直接采用并行注意力层的输出，无需 GPU 之间的通信。这种方法融合了两组 GEMM，去掉了中间一个同步点，并带来了更好的拓展性。这使得我们能够只使用 Forward/Backward 各两次 All-Reduce 的情况下，实现简单 Transformer 层中所有的 GEMM 计算。</p>
<p>Transformer 语言模型有一个 Hidden-size(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span></span>) x Vocabulary-size(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>) 大小的输入 Embedding 层。由于现代语言模型的词表通常在万级别（例如，GPT-2 是 50,257 个），因此对输出 Embedding 层进行并行化是有好处的。然而，在 Transformer 语言模型中，输入和输出 Embedding 层共享权重，需要进行修改。我们按照单词维度并行化输入 Embedding 权重矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mrow><mi>H</mi><mo>×</mo><mi>v</mi></mrow></msub><mo>=</mo><mo stretchy="false">[</mo><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">E_{H\times v} = [E_1, E_2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>。现在因为每个分片只包含 Embedding 表个一部分，在输入 Embedding 之后需要一次 All-Reduce。</p>
<p>对于输出 Embedding，一种办法是进行并行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mi>E</mi><mi>M</mi><mi>M</mi><mo stretchy="false">[</mo><msub><mi>Y</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>Y</mi><mn>2</mn></msub><mo stretchy="false">]</mo><mo>=</mo><mo stretchy="false">[</mo><mi>X</mi><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><mi>X</mi><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">GEMM[Y_1, Y_2] = [X E_1, X E_2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">GEMM</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span> 获取 logits，加上一次 All-gather 操作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>=</mo><mi>a</mi><mi>l</mi><mi>l</mi><mo>−</mo><mi>g</mi><mi>a</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mo stretchy="false">(</mo><mo stretchy="false">[</mo><msub><mi>Y</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>Y</mi><mn>2</mn></msub><mo stretchy="false">]</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Y=all-gather([Y_1, Y_2])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mopen">([</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">])</span></span></span></span>，然后把结果发给 Cross-Entropy 损失函数。然而，All-gather 操作需要通信 <span class="katex-error" title="ParseError: KaTeX parse error: Expected &#x27;EOF&#x27;, got &#x27;_&#x27; at position 12: \text{batch_̲size} \times \t…" style="color:#999999">\text{batch_size} \times \text{seq_len} \times v</span> 个元素，由于词表大小<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>很大，总体通信也很大。为了减少通信大小，作者将并行<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mi>E</mi><mi>M</mi><mi>M</mi><mo stretchy="false">[</mo><msub><mi>Y</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>Y</mi><mn>2</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">GEMM[Y_1, Y_2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">GEMM</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>的输出与 Cross-Entropy 聚合在一起，将维度降低至 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>×</mo><mi>s</mi></mrow><annotation encoding="application/x-tex">b \times s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span>。只通信标量的损失而不是 logits，极大地减少了通信量，提高了模型并行方法的效率。</p>
<p>我们的模型并发方法的主要特点是减少通信并保持 GPU 计算量。我们选择在多个 GPU 之间复制计算，而不是让一个 GPU 进行一部分计算然后广播结果。具体来说，我们在每个 GPU 上维护 LayerNorm 的参数，并在把参数输出到下一部分之前，在这些 Tensor 上进行 Dropout 和残差连接。为了优化模型，我们允许每个 Worker 优化自己的参数集合。由于所有的参数要么是 GPU 局部的，要么被拷贝过，因此不需要额外的通信去更新参数值。</p>
<p>简而言之，我们的方法实现简单，只需要在 Forward 和 Backward 的过程中增加一些额外的 All-Reduce 操作。不需要编辑器，而且与流水线模型并行方案正交。</p>
<h2 id="4-设定"><a class="header-anchor-1" href="#4-设定">#</a>4. 设定</h2>
<p>预训练语言理解模型是 NLP 和语言理解的核心任务。语言模型有几种方法。在本文中，我们关注 GPT-2，一种基于 Transformer 的自左向右的生成式语言模型，以及 BERT，一种基于语言模型掩码的双向 Transformer 模型。我们在下一部分解释这些模型的配置。</p>
<h3 id="4-1-训练数据集"><a class="header-anchor-1" href="#4-1-训练数据集">#</a>4.1 训练数据集</h3>
<p>包含 Wikipedia + CC-Stories + RealNews + OpenWebtext - WikiText103。
BERT 数据集额外包括 BookCorpus。过滤掉长度小于 128 个 token 的文档，使用 LSH 消除相似度大于 0.7 的重复内容。最终得到 174GB 的去重文本。</p>
<h3 id="4-2-训练优化，超参数"><a class="header-anchor-1" href="#4-2-训练优化，超参数">#</a>4.2 训练优化，超参数</h3>
<p>采用了带 Dynamic Loss Scaling 的 Mixed Precision 训练，以更好地利用 V100 的张量核心。权重初始化 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mtext> </mtext><mi>N</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>0.02</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">W~N(0, 0.02)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0.02</span><span class="mclose">)</span></span></span></span>。在残差连接之前将权重乘以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><msqrt><mrow><mn>2</mn><mi>N</mi></mrow></msqrt></mrow><annotation encoding="application/x-tex">1/\sqrt{2N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1767em;vertical-align:-0.25em;"></span><span class="mord">1/</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9267em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-2.8867em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1133em;"><span></span></span></span></span></span></span></span></span>，其中 N 是 Transformer 层的数量。对于优化器，使用带 Weight Decay（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi><mo>=</mo><mn>0.01</mn></mrow><annotation encoding="application/x-tex">\lambda=0.01</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.01</span></span></span></span>） 的 Adam 优化器。使用了 1.0 的全局 Gradient Norm Clipping 来提升训练稳定性。
Dropout 使用 0.1。在每个 Transformer 之后使用 Activation Checkpointing。</p>
<p>对于 GPT-2 模型，Batch size 设定为 512，输入序列长度是 1024 个 subword，迭代 300k 次。学习率在前 3k 次迭代是 1.5e-4，后续采用单周期余弦衰减，在达到 1e-5 之后停止衰减。</p>
<p>对于 BERT 模型，使用了大小为 30522 的原始词典。使用 Sentence Order Prediction 替换了 Next Sentence Prediction 任务。使用 整词 n-gram 掩码。
Batch size 设定为 1024，学习率为 1.0e-4，Warmup 10k 次，然后在剩下来的 2m 次迭代中线性衰减。</p>
<h2 id="5-实验"><a class="header-anchor-1" href="#5-实验">#</a>5. 实验</h2>
<p>TODO</p>
]]></content>
      <categories>
        <category>mlsys</category>
      </categories>
      <tags>
        <tag>MLSys</tag>
        <tag>Megatron-LM</tag>
        <tag>Model Parallelism</tag>
        <tag>Distributed Training</tag>
      </tags>
  </entry>
  <entry>
    <title>Scaling Distributed Machine Learning with the Parameter Server 阅读笔记</title>
    <url>/2025/03/13/scaling-distributed-machine-learning/</url>
    <content><![CDATA[<p>沐神投稿在 OSDI '14 的论文，提出了第三代 Parameter Server 框架。</p>
<p>沐神在 B 站有亲自讲解这篇论文的视频，可以参考: <span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVlBNHkxOTdHOA==">参数服务器（Parameter Server）逐段精读【论文精读】<i class="fa fa-external-link-alt"></i></span>。</p>
<h2 id="0-摘要"><a class="header-anchor-1" href="#0-摘要">#</a>0. 摘要</h2>
<p>本文提出了一个 Parameter Server 框架，用于解决分布式机器学习的问题。数据和负载分布在多个计算节点 (Worker Node) 上，服务节点 (Server Node) 维护全局共享的参数，参数表示成稠密或稀疏的向量和矩阵。框架管理节点之间的异步数据通信，支持灵活的一致性模型，弹性的可扩展性和持续的容灾。</p>
<p>为了展示该框架的可扩展性，文中使用了从稀疏 LR 到 LDA 和 Distributed Sketching 等的任务，PB 级别的真实数据、十亿级别的数据样本和参数的规模上的实验结果。</p>
<h2 id="1-介绍"><a class="header-anchor-1" href="#1-介绍">#</a>1. 介绍</h2>
<p>分布式优化和推理正在成为解决大规模机器学习问题的先决条件。真实世界的训练数据量可以达到 1TB 到 1PB。这使得我们创建一个具有 10^9 到 10^12 参数量的强大复杂模型。通常这些模型被所有的计算节点共享，计算节点还需要经常访问共享参数并进行更新。共享带来三个挑战:</p>
<ul>
<li>通信: 所有的计算节点都需要频繁地访问参数，会导致大量的通信。</li>
<li>性能: 很多机器学习算法是顺序的模型（算完一个 batch 再继续算下一个），会引入大量同步机制，损伤性能。</li>
<li>容灾: 训练任务应该在机器故障、软件错误或者由于人为原因被占用的情况下，不会停止。</li>
</ul>
<p>为了更好地说明第三点，文章收集了一家互联网公司数据中心最近三个月的训练作业日志。统计结果显示，规模越大的任务的失败率越高。和实验室环境相比，工业界环境有资源竞争，因此必须要考虑容灾问题。</p>
<h3 id="1-1-贡献"><a class="header-anchor-1" href="#1-1-贡献">#</a>1.1 贡献</h3>
<p>自 2010 年提出以来，PS 框架（第一代 YahooLDA 是 Alexander Smola 提出，主要用于 LDA；第二代 Distbelief 是 Jeff Dean 提出，是 TF 的前身）已经在学界和工业界广泛使用。本文描述了第三代 PS 框架的开源实现，重点关注分布式接口。对开发者来说，第三代框架有两个好处:</p>
<ol>
<li>把通用的框架代码和特定任务相关代码分离，保证任务相关代码的简洁性: 例如，第三代 PS 可以同时支持稀疏 LR、LDA 和 Distributed Sketching 的一系列算法。</li>
<li>提供了鲁棒、多样化且高性能的实现，处理各种各样的算法。</li>
</ol>
<p>服务节点的管理包括节点的添加和删除。</p>
<p>第三代 PS 框架的设计决策基于<strong>真实工业界</strong>系统计算负载。作者总结了五个关键特征:</p>
<ul>
<li>高效通信: 采用了异步的通信模型，不会阻塞计算，对通信数据进行压缩；</li>
<li>灵活一致性模型: 核心思想是 trade-off: 舍弃掉机器学习算法部分的一些指标（收敛速度，精度等），换取系统部分更好的性能；</li>
<li>弹性的可扩展性: 在训练时可以动态增加和减少机器；</li>
<li>容灾和持久性: 少量机器挂掉可以在 1s 内恢复，使用向量时钟确保灾难情况下的行为；</li>
<li>易用: 当时的主流语言是 C++，主流库是 Eigen 等，PS 框架把全局参数抽象成向量和矩阵，支持已有的库；</li>
</ul>
<p>创新性: 巧妙地调整系统领域和机器学习领域的技术，使之合理地结合在一起，得到第一个通用的、能够扩容到企业规模的 ML 系统。</p>
<h3 id="1-2-工程挑战"><a class="header-anchor-1" href="#1-2-工程挑战">#</a>1.2 工程挑战</h3>
<p>解决分布式数据分析问题时，多个计算节点需要不断地读和写全局参数。PS 框架提供了一个高效的机制来在多个计算节点间汇聚和同步这些参数和一些统计信息。由于模型的总体参数量很大，每个服务节点(Server Node)都只负责其中的一部分。计算节点通常会先朝服务节点索要一部分参数，进行计算，然后再把计算结果发回服务节点。构建高性能的 PS 系统的关键挑战在于:</p>
<ol>
<li>通信: 传统的 datastore 采用 key-value 模型，但是这种抽象往往不适用于机器学习场景: 机器学习场景的 value 通常是很小的 floats 或者 integers，而每个更新都进行一次数据通信的开销很大。</li>
</ol>
<p>PS 框架的设计是，计算节点每次只发送向量或者矩阵的一部分（vector 的 segment，或者 matrix 的 row）。这样就可以批量地更新参数，并允许高效地实现一致性跟踪。</p>
<ol start="2">
<li>容灾: PS 框架采用 live replication 的方式，将参数实时复制到多台机器上，并且支持 hot failover。</li>
</ol>
<p>机器的加入和离开会被视为维修和故障。</p>
<p>服务节点的管理包括节点的添加和删除。</p>
<h3 id="1-3-相关工作"><a class="header-anchor-1" href="#1-3-相关工作">#</a>1.3 相关工作</h3>
<p>第一代 PS 是 YahooLDA，利用 memcached 作为同步机制，缺乏弹性和性能；</p>
<p>第二代 PS 包括 Distbelief、作者的前一篇NIPS Workshop 和 Petuum，引入了 Bounded delay model。</p>
<p>对比通用分布式系统，Mahout（基于 Hadoop）和 MLI（基于 Spark）采用迭代式的 MapReduce 框架，要求同步和迭代式的通信，不适用于大规模的机器学习任务。</p>
<p>GraphLab 使用图模型，可扩展性差。</p>
<p>Piccolo 缺乏消息压缩、复制和灵活一致性模型。</p>
<h2 id="2-机器学习背景知识"><a class="header-anchor-1" href="#2-机器学习背景知识">#</a>2. 机器学习背景知识</h2>
<p>相关概念介绍: 特征提取，目标函数，学习过程，损失最小化，学习率，特征向量，生成模型，主题建模，LDA，</p>
<p>以分布式梯度下降任务为例: 包括任务调度器，计算节点，服务节点三个部分。</p>
<ul>
<li>计算节点: LoadData()，WorkerIterate()</li>
<li>服务节点: ServerIterate()</li>
</ul>
<p><img src="algo-1.png" alt="algo-1" /></p>
<h2 id="3-ps-架构"><a class="header-anchor-1" href="#3-ps-架构">#</a>3. PS 架构</h2>
<p>一个 PS 示例包含四大元素: 一个 Server Group，若干个 Worker Group，一个 Resource Manager 以及 Training Data。</p>
<p>Worker Group 负责运行一个任务，包含一个 Task Scheduler 和若干个 Worker Node。</p>
<p>Server Group 负责存储参数，包含一个 Server Manager 和若干个 Server Node。</p>
<p>分多个组的目的是让系统可以同时执行多个任务，例如同时训练多个模型或者同时训练和推理（一个组用于在线服务，另一个组周期性地更新模型）。多个任务通过命名空间隔离。</p>
<h3 id="3-1-key-value-向量"><a class="header-anchor-1" href="#3-1-key-value-向量">#</a>3.1 (Key, Value) 向量</h3>
<p>PS 框架中的参数可以表示成一个 (Key, Value) 向量，其中 Key 是一个整数，Value 是整数、浮点数或向量。</p>
<p>这种表示法使得用户可以使用现有的线性代数库（例如 BLAS、LAPACK 和 ATLAS）来提高编程效率。</p>
<h3 id="3-2-区间-push-和-pull"><a class="header-anchor-1" href="#3-2-区间-push-和-pull">#</a>3.2 区间 Push 和 Pull</h3>
<p>PS 框架允许在 Push 和 Pull 时指定一个参数的区间，只会传输区间内的参数，这样可以减少通信开销。</p>
<h3 id="3-3-用户自定义函数-udf"><a class="header-anchor-1" href="#3-3-用户自定义函数-udf">#</a>3.3 用户自定义函数 (UDF)</h3>
<p>PS 框架允许用户在服务节点上执行用户定义的函数，例如更新参数的函数，这样更加灵活。</p>
<h3 id="3-4-异步任务和依赖关系"><a class="header-anchor-1" href="#3-4-异步任务和依赖关系">#</a>3.4 异步任务和依赖关系</h3>
<p>任务通过 RPC 调用来实现。</p>
<p>任务是异步执行的，发送 RPC 出去后，发送方不会等待接收方的回复，而是继续执行下一个运算。任务的回复可能是 UDF 的返回值，或者是被请求的 (Key, Value) 对，或者是一个空的 ACK。</p>
<p>任务之间可以有依赖关系，例如调用方可以指定一个 <em>execute-after-finished</em> 依赖在任务 A 和任务 B 之间，表示任务 A 在任务 B 完成后才能执行。默认情况下，任务之间是完全并行的。</p>
<p>例如多次 Iteration 可以流水线式的执行，提高效率。</p>
<h3 id="3-5-灵活一致性模型"><a class="header-anchor-1" href="#3-5-灵活一致性模型">#</a>3.5 灵活一致性模型</h3>
<p>通过依赖关系的不同组合方式可以实现各种不同程度的一致性模型</p>
<ul>
<li>顺序一致性: 所有任务都有依赖</li>
<li>最终一致性: 完全没有依赖</li>
<li>有界延迟: 第 n 个任务依赖 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mi>τ</mi></mrow><annotation encoding="application/x-tex">n-\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span></span></span></span> 之前的所有任务</li>
</ul>
<p>所有依赖关系会形成一个有向无环图(DAG)。依赖关系可以是动态的。</p>
<h3 id="3-6-用户自定义过滤器"><a class="header-anchor-1" href="#3-6-用户自定义过滤器">#</a>3.6 用户自定义过滤器</h3>
<p>用户可以定义过滤器，来选择性地同步部分参数数据，达到节省通信的目的。</p>
<p>例如显著修改过滤器，只推送修改超过阈值的条目。</p>
<h2 id="4-实现"><a class="header-anchor-1" href="#4-实现">#</a>4. 实现</h2>
<p>本章讲解了 PS 框架的具体实现细节。服务节点使用一致性哈希来存储参数。使用链式复制进行多副本。在数据和向量时钟上进行了压缩。</p>
<h3 id="4-1-向量时钟-4-2-通信消息"><a class="header-anchor-1" href="#4-1-向量时钟-4-2-通信消息">#</a>4.1 向量时钟 &amp; 4.2 通信消息</h3>
<p>消息的格式是一个向量时钟和若干个 (Key, Value) 对。</p>
<p>Server 端会缓存区间的哈希，当发送相同区间的时候，可以只发送 Value 部分，节约通信开销。</p>
<p>由于机器学习场景会有很多零值，PS 框架使用可以删除零值的 Snappy 库来压缩消息。</p>
<h3 id="4-3-一致性哈希"><a class="header-anchor-1" href="#4-3-一致性哈希">#</a>4.3 一致性哈希</h3>
<p>利用经典的 DHT 技术实现动态地增加和减少服务节点，Key 和节点 ID 都被插入到哈希环中。为了平衡节点间的负载，每个服务节点会创建多个虚拟节点。</p>
<h3 id="4-4-复制和一致性"><a class="header-anchor-1" href="#4-4-复制和一致性">#</a>4.4 复制和一致性</h3>
<p>除了负责自己的参数以外，每个服务节点额外为哈希环上 k 个逆时针邻居的参数做副本。该节点称为相应这些键的从节点。</p>
<p>计算节点只会和主节点通信，对主节点的更新会被同步地复制到从节点（即<em>全同步复制</em>）。</p>
<p>直接复制需要 k 倍的通信放大，PS 框架允许通过对多个更新先进行一次聚合，然后再进行复制来减少通信开销。</p>
<h3 id="4-5-服务节点管理"><a class="header-anchor-1" href="#4-5-服务节点管理">#</a>4.5 服务节点管理</h3>
<p>服务节点的管理包括节点的添加和删除。</p>
<p>当一个新节点加入时，会进行一个重分配过程:</p>
<ol>
<li>Server Manager 分配给新节点一段 Key Range。这可能会导致另一个服务范围从终止的节点中分裂或被删除。</li>
<li>新节点获取这段 Key Range 的数据，还有接下来 k 个逆时针邻居的数据。</li>
<li>Server Manager 广播节点更改消息。消息的接收者可能会缩小自己的数据，和将未完成的任务重新提交给新节点。</li>
</ol>
<p>步骤 2，从源节点 S 获取范围 R 中的数据，使用了一个两阶段协议。首先，S 预复制范围 R 内的所有 (key, value) 对及其关联的向量时钟。这可能会导致向量时钟分裂。如果新节点在这一阶段失败，则 S 保持不变。在第二阶段，S 不再接受影响键范围 R 的消息，并丢弃未执行和回复的消息（<em>开启禁写</em>）。同时，S 向新节点发送预复制阶段期间发生在范围 R 的所有更改。</p>
<p>步骤 3，在收到节点更改消息后，一个节点 N 首先检查它是否维护着键范围 R。如果为真，并且后面不再需要由 N 维护，则删除 R 中的所有数据和向量时钟。接下来，N 扫描所有未收到回复的传出消息。如果一个键范围与 R 相交，则该消息将被拆分并重新发送。</p>
<p>由于网络延迟、失败和丢失的确认，N 可能会发送两次消息。由于使用了向量时钟，原始接收者和新节点都可以拒绝此消息，并且不会影响正确性。</p>
<p>服务节点的删除（自愿或由于失败）和加入过程类似。Server Manager 将新节点分配给离开节点的 Key Range。</p>
<p>Server Manager 通过心跳信号检测节点故障。</p>
<p>与现有集群资源管理器，例如 Yarn 或 Mesos 的集成将留给未来的工作。</p>
<h3 id="4-6-计算节点管理"><a class="header-anchor-1" href="#4-6-计算节点管理">#</a>4.6 计算节点管理</h3>
<p>节点 W 加入的过程:</p>
<ol>
<li>Task Scheduler 给 W 分配一部分训练数据；</li>
<li>W 从 NFS 或者其他计算节点加载这些数据。训练数据通常是只读的，所以可以被多个计算节点共享。然后 W 在从服务节点获取参数；</li>
<li>Task Scheduler 广播这个消息，其他节点可能会释放一些训练数据。</li>
</ol>
<p>当删除一个计算节点时，任务调度程序可以开始替换。我们给算法设计师提供控制恢复的可选项是出于两个原因:</p>
<ul>
<li>如果训练数据量很大，则恢复一个计算节点可能比恢复服务节点更昂贵。</li>
<li>在优化过程中丢失少量训练数据通常只会影响模型很小一部分。因此，算法设计师可能宁愿不更换失败的计算节点继续下去。甚至终止最慢的计算节点也是可以的。</li>
</ul>
<h2 id="5-评估"><a class="header-anchor-1" href="#5-评估">#</a>5. 评估</h2>
<h3 id="5-1-稀疏-lr-1k-台机器"><a class="header-anchor-1" href="#5-1-稀疏-lr-1k-台机器">#</a>5.1 稀疏 LR (1k 台机器)</h3>
<p>636 TB 的广告点击预测数据集，现在看来也非常大了。</p>
<h3 id="5-2-lda-google，6k-台机器"><a class="header-anchor-1" href="#5-2-lda-google，6k-台机器">#</a>5.2 LDA (Google，6k 台机器)</h3>
<h3 id="5-3-sketches-15-台机器"><a class="header-anchor-1" href="#5-3-sketches-15-台机器">#</a>5.3 Sketches (15 台机器)</h3>
<p>计算 CountMin Sketches</p>
<h2 id="faq"><a class="header-anchor-1" href="#faq">#</a>FAQ</h2>
<h3 id="1-深度学习时代有什么变化？"><a class="header-anchor-1" href="#1-深度学习时代有什么变化？">#</a>1. 深度学习时代有什么变化？</h3>
<p>深度学习的模型通常是稠密的，参数量小，计算量大。因此瓶颈往往在计算上，而不是通信上。本文的 PS 框架主要是针对稀疏模型的。</p>
<h3 id="2-ps-框架的缺点"><a class="header-anchor-1" href="#2-ps-框架的缺点">#</a>2. PS 框架的缺点</h3>
<p>标准分布式 TensorFlow 框架使用 Parameter Server 方法来平均梯度。来自 <a href="/2025/04/04/horovod-fast-and-easy-distributed/" title="Horovod: fast and easy distributed deep learning in TensorFlow 论文阅读">Horovod</a> 的评论:</p>
<ol>
<li><strong>难以确定计算节点和计算节点的正确比例</strong>: 如果只有一个计算节点，它可能会成为通信或者计算的瓶颈。如果使用多个计算节点，就变成了 All-to-all 通信，可能会导致网络饱和，</li>
<li><strong>应用程序复杂性</strong>: 每个应用程序都需要启动计算节点和服务节点，传递地址和端口号，等等复杂操作，占用了实际建模的时间。</li>
</ol>
]]></content>
      <categories>
        <category>mlsys</category>
      </categories>
      <tags>
        <tag>MLSys</tag>
        <tag>Parameter Server</tag>
        <tag>Distributed Machine Learning</tag>
        <tag>System</tag>
      </tags>
  </entry>
  <entry>
    <title>软考高级系统架构设计师笔记</title>
    <url>/2025/03/14/note/</url>
    <content><![CDATA[<h2 id="考试安排"><a class="header-anchor-1" href="#考试安排">#</a>考试安排</h2>
<p>一般是周末</p>
<p>上午 8:30-12:30 选择题 75 题 满分 75；</p>
<p>上午 8:30-12:30 案例分析(简答题) 5 题 第一题必做，后面 4 选 2 满分 75；</p>
<p>下午 14:30-16:30 论文题</p>
<p><img src="./image.png" alt="alt text" /></p>
<p>考试形式：机考，机器上有输入法。</p>
<p>有草稿纸，需要自带水笔。</p>
<h2 id="数据库"><a class="header-anchor-1" href="#数据库">#</a>数据库</h2>
<p>E-R 图集成冲突
:</p>
<ul>
<li>属性冲突: 包括属性域和属性取值的冲突。</li>
<li>命名冲突: 包括同名异义和异名同义。</li>
<li>结构冲突: 包括同一对象在不同应用中具有<strong>不同的抽象</strong>，以及同一实体在不同的局部 E-R 图中所包含的属性个数和属性排列次序不完全相同。</li>
</ul>
<p>关系数据库操作的对象和结果是<strong>集合</strong></p>
<p>三级模式</p>
<ul>
<li><strong>外模式</strong>: 视图级别，用户与数据库系统的接口，描述<strong>局部数据</strong>的逻辑结构和特征</li>
<li><strong>模式</strong>: 表级别，描述<strong>全部数据</strong>的<strong>逻辑结构</strong>和特征</li>
<li><strong>内模式</strong>: 文件级别，存储记录的<strong>类型</strong>、存储域的表示、存储记录的<strong>物理顺序</strong>，指引元、<strong>索引</strong>和存储路径等数据的存储组织</li>
<li><strong>概念模式</strong>: 全体数据的逻辑结构和特征的描述，</li>
</ul>
<p>完整性约束</p>
<ul>
<li><strong>实体完整性</strong>: 确保每个关系的<strong>主键</strong>唯一且不能为空，保证表中每条记录的唯一性。</li>
<li><strong>参照完整性</strong>: <strong>外键</strong>必须指向另一个表中的主键或候选键</li>
<li><strong>用户定义完整性</strong>: 是指用户根据实际<strong>业务需求</strong>自定义的约束规则。</li>
</ul>
<p>范式:</p>
<ul>
<li>1NF: 没有重复的组+属性不可分: 只要是关系型数据库，就必须满足第一范式</li>
<li>2NF: 非主属性<strong>完全</strong>依赖于码 / <strong>没有部分</strong>依赖例如 { A, B, C, A -&gt; C, B -&gt; C }, 则不属于 2NF
拆分成 { A, C, A -&gt; C } 和 { B, C, B -&gt; C } 即可</li>
<li>3NF: 非主属性对码没有<strong>传递</strong>依赖。例如 { A, B, C, A -&gt; B, B -&gt; C }, 则不属于 3NF</li>
<li>BCNF(Boyce-Codd Normal Form)是对第三范式的进一步强化。</li>
<li>4NF: 关系模式中不存在<strong>多值</strong>依赖</li>
</ul>
<p>Armstrong 公理</p>
<ul>
<li>自反律: 若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>⊆</mo><mi>X</mi></mrow><annotation encoding="application/x-tex">Y \subseteq X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X \to Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>。</li>
<li>传递律: 若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X \to Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">Y \to Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">X \to Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span>。</li>
<li>增广律: 若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X \to Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mi>Z</mi><mo>→</mo><mi>Y</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">XZ \to YZ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">XZ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span>。</li>
<li>分解规则: 若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">X \to YZ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X \to Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">X \to Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span>。</li>
<li>合成规则: 若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X \to Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A \to B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mi>A</mi><mo>→</mo><mi>Y</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">XA \to YB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>。</li>
<li>合并规则: 若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X \to Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">X \to Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">X \to YZ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span>。</li>
<li>伪传递规则: 若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X \to Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mi>Y</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">WY \to Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">WY</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mi>X</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">WX \to Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span>。</li>
<li>拓展规则: 若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X \to Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>X</mi><mi>Y</mi></mrow><annotation encoding="application/x-tex">X \to XY</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>。</li>
</ul>
<dl>
<dt>无损分解</dt>
<dd>分解不会拆散函数依赖关系。判断方法: 如果 R1 R2 交集是 R1 或者 R2 的超码，则是无损分解。</dd>
</dl>
<p>数据库设计:</p>
<ul>
<li>用户<strong>需求</strong>分析:</li>
<li><strong>概念</strong>设计:</li>
<li><strong>逻辑</strong>设计: 用某个具体的 DBMS 实现用户需要，将概念结构转换相应的数据模型，并根据用户处理要求、安全性考虑，在基本表的基础上建立必要的<strong>视图</strong>，并对数据模型进行优化。数据模型设计、E-R 图转换为关系模式、关系模式规范化、确定完整性约束、确定用户视图、<strong>反规范化</strong>设计</li>
<li><strong>物理</strong>设计:</li>
</ul>
<p>分布式数据库</p>
<ul>
<li>全局概念模式: 描述了全部数据的特性和逻辑结构，是全局数据的逻辑视图</li>
</ul>
<h2 id="嵌入式系统"><a class="header-anchor-1" href="#嵌入式系统">#</a>嵌入式系统</h2>
<dl>
<dt>SoC</dt>
<dd>System on Chip，即片上系统，是将整个计算机系统集成到一个芯片上，包括处理器、存储器、输入输出接口、控制器等。</dd>
<dt>NDB</dt>
<dd>基于网络的数据库(Netware Database，NDB)系统是基于手机 4G/5SG 的移动通信基础之上的数据库系统，在逻辑上可以把嵌入式设备看作远程服务器的一个客户端。实际上，嵌入式网络数据库是把功能强大的远程数据库映射到本地数据库，使嵌入式设备访问远程数据库就像访问本地数据库一样方便。</dd>
<dt>AI 芯片的关键特点</dt>
<dd>新型计算范式、训练和推断、大数据处理能力、数据精度、可重构能力、软件工具。</dd>
</dl>
<h2 id="计算机体系结构"><a class="header-anchor-1" href="#计算机体系结构">#</a>计算机体系结构</h2>
<p>中断分类</p>
<ul>
<li><strong>访管中断</strong>: <strong>系统调用</strong></li>
<li><strong>信号中断</strong>通常是由<strong>外部设备或定时器</strong>发出的，与用户程序主动发起的系统调用无关。</li>
<li><strong>外部中断</strong>由<strong>硬件设备</strong>(如键盘、鼠标、定时器等)触发，不涉及用户程序的特权指令。</li>
</ul>
<h2 id="操作系统"><a class="header-anchor-1" href="#操作系统">#</a>操作系统</h2>
<p>死锁:</p>
<ol>
<li>互斥条件</li>
<li>请求和保持条件</li>
<li>不可抢占条件</li>
<li>循环等待条件</li>
</ol>
<p>预防死锁的方法:</p>
<ul>
<li>破坏请求和保持条件</li>
<li>破坏不可抢占条件</li>
<li>破坏循环等待条件</li>
</ul>
<dl>
<dt>最短移臂调度算法</dt>
<dd>移臂就是找柱面(柱面一样找扇区)，旋转则找扇区，它们均按找最近原则调度。</dd>
</dl>
<h2 id="计算机网络"><a class="header-anchor-1" href="#计算机网络">#</a>计算机网络</h2>
<p>OSI 七层模型</p>
<ul>
<li>会话层没有安全服务</li>
</ul>
<p>以太网交换机</p>
<ul>
<li>初始 MAC 地址表为空</li>
<li>如果没有相应的表项，采用 ARP 洪泛操作，即广播方式进行转发</li>
<li>通过读取输入帧中的源地址添加相应的 MAC 地址表项</li>
<li>MAC 地址表项是动态增长的</li>
</ul>
<p>以太网传输使用<strong>曼彻斯特编码</strong>，没有差分信号</p>
<p>路由器工作在<strong>网络层</strong>，交换机工作在<strong>数据链路层</strong>。</p>
<p>Internet 采用<strong>分组交换</strong>方式</p>
<p>SDN 软件定义网络:</p>
<ul>
<li><strong>应用层</strong>。对应用户不同的业务和应用。</li>
<li><strong>控制层</strong>。主要负责处理数据平面资源的编排，维护网络拓扑、状态信息等。</li>
<li><strong>转发层</strong>。负责用户数据的转发。</li>
</ul>
<p>应用层协议</p>
<ul>
<li>SMTP，邮件发送协议，缺省端口 25</li>
<li>POP3，邮件接收协议，缺省端口 110</li>
<li>IMAP，交互式邮件存取协议，缺省端口 143</li>
</ul>
<h2 id="软件工程"><a class="header-anchor-1" href="#软件工程">#</a>软件工程</h2>
<dl>
<dt>ISO9000</dt>
<dd>质量管理体系</dd>
<dt>PMBOK</dt>
<dd>项目管理知识体系</dd>
</dl>
<p>CMMI 软件能力成熟度模型集成</p>
<ul>
<li>五个级别: 初始级，可管理级，已定义级，稳定级，持续优化级</li>
<li>四个层次: 顶层方针、过程文件、规程文件、模板文件(Word/Excel 模版)。</li>
</ul>
<p>软件开发模型</p>
<ul>
<li>瀑布模型: 沟通/策划/建模/构建/部署</li>
<li>增量模型: 降低了实现需求变更的成本，更容易反馈，更早使用</li>
<li>原型模型</li>
<li>螺旋模型: 目标设定/风险分析/开发和有效性验证/评审
<ul>
<li>基于<strong>快速(原型)模型</strong>: 不能更早使用</li>
</ul>
</li>
<li>敏捷模型
<ul>
<li>以<strong>快速(原型)模型</strong>为基础</li>
</ul>
</li>
<li>构件模型</li>
<li>喷泉模型: 适合<strong>面向对象</strong></li>
<li>V 模型: 需求分析\概要设计\详细设计\编码/单元测试/集成测试/系统测试/验收测试</li>
<li>W 模型: 测试与开发是同步进行的</li>
</ul>
<p>软件生命周期模型</p>
<ul>
<li>需求分析: 确定可靠性目标、分析影响因素、制定验收标准、管理框架、文档规范、初步计划和数据收集规范
<ul>
<li>工具: 基于<strong>自然语言或图形描述</strong>的工具和基于<strong>形式化需求定义语言</strong>的工具。</li>
</ul>
</li>
<li>概要设计: 确定度量、详细验收方案、设计、计划调整、数据收集、后续阶段计划和文档编制</li>
<li>详细设计: 设计、预测、计划调整、数据收集、后续阶段计划和文档编制</li>
<li>编码阶段: 测试、排错、计划调整、数据收集、后续阶段计划和文档编制</li>
<li>测试阶段: 测试、排错、建模、评价、计划调整、数据收集、后续阶段计划和文档编制</li>
<li>实施阶段: 包括测试、排错、数据收集、模型调整、评价和文档编制</li>
</ul>
<p>构件</p>
<ul>
<li>不可再分的软件单元 / 部署、版本控制和替换的基本单位 / 一组通常需要同时部署的原子构件</li>
<li>具有唯一的标志 / 没有(外部的)可见状态，但可以利用<strong>容器</strong>管理自身对外的可见状态</li>
<li>独立而成熟的构件: 数据库管理系统和操作系统</li>
<li>有限制的构件: 基础类库</li>
<li>适应性构件: ActiveX</li>
<li>装配的构件: 软件商提供的大多数软件产品</li>
<li>可修改的构件</li>
<li>构件组装: 定制、集成和扩展</li>
</ul>
<p>COP 面向构件的编程</p>
<ul>
<li>多态性、模块封装性、后期的绑定和装载、安全性</li>
</ul>
<p>CORBA 构件模型</p>
<ul>
<li>伺服对象 Servant</li>
<li>对象适配器 POA</li>
<li>对象请求代理</li>
</ul>
<p>中间件</p>
<ul>
<li>操作系统之上，管理计算资源和网络通信，实现应用之间的<strong>互操作</strong></li>
<li><strong>连接和通信</strong>，屏蔽硬件、操作系统、网络和数据库的差异。</li>
<li><strong>负载均衡和高可用性</strong>、安全机制与管理功能，以及<strong>交易管理机制</strong>，保证交易的一致性。</li>
<li>一组通用的服务去执行不同的功能，避免重复的工作和使应用之间可以协作。</li>
</ul>
<dl>
<dt>产品配置</dt>
<dd>指一个产品在其生命周期各个阶段所产生的各种形式(机器可读或人工可读)和各种版本的<strong>文档</strong>、<strong>计算机程序</strong>、<strong>部件</strong>及<strong>数据</strong>的集合。</dd>
</dl>
<p>软件过程/软件活动</p>
<ul>
<li>制作软件产品的一组活动以及结果</li>
<li>活动包括: 软件描述、软件开发、软件有效性验证、软件进/演化 (没有分析、没有测试)</li>
</ul>
<p>软件工具</p>
<ul>
<li>软件<strong>开发</strong>工具: 需求分析工具、设计工具、编码与排错工具</li>
<li>软件<strong>维护</strong>工具: <strong>版本控制工具</strong>、文档分析工具、开发信息库工具、逆向工程工具、再工程工具</li>
<li>软件<strong>管理和支持</strong>工具: 项目管理工具、配置管理工具、软件评价工具</li>
</ul>
<p>逆向工程: 重构, 设计恢复, 再工程</p>
<p>逆向工程 4 个抽象层次: 实现级、结构级(相互依赖关系)、功能级(功能及程序段之间关系)和领域级(程序分量与概念之间关系)</p>
<dl>
<dt>需求管理</dt>
<dd>包括<strong>变更控制</strong>、<strong>版本控制</strong>、<strong>需求跟踪</strong>。<em>不包括<strong>需求获取</strong>的部分</em></dd>
<dt>需求抽取</dt>
<dd><strong>迭代过程</strong> 1. 需求发现 2.需求分类和组织 3.需求优先级划分和协商 4. 需求规格说明</dd>
<dt>需求跟踪</dt>
<dd>编制每个需求与系统元素之间的<strong>联系文档</strong>，这些元素包括其它需求、体系结构、设计部件、源代码模块、测试、帮助文件和文档等。</dd>
<dt>需求变更</dt>
<dd>问题分析和<strong>变更描述</strong>、<strong>变更分析</strong>和成本计算、<strong>变更实现</strong></dd>
</dl>
<p>软件需求开发的最终文档经过评审批准后，则定义了开发工作的<strong>需求基线</strong>(baseline)。这个基线在客户和开发者之间构筑了计划产品功能需求和非功能需求的一个<strong>约定</strong>(agreement)。需求约定是需求开发和需求管理之间的桥梁。</p>
<p>结构化分析</p>
<ul>
<li>功能建模: DFD 数据流图
<ul>
<li>描述数据的<strong>流向</strong>和<strong>处理</strong></li>
</ul>
</li>
<li>行为建模: 状态转换图</li>
<li>数据建模: ER 图</li>
</ul>
<p>软件设计</p>
<ul>
<li><strong>数据</strong>设计: 改善程序结构和模块划分，降低过程复杂性</li>
<li><strong>结构</strong>设计: 主要部件之间的关系</li>
<li><strong>人机界面</strong>设计</li>
<li><strong>过程</strong>设计: 系统结构部件转换成软件的过程描述</li>
</ul>
<p>结构化设计</p>
<ul>
<li>四个任务: 体系结构设计、接口设计、数据设计和过程设计</li>
<li>结构化设计工具
<ul>
<li>需求分析: 数据流图</li>
<li>概要设计: 模块结构图、层次图和 HIPO 图，软件需求转化为<strong>数据结构和系统结构</strong></li>
<li>详细设计: 程序流程图、伪代码和盒图，细化得出软件的<strong>详细数据结构和算法</strong></li>
</ul>
</li>
</ul>
<p>敏捷开发</p>
<ul>
<li>以<strong>人</strong>为核心、迭代、循序渐进的开发方法。</li>
<li>主打<strong>适应型</strong>，而非可预测型</li>
<li>对比: 结构化开发方法是面向过程的。</li>
<li>以原型开发思想为基础</li>
</ul>
<p>用户界面不应该经常修改</p>
<p>RUP 统一软件开发过程</p>
<ul>
<li><strong>用例</strong>驱动、以<strong>体系结构</strong>为中心、迭代式开发</li>
<li>迭代式开发
<ul>
<li>初始阶段</li>
<li>细化阶段</li>
<li>构建阶段</li>
<li>交付阶段: 测试、发布</li>
</ul>
</li>
<li>9 个核心工作流: 业务建模、需求、分析与设计、实现、测试、部署、配置与变更管理、项目管理、环境 (软件开发时不考虑<strong>成本</strong>)</li>
<li>4+1 视图模型:
<ul>
<li>核心: 场景</li>
<li>逻辑/实现视图: 最终用户功能特性</li>
<li>进程/过程视图: 设计的并发和同步特证，集成人员</li>
<li>开发视图: 在开发环境中软件的静态组织结构，开发人员</li>
<li>物理视图: 系统工程师</li>
</ul>
</li>
</ul>
<p>UML 模型</p>
<ul>
<li>用例图、类图、时序/顺序图、部署图、组件图、构件图</li>
<li>对象图: 对象和关系</li>
<li>活动图: 控制流和数据流</li>
<li>状态图: 接口、类、协作行为</li>
</ul>
<dl>
<dt>SysML</dt>
<dd>多了一个需求图</dd>
<dt>耦合</dt>
<dd><strong>内容耦合</strong> &gt; … &gt; <strong>数据耦合</strong></dd>
<dt>内聚</dt>
<dd><strong>功能内聚</strong> &gt; …</dd>
</dl>
<p>用例图</p>
<ul>
<li>用例
<ul>
<li>扩展关系(Extend)</li>
<li>包含关系(Include): A 包含 B 行为</li>
<li>泛化关系(Generalization): 一般和特殊，“会员注册”和“电话注册”、“邮件注册”</li>
</ul>
</li>
<li>参与者
<ul>
<li>继承关系</li>
</ul>
</li>
</ul>
<p>软件复杂度</p>
<ul>
<li>代码行方法</li>
<li>Helstead 方法</li>
<li>McCabe 方法: 环形复杂度 = <strong>闭环个数 + 1</strong></li>
</ul>
<p>软件构件:</p>
<ol>
<li>独立部署单元，<strong>不可拆分</strong></li>
<li>作为第三方的组装单元</li>
<li>没有（外部的）可见状态，但可以利用容器管理自身对外的可见状态</li>
<li>构件可以在适当的环境中被复合使用，因此构件需要提供清楚的接口规范，可以与环境交互。</li>
<li><strong>在任何环境中，最多仅有特定构件的一份副本</strong>。</li>
<li><strong>可部署</strong>: 二进制形式，无需编译，可配置</li>
</ol>
<p>构件分类: 关键字分类法、刻面分类法和超文本组织方法</p>
<p>构件组装: 基于<strong>功能</strong>的、基于<strong>数据</strong>的和<strong>面向对象</strong>的</p>
<dl>
<dt>业务流分析</dt>
<dd>通过对系统进行长期监听，利用统计分析方法对诸如通信频度、通信的信息流向、通信总量的变化等参数进行研究，从而发现有价值的信息和规律。</dd>
</dl>
<p>ABSDM 基于架构的软件设计模型</p>
<ul>
<li>过程: 需求、设计、文档化、复审、实现、演化</li>
<li>由<strong>商业、质量和功能需求</strong>的组合驱动</li>
<li>采用<strong>视角</strong>与<strong>视图</strong>的概念描述软件架构</li>
<li><strong>自顶向下，递归细化</strong>: 自顶向下更快得到系统演示原型</li>
<li>直到能产生<strong>软件构件和类</strong></li>
<li>基础: 功能分解、选择架构风格、软件模版的使用</li>
<li>体系结构需求来自: 系统的质量目标、系统的商业目标，系统开发人员的商业目标</li>
<li>文档化: 从使用者角度，体系结构说明+质量说明书</li>
<li>架构演化 6 个步骤: 需求变化<strong>归类</strong>；制订体系结构演化<strong>计划</strong>；构件<strong>变动</strong>；<strong>更新</strong>构件的相互作用；构件<strong>组装</strong>与测试；技术<strong>评审</strong>；演化后的体系结构。</li>
</ul>
<p>体系结构视角 perspective</p>
<ul>
<li>静态视角: 判断质量特性</li>
<li>动态视角: 判断系统行为特性</li>
<li>逻辑视图: 设计元素的功能和概念接口</li>
<li>进程视图</li>
<li>实现视图</li>
<li>配置视图</li>
</ul>
<p>架构风格: 包含<strong>定义</strong>、<strong>词汇表</strong>和<strong>约束</strong></p>
<ul>
<li>软件系统的<strong>结构、行为和属性</strong>的高级抽象</li>
<li><strong>批处理</strong>架构: 强调<strong>顺序执行</strong></li>
<li><strong>管道-过滤器</strong>架构: 过滤器之间可以<strong>并行</strong>处理数据</li>
<li><strong>仓库</strong>架构: 中央数据结构 + 独立构件
<ul>
<li><strong>黑板</strong>架构: 一种利用模块化和<strong>分散式</strong>框架解决问题的方法，每个专家贡献一部分解决方案。属于<strong>数据</strong>共享型架构风格。</li>
</ul>
</li>
<li><strong>进程通信</strong>架构: 通过<strong>消息传递</strong>进行通信，具体的实现方式可以包括消息队列、管道、共享内存等。</li>
<li><strong>事件驱动/隐式调用</strong>架构: 系统的组件通过事件进行交互，独立性，非耦合性，例如推荐系统</li>
<li><strong>分层/层次型</strong>架构: 物联网，嵌入式；<strong>问题</strong>: 级联修改、<strong>性能</strong>、层层依赖</li>
<li><strong>递归</strong>架构: 嵌入式</li>
<li><strong>主程序/子过程</strong>架构</li>
<li><strong>面向对象</strong>架构</li>
<li><strong>虚拟机</strong>架构: 自定义流程
<ul>
<li><strong>基于规则</strong>的架构: 规则集、规则解释器、规则/数据选择器和工作内存</li>
<li><strong>解释器</strong>架构: 更加灵活</li>
</ul>
</li>
<li><strong>C2</strong>架构: 构件和连接件，底部连接到另一个的顶部</li>
</ul>
<p>DSSA 特定领域软件架构:</p>
<ul>
<li>四种角色: 领域专家、领域<strong>分析</strong>师、领域<strong>设计</strong>人员和领域<strong>实现</strong>人员</li>
<li>基本活动: 领域<strong>分析</strong>、领域<strong>设计</strong>和领域<strong>实现</strong>
<ul>
<li>分析阶段: 分析特定应用领域，获取<strong>领域模型</strong>，从而为后续的设计和实现提供基础</li>
<li>设计阶段: 获得<strong>DSSA 特定领域软件架构</strong></li>
<li>实现阶段: 开发和组织可重用信息，并对基础软件架构进行实现</li>
</ul>
</li>
<li>建立过程: 强调<strong>并发</strong>、<strong>递归</strong>和<strong>反复迭代</strong></li>
<li>定义领域特定元素阶段: 重点是确定领域的通用功能和特定需求，而不是直接定义用户需求</li>
<li>定义领域模型和体系结构阶段: 目标是抽象出领域内通用的模型和体系结构</li>
<li>领域开发环境(领域架构师)、领域特定应用开发环境(应用工程师)和应用执行环境(操作员)</li>
</ul>
<ol>
<li><strong>垂直域</strong>: 定义了一个特定的系统族，包含整个系统族内的多个系统，结果是在该领域中可作为系统的可行解决方案的一个通用软件体系结构。</li>
<li><strong>水平域</strong>: 定义了在多个系统和多个系统族中功能区城的共有部分。在子系统级上涵盖多个系统族的特定部分功能。</li>
</ol>
<p>ATAM 架构权衡分析方法</p>
<ul>
<li>过程: <strong>场景和需求收集</strong>、<strong>架构视图和场景实现</strong>、<strong>属性模型</strong>构造和分析、架构<strong>决策与折中</strong></li>
<li><strong>场景</strong>是从<strong>风险承担者</strong>的角度对与系统的交互的简短描述
<ul>
<li>头脑风暴的三种场景: 用例场景、增长场景、探索性场景</li>
</ul>
</li>
<li><strong>质量属性</strong>: 可用性、易用性、性能、可修改性、可测试性、安全性、可靠性、可维护性
<ul>
<li>刻画手段: 刺激源、<strong>刺激</strong>、<strong>环境</strong>、<strong>制品</strong>、<strong>响应</strong>、响应度量</li>
<li>一般采用<strong>刺激</strong>、<strong>环境</strong>和<strong>响应</strong>三方面来对场景进行描述</li>
</ul>
</li>
<li>开发之前先进行评价和折中</li>
<li>核心概念: 属性</li>
<li>关注点: 需求说明</li>
<li><strong>效用树</strong>: 树根 – 质量属性 – 属性分类 – 质量属性场景(叶子节点)</li>
<li><strong>敏感点</strong>: 一个或多个构件(和／或构件之间的关系)的特性</li>
<li><strong>权衡点</strong>: 影响多个质量属性的特性，是多个质量属性的敏感点</li>
<li>改变加密级别的设计决策属于<strong>权衡点</strong></li>
<li>风险点: 泛指可能引起风险的因素</li>
</ul>
<p>SAAM 基于场景的架构分析方法</p>
<ul>
<li>过程: <strong>场景开发</strong>、<strong>架构描述</strong>、<strong>单场景评估</strong>、<strong>场景交互评估</strong>和<strong>总体评估</strong>。</li>
<li>针对最终架构进行评估</li>
<li>主要输入: <strong>问题描述</strong>、<strong>需求声明</strong>和<strong>体系结构描述</strong></li>
</ul>
<p>SAEM 从外部和内部质量属性两个角度进行评估，创建了一个基础框架，用于规约建模、创建度量准则和评估质量属性。</p>
<p>SAABNet 贝叶斯信念网络</p>
<p>SACMM 软件架构修改度量方法</p>
<p>SASAM 软件架构静态分析方法</p>
<p>ALRRA 软件架构可靠性风险评估方法</p>
<p>AHP 层次分析法</p>
<p>ADL</p>
<p>软件维护</p>
<ul>
<li>排错性维护、适应性维护、**完善性维护(新功能)**和预防性维护</li>
</ul>
<p>N 版本设计</p>
<ul>
<li>相异成分规范评审</li>
<li>相异性确认</li>
<li>背对背测试</li>
</ul>
<p>软件重用</p>
<ul>
<li>需求分析<strong>文档</strong>、<strong>设计</strong>过程、设计文档、程序<strong>代码</strong>、<strong>测试</strong>用例和领域<strong>知识</strong>等</li>
<li>横向重用: 不同应用领域中的软件元素，例如数据结构、分类算法和人机界面等</li>
<li>纵向重用: 在相同或相似的应用领域中对特定功能或模块的重用</li>
<li>COM 对象重用: <strong>包含(Contain)<strong>和</strong>聚集(Cluster)</strong></li>
</ul>
<p>EJB、COM+ 较为适用于应用服务器。</p>
<p>WSDL</p>
<ul>
<li>服务做什么 What</li>
<li>如何使用/访问服务 How</li>
<li>服务位于何处 Where</li>
</ul>
<p>SOA 面向服务系统</p>
<ul>
<li>UDDI: Web 服务注册和查找的标准</li>
<li>WSDL: Web 服务描述语言</li>
<li>SOAP: 基于 XML, 信封和 XML 编码定义在相同命名空间</li>
<li>BPEL: Web 服务定义和执行业务流程的语言, 用来将分散的、功能单一的 Web 服务组织成一个复杂的有机应用。</li>
<li>服务注册表模式</li>
<li>企业服务总线 ESB 模式</li>
</ul>
<dl>
<dt>UDDI</dt>
<dd><strong>描述</strong>、<strong>发现</strong>和<strong>集成</strong>Web 服务</dd>
</dl>
<p>六种业务流程建模方法</p>
<ul>
<li>流程图、角色活动图和角色交互图、IDEF0 和 IDEF3、Petri-Net(从流程的角度出发)、UML 活动图和 BPMN</li>
</ul>
<dl>
<dt>软件工程过程</dt>
<dd>PDCA, 计划 执行 检查 处理</dd>
</dl>
<p>DO-178: 目标、过程、数据</p>
<p>专家系统的学习机制主要依赖其核心组成部分: <strong>知识库</strong>和<strong>推理机</strong>。</p>
<p>企业集成</p>
<ul>
<li>应用集成: 高层</li>
<li>服务集成: 中</li>
<li>会聚集成: 中层</li>
<li>数据集成: 底层</li>
</ul>
<p>软件复用</p>
<ul>
<li>主要阶段: 分析，<strong>构造/获取</strong>，<strong>管理</strong>，<strong>使用</strong></li>
<li><strong>机会</strong>复用: 开发过程中，只要发现有可复用的资产，就对其进行复用</li>
<li><strong>系统</strong>复用: 开发之前，就要进行规划，以决定哪些需要复用。</li>
</ul>
<p>构件组装的常见方式: 层次、叠加和顺序等</p>
<p>构件管理: 构件描述，构件分类，构件库组织，人员及权限管理，用户意见反馈等</p>
<p>操作不完备: 一个构件的提供接口是另一个构件请求接口的一个子集</p>
<p>面向对象设计</p>
<ul>
<li>实体类</li>
<li>控制类: 控制</li>
<li>边界类: 界面，接口，隔离</li>
<li>分析模型: 顶层架构图、用例与用例图、<strong>领域概念模型</strong></li>
<li>设计模型: 包图(描述架构)、交互图、类图、状态图、活动图</li>
</ul>
<p>面向对象设计原则</p>
<ul>
<li>单一职责原则、开放-封闭原则、李氏替换原则、依赖倒置原则、接口隔离原则和组合重用原则</li>
<li>李氏替换原则: 子类可以替换父类</li>
<li>依赖倒置原则: 细节依赖于抽象，抽象不依赖于细节</li>
</ul>
<p>面向对象设计模式</p>
<ul>
<li><strong>创建型</strong>: 单例模式、工厂方法模式、抽象工厂模式、建造者模式、原型模式
<ul>
<li>抽象工厂模式: 为创建<strong>一系列</strong>相关或相互依赖的对象提供了一个接口</li>
<li>建造者模式: 将一个复杂对象的构建与它的表示<strong>分离</strong>，使得同样的构建过程可以创建不同的表示</li>
<li>原型模式: <strong>不了解</strong>要创建对象的确切类以及如何创建等细节的情况下创建自定义对象</li>
</ul>
</li>
<li><strong>结构型</strong>: 适配器模式、桥接模式、组合模式、装饰模式、外观模式、享元模式、代理模式
<ul>
<li>桥接模式: 将抽象部分与它的实现部分分离，使它们可以<strong>独立</strong>地变化；画图软件: 图形=抽象部分，画图方法=实现部分</li>
<li>装饰模式: 比直接继承更加灵活</li>
</ul>
</li>
<li><strong>行为型</strong>: 责任链模式、命令模式、解释器模式、迭代器模式、中介者模式、备忘录模式、观察者模式、状态模式、策略模式、模板方法模式、访问者模式、备忘录模式(Memento)</li>
<li>另一种划分方法: 类设计模式 vs 对象设计模式</li>
</ul>
<dl>
<dt>DCMM 数据管理能力成熟度评估模型</dt>
<dd>数据战略、数据治理、数据架构、数据应用、数据安全、数据质量、数据标准和数据生存周期 (没有数据<strong>维护</strong>)</dd>
</dl>
<p>失配问题</p>
<ul>
<li>构件失配</li>
<li>连接子失配</li>
</ul>
<p>遗留系统的演化策略</p>
<ul>
<li>技术含量较高、业务价值较高 -&gt; 改造</li>
<li>技术含量较高、业务价值较低 -&gt; 集成，利于后续维护</li>
<li>技术含量较低、业务价值较高 -&gt; 继承，保留</li>
<li>技术含量较低、业务价值较低 -&gt; 淘汰</li>
</ul>
<p>信息隐蔽: 提高<strong>可修改性</strong>、<strong>可测试性</strong>和<strong>可移植性</strong></p>
<p>三层 C/S 架构</p>
<ul>
<li>表示层: GUI</li>
<li>功能层: 应用本体，业务逻辑
<ul>
<li>增加了一个<strong>应用服务器</strong></li>
</ul>
</li>
<li>数据层: 数据库管理系统</li>
</ul>
<p>MVC 模式</p>
<p>EAI 企业应用集成:</p>
<ul>
<li>服务层次低到高: <strong>通讯</strong>服务、<strong>信息</strong>传递与转化服务、<strong>应用</strong>连接服务和<strong>流程</strong>控制服务</li>
<li>原则: 应用程序独立性、面向商业流程、独立于技术和平台无关</li>
<li><strong>数据复制</strong>，<strong>基于接口的数据集成</strong>，<strong>数据联邦</strong></li>
</ul>
<h2 id="推荐系统"><a class="header-anchor-1" href="#推荐系统">#</a>推荐系统</h2>
<p>基于内容的推荐系统:</p>
<ul>
<li>能推荐新的或不流行的项目</li>
<li>能为具有特殊兴趣的用户进行推荐(个性化)</li>
<li>不需要其他用户的数据</li>
<li>无法解决冷启动问题</li>
</ul>
<p>协同过滤</p>
<ul>
<li>需要其他用户的数据</li>
</ul>
<h2 id="法律"><a class="header-anchor-1" href="#法律">#</a>法律</h2>
<dl>
<dt>信息化需求</dt>
<dd>包含三个层次，即战略需求、运作需求和技术需求。</dd>
</dl>
<ol>
<li>战略需求。组织信息化的目标是提升组织的竞争能力，为组织的可持续发展提供一个支持环境。</li>
<li>运作需求。组织信息化的运作需求是组织信息化需求非常重要且关键的一环，它包含三方面的内容: 一是实现信息化战略目标的需要；二是运作策略的需要，三是人才培养的需要。</li>
<li>技术需求。由于系统开发时间过长等问题在信息技术层面上对系统的完善、升级、集成和整合提出了需求。</li>
</ol>
<dl>
<dt>《软件产品管理办法》</dt>
<dd>任何单位和个人不得开发、生产、销售、进出口含有以下内容的软件产品:</dd>
</dl>
<ol>
<li>侵犯他人知识产权的；</li>
<li>含有计算机病毒的；</li>
<li>可能危害计算机系统安全的；</li>
<li>含有国家规定禁止传播的内容的；</li>
<li>不符合我国软件标准规范的。</li>
</ol>
<p>外观设计专利的相似外观设计不得超过 <strong>10</strong> 项。</p>
<p>著作权:</p>
<ul>
<li>一般作者: 具有永久署名、修改、保护完整 / 50 年内的发表、使用、报酬权利。</li>
<li>软件作者: 具有永久署名、修改 / 50 年内的发表、复制、发行…权利。</li>
<li>商标: 自注册过的, 10 年, 冲突: 1 先来后到 2 先使用 3 协商或抽签</li>
<li>发明专利: 20 年, 实施许可: 独占、排他实施、普通</li>
<li>实用新型专利: 10 年</li>
<li>艺术作品: 著作权属于作者, 所有权和展览权属于拥有者</li>
<li>软件著作权: 产生<strong>自软件开发完成之日</strong>起, 在公司完成属于公司, 开发软件所用的思想、处理过程、操作方法或者数学概念不受保护, 不知情情况下使用者不构成侵权, 提供者承担责任</li>
<li><strong>法律、法规</strong>等不适用于著作权法保护</li>
<li>改编、翻译、注释、整理已有作品而产生的作品，其著作权由<strong>改编、翻译、注释、整理人</strong>享有，但行使著作权时不得侵犯原作品的著作权。</li>
<li>受委托创作的作品，著作权的归属由委托人和受托人通过<strong>合同约定</strong>。合同未作明确约定或者没有订立合同的，著作权属于<strong>受托人</strong>(即实际开发的人)。</li>
</ul>
<p>职务发明创造: 离职后<strong>1 年内</strong>完成的，与其在原单位的工作或任务相关的发明创造。</p>
<p>作者的<strong>署名权、修改权、保护作品完整权</strong>的保护期不受限制</p>
<h2 id="信息安全"><a class="header-anchor-1" href="#信息安全">#</a>信息安全</h2>
<dl>
<dt>数字证书</dt>
<dd>用户登录过程中可通过验证<strong>CA 发出的签名</strong>确认该数字证书的有效性</dd>
<dt>安全审计四要素</dt>
<dd>控制目标、安全漏洞、控制措施和控制测试</dd>
</dl>
<p>数据分级分类</p>
<ul>
<li><strong>基础安全层</strong>: 数据分级分类、数据备份、数据加密等<strong>基本</strong>安全措施</li>
<li><strong>权限控制层</strong>: 负责数据的<strong>访问权限管理</strong></li>
<li><strong>战略安全层应用接口层</strong>: 高层安全策略或接口相关管理</li>
</ul>
<p>《计算机信息系统安全保护等级划分准则》:</p>
<ul>
<li>第 1 级: 用户自主保护级</li>
<li>第 2 级: 系统审计保护级</li>
<li>第 3 级: 安全标记保护级</li>
<li>第 4 级: 结构化保护级</li>
<li>第 5 级: 访问验证保护级</li>
</ul>
<p>TBAC 基于任务的访问控制</p>
<ul>
<li>组成要素包括工作流、授权结构体、受托人集和许可集</li>
</ul>
<p>数据资产的特性: 可控制，可量化，可变现，虚拟性、共享性、时效性、安全性、交换性和规模性</p>
<p>信息安全系统的措施: <strong>技术</strong>方面的安全措施、<strong>管理</strong>方面的安全措施、<strong>政策法律</strong>方面的安全措施</p>
<h2 id="项目管理"><a class="header-anchor-1" href="#项目管理">#</a>项目管理</h2>
<dl>
<dt>三点估算法</dt>
<dd>期望时间 = (最短时间 + 4 * 最可能时间 + 最长时间) / 6</dd>
</dl>
<p>盈亏平衡点</p>
<ul>
<li>可变成本: 需要换算成单位产品的成本</li>
<li>税率: 单位产品的税率</li>
</ul>
<h2 id="软件测试"><a class="header-anchor-1" href="#软件测试">#</a>软件测试</h2>
<p>静态测试: 通过对软件的需求规格说明书、设计说明书以及源程序做结构分析和流程图分析，从而找出错误。</p>
<p>灰盒测试: 除了重视输出相对于输入的正确性，也看重其内部的程序逻辑。</p>
<p>系统测试:</p>
<ul>
<li>依据<strong>需求</strong>规格说明书进行测试</li>
<li>为了发现<strong>需求</strong>分析环节的错误</li>
</ul>
<p>软件备份</p>
<ul>
<li>静态备份</li>
<li>动态备份</li>
</ul>
<p>可靠性: 是指产品在规定的条件下和规定的时间内完成规定功能的能力。</p>
<p>MTBF、MTTD、MTTR、MTBR</p>
<ul>
<li>MTBF(Mean Time Between Failures): 平均故障间隔时间，是系统在两个故障之间的平均正常运行时间。</li>
<li>MTTF(Mean Time To Failure): 平均故障时间，是系统正常运行到发生故障的平均时间。</li>
<li>MTTD(Mean Time To Detect): 平均故障检测时间，是检测到故障所需的平均时间。</li>
<li>MTTR(Mean Time To Repair): 平均修复时间，是修复故障所需的平均时间。</li>
<li>MTBR(Mean Time Between Repairs): 平均修复间隔时间，是修复后到再次发生故障的平均时间。</li>
</ul>
<p>脚本结构</p>
<ul>
<li><strong>线性脚本</strong>: 线性脚本是<strong>录制</strong>手工测试的测试用例时得到的脚本，这些脚本是未做修改的。</li>
<li><strong>结构化脚本</strong>: 结构化脚本具有各种<strong>逻辑结构</strong>，包括选择型结构、分支结构、循环迭代结构，而且具有函数调用功能。结构化脚本具有很好的可用性和灵活性，易于维护。</li>
<li><strong>共享脚本</strong>: 共享脚本是指一个脚本可以被多个测试用例使用，即脚本语言允许一个脚本调用另一个脚本。</li>
<li><strong>数据驱动脚本</strong>: 数据驱动脚本是指将测试输入存储在<strong>独立的数据文件</strong>中，而不是脚本中。这样，脚本可以针对不同的数据输入实现多个测试用例。</li>
<li><strong>关键字驱动脚本</strong>: 关键字驱动脚本是数据驱动脚本的逻辑扩展，它用测试文件描述测试用例，它说明测试用例做什么，而不是如何做。关键字驱动脚本允许使用描述性的方法，只需要提供测试用例的描述，即可生成测试用例。</li>
</ul>
<h2 id="案例分析"><a class="header-anchor-1" href="#案例分析">#</a>案例分析</h2>
<p>第一题必做，后面 4 选 2</p>
<h3 id="题型"><a class="header-anchor-1" href="#题型">#</a>题型</h3>
<p>选词填空型、简答填空型、概念对比型、概念简述型、解决方案简述型</p>
<p>DFD 数据流图</p>
<ul>
<li>父图 ( 上层数据流图 ) 与 子图 ( 下层数据流图 ) 平衡（也叫作分层细化过程平衡）。个数一致：两层数据流图中的数据流个数一致。方向一致：两层数据流图中的数据流方向一致。</li>
<li>黑洞 加工只有输入没有输出（只进不出）</li>
<li>奇迹 加工只有输出没有输入（只出不进）</li>
<li>灰洞 加工不出输出流</li>
<li>数据存储 一般来说这个点可以不提。正常情况下必须既有读的数据流，又有写的数据流；在某张子图中，可能只有读没有写，或者只有写没有读。</li>
</ul>
<p>STD 状态(转换)图</p>
<ul>
<li>（1）状态、初态、终态。</li>
<li>（2）事件、转移、动作。</li>
<li>（3）并发状态机。状态机图的推荐使用场合：包括类设计场合</li>
</ul>
<p>用例图</p>
<ul>
<li>用例之间的关系: 包含、扩展和泛化</li>
</ul>
<p>类图</p>
<ul>
<li>类之间的关系: 关联–、依赖-|+&gt;、泛化-|&gt;、聚合-&lt;&gt;、组合-&lt;+&gt;和实现-.-|&gt;
<ul>
<li>关联–: 一般的关联关系</li>
<li>聚合-&lt;&gt;和组合-&lt;+&gt;的区别: 组合关系的部分不能脱离整体而存在，聚合关系没有生命周期约束</li>
<li>依赖-|+&gt;，泛化-|&gt;，实现-.-|&gt;的区别: 依赖关系是 A 依赖 B，泛化关系是 A 是 B 的子类，实现关系是 A 实现 B 的接口</li>
</ul>
</li>
</ul>
<p>顺序图/时序图</p>
<ul>
<li>对象 生命线</li>
<li>交互片段</li>
<li>执行发生</li>
<li>同步、异步、返回消息</li>
</ul>
<p>通信图/协作图</p>
<ul>
<li>对象 生命线</li>
<li>连接</li>
<li>同步、异步、返回消息</li>
</ul>
<p>时序图 vs 通信图: 顺序图以时间轴为主线，通过垂直生命线和消息箭头清晰展示消息传递的时序关系，适合体现复杂的操作流程、并发或者异步操作；而通信图则以对象间的结构关系为中心，通过节点和链接呈现交互路径，强调对象协作的拓扑结构，适合分析静态关系紧密、消息路径简单的场景。两者语义等价，可以相互转换。实际应用中需要根据具体需求和复杂度选择合适的图示方式，关注时序细节用顺序图，强调结构关系用通信图，也可以结合使用以全面描述交互逻辑。</p>
<p>活动图</p>
<ul>
<li>活动 对象 分区</li>
<li>起点 终点 决策点 分叉/合并</li>
<li>控制流 对象流</li>
</ul>
<p>类识别</p>
<ul>
<li>实体类 边界类 控制类</li>
</ul>
<p>面向对象设计原则</p>
<ul>
<li>SOLID
<ul>
<li>S: 单一职责原则</li>
<li>O: 开放-封闭原则</li>
<li>L: 里氏替换原则</li>
<li>I: 接口隔离原则</li>
<li>D: 依赖倒置原则</li>
</ul>
</li>
</ul>
<p>开闭原则: 面向对象设计的开闭原则（Open Closed Principle, OCP）指的是一个软件实体（类、模块、函数等）应该对扩展开放，对修改关闭。也就是说，在设计一个模块时，应该允许在不修改原有代码的情况下，通过增加新代码来扩展其功能或者行为。</p>
<p>单一职责原则: 单一职责原则（Single Responsibility Principle, SRP）是指一个类应该只有一个设计原因，即一个类应该只有一个职责。</p>
<p>里氏替换原则: 里氏替换原则（Liskov Substitution Principle, LSP）是指子类对象应该能够替换父类对象，并且程序的行为不会发生变化。</p>
<p>表现层层次结构</p>
<ul>
<li>MVC 模式
<ul>
<li>视图 -&gt; 控制器 -&gt; 模型 -&gt; 视图更新</li>
</ul>
</li>
<li>MVP 模式
<ul>
<li>视图 &lt;-&gt; 呈现器 &lt;-&gt; 模型</li>
</ul>
</li>
<li>MVVC 模式
<ul>
<li>视图 &lt;-&gt; 视图模型 &lt;-&gt; 模型</li>
</ul>
</li>
</ul>
<p>中间层架构</p>
<p>数据层架构</p>
<ul>
<li>在线访问模式: 应用程序直接操作数据库</li>
<li>DAO: 通过接口封装数据库操作</li>
<li>DTO: 用于跨进程/跨网络传输数据的对象</li>
<li>ORM: 对象关系映射</li>
</ul>
<p>数据库程序采用在线访问方式的优点包括性能较高、能够处理复杂查询；缺点是要求开发人员具备 SQL 编程能力，且代码修改维护相对困难。
ORM 的优点是简化了数据库操作，降低了学习和开发成本，无需编写 SQL 语句，减少代码量，降低 SQL 质量带来的影响；缺点是性能不如在线访问方式，且处理复杂查询困难。选择 ORM 的主要考虑因素是团队的技术水平和项目的复杂性。</p>
<p>增加数据访问层的原因是为了实现数据和业务逻辑的分离，提高系统的可维护性和可扩展性。数据访问层的主要功能是提供对数据源的访问和操作，封装数据访问的细节，使得业务逻辑层不需要关心数据存储的具体实现。简化开发流程，方便后续的维护和扩展，提升系统的可重用性和可测试性。</p>
<p>物联网</p>
<ul>
<li>感知层 网络层 应用层</li>
</ul>
<p>云原生架构原则</p>
<ul>
<li>弹性原则 系统自动伸缩，适配业务需求</li>
<li>韧性原则 抵御软硬件异常，保障系统稳定</li>
</ul>
<p>云原生架构模式</p>
<ul>
<li>服务化架构模式: 以应用模块划分软件，通过接口契约、标准协议定义业务关系，结合 DDD、TDD、容器化部署提升代码质量与迭代速度，典型模式为微服务、小服务</li>
<li>Mesh 化架构模式: 将中间件框架（RPC、缓存等）从业务进程分离，业务进程仅保留薄 Client，中间件逻辑由 Mesh 进程完成</li>
<li>Serverless 模式: 开发者无需关心应用运行环境，云自动处理应用启动、调度、关闭，业务流量/ 事件触发处理</li>
<li>存储计算分离模式: 分布式环境中，将暂态数据、持久数据采用云服务保存，有状态场景通过时间日志 + 快照恢复服务</li>
<li>分布式事务模式: 针对多数据源场景，提供多种事务模式：XA 模式（强一致，性能差）；基于消息最终一致性（高性能，通用性有限）；TCC 模式（应用层控制，侵入性强）；SAGA 模式（补偿事务，开发维护成本高）；SEATA AT 模式（高性能、无代码工作量，有场景限制）</li>
<li>可观测架构: 通过 Logging（多级别日志）、Tracing（请求链路跟踪）、Metrics（系统量化度量）实现可观测性，定义组件 SLO（并发度、耗时等）</li>
<li>事件驱动架构: 基于事件集成应用 / 组件，事件含 schema 可校验，具备 QoS 保障与失败响应机制，用于服务解耦、数据变化通知、事件流处理等</li>
</ul>
<p>云原生架构反模式</p>
<ul>
<li>庞大的单体应用</li>
<li>单体应用“硬拆”为微服务</li>
<li>缺乏自动化能力的微服务</li>
</ul>
<p>容器技术</p>
<p>容器技术是一种轻量级的隔离技术，允许多个应用在同一操作系统内核上运行，每个容器运行一个或者一组应用，具有独立的文件系统、运行环境等，实现应用的快速部署和隔离。虚拟机技术通过虚拟化技术在物理服务器上模拟出多个独立的虚拟计算机，每个虚拟机有自己的硬件资源、操作系统和应用程序，实现完全的隔离和资源分配。容器技术相较于虚拟机技术更加轻量级，资源占用更少，启动速度更快，能更加高效地利用硬件资源，满足系统升级中对于资源利用优化的需求。且在当前技术发展下，安全问题可通过安全策略、容器隔离等方式进行防护，在满足业务需求的同时，能以更低的成本和更高的效率实现资源的利用。契合企业系统升级的初衷。</p>
<p>容器编排技术</p>
<dl>
<dt>SOA 面向服务架构</dt>
<dd>面向服务架构（SOA）是一种软件架构风格，强调将应用程序的不同功能单元划分为松耦合的服务，并将这些服务通过标准化的接口和契约联系起来。接口是采用中立的方式进行定义的，而且独立于实现服务的硬件平台、操作系统和编程语言。者使得构建和集成复杂的分布式系统变得更加灵活和高效。</dd>
</dl>
<p>服务注册模式</p>
<ul>
<li>服务提供者 服务注册中心 服务请求者</li>
<li>UDDI 注册中心</li>
<li>WSDL 服务定义语言</li>
<li>SOAP 简单对象访问协议 基于 XML 用于通信</li>
</ul>
<p>REST 风格</p>
<ul>
<li>资源 URI</li>
<li>统一资源接口</li>
<li>资源表述</li>
<li>资源链接</li>
<li>状态转移</li>
</ul>
<dl>
<dt>ESB 企业服务总线</dt>
<dd>企业服务总线（ESB）提供位置透明的消息路由和寻址服务、服务注册和命名管理功能，支持多种消息传递模式（点对点、发布/订阅等），多种传输协议，多种消息格式，提供服务编排和转换功能，支持事务处理和安全性等。</dd>
</dl>
<p>微服务</p>
<ul>
<li>解耦复杂应用、独立部署、技术选型灵活、容错性好、易扩展。</li>
<li>聚合器微服务</li>
<li>代理微服务</li>
<li>链式微服务</li>
<li>分支微服务</li>
<li>数据共享微服务</li>
<li>异步消息微服务</li>
</ul>
<p>软件架构风格</p>
<ul>
<li>数据流架构
<ul>
<li>批处理</li>
<li>管道-过滤器</li>
</ul>
</li>
<li>调用/返回架构
<ul>
<li>主程序/子程序</li>
<li>面向对象</li>
<li>客户端/服务器</li>
</ul>
</li>
<li>以数据为中心的架构
<ul>
<li>仓库</li>
<li>黑板</li>
</ul>
</li>
<li>虚拟机
<ul>
<li>解释器</li>
</ul>
</li>
<li>独立构件
<ul>
<li>事件驱动</li>
</ul>
</li>
<li>特殊
<ul>
<li>C2</li>
<li>过程控制</li>
</ul>
</li>
</ul>
<p>面向对象和解释器风格的对比分析: 应该选择解释器风格。折扣规则的变化频繁，且变化的规则数量较多，使用面向对象风格会导致类的数量过多，增加了系统的复杂性和维护成本。而解释器风格则可以通过动态加载和解析规则来实现灵活的规则处理，适应性更强，且可以更好地支持规则的变化和扩展。个性化折扣定义灵活性方面，解析器风格可以通过定义规则的语法和语义来实现个性化折扣的定义，做到千人千面。系统性能方面，面向对象风格可能略优于解释器风格，但在实际应用中，解释器风格的性能也可以通过优化解析器和规则引擎来提升。综合考虑，解释器风格更适合该系统的需求。</p>
<dl>
<dt>面向架构评估的质量属性</dt>
<dd>易理解性、可扩展性、可重用性、可测试性、可维护性、可移植性、性能、安全性</dd>
</dl>
<p>质量属性场景描述</p>
<ul>
<li>刺激源 刺激 环境 制品 响应 响应度量</li>
</ul>
<p>系统架构评估方法</p>
<ul>
<li>基于调查问卷或调查表</li>
<li>基于场景的评估 包括 SAAM ATAM</li>
<li>基于度量的评估</li>
</ul>
<p>SAAM</p>
<ul>
<li>输入: 问题描述、需求声明、架构描述</li>
<li>过程: 场景开发、架构描述、单场景评估、场景交互评估、总体评估</li>
</ul>
<p>ATAM 基于 SAAM</p>
<ul>
<li>演示、调查和分析、测试、报告
<ul>
<li>调查和分析: 场景和需求收集、架构视图和场景实现、属性模型构造和分析、权衡</li>
</ul>
</li>
<li>效用树: 树根-质量属性-属性分类-质量属性场景（叶子节点）</li>
<li>主要关注的质量属性: <strong>性能</strong>、<strong>安全性</strong>、<strong>可修改性</strong>、<strong>可用性</strong></li>
</ul>
<p>安全架构</p>
<ul>
<li>可用性、完整性、机密性</li>
</ul>
<p>数据加密技术</p>
<ul>
<li>对称加密</li>
<li>非对称加密</li>
<li>数字签名</li>
<li>数字证书</li>
</ul>
<p>基于口令的简单认证机制 vs 基于公钥体系的机制:
（1）基于口令的认证方式实现简单，但由于口令复杂度及管理方面的原因，易受到认证攻击；而在基于公钥体系的认证机制中，由于使用了公钥和私钥的非对称加密技术，在认证过程中，私钥仅存储在用户本地，不在网络中传输，因此可以有效地防止认证攻击，与基于口令的认证方式相比，安全性更高。（2）按照需求描述，系统在完成用户身份鉴别后，需根据用户的身份信息进行权限控制。在基于口令的认证机制中，用户口令为用户和认证服务器共享，没有用户独有的直接秘密信息。而在基于公钥体系的认证机制中，可基于用户私钥对私有数据进行加密，只有用户本人才能解密，实现更加简便。（3）基于公钥体系的认证机制的协议和计算相对复杂，因此在性能上会略逊于基于口令的认证机制。但由于企业业务环境的总用户在 100 人以内，规模不大，运行环境又为局域网环境，因此基于公钥体系的认证机制可以满足平台效率要求。</p>
<p>系统架构原则</p>
<p>批处理和流处理</p>
<p>Lambda 架构</p>
<ul>
<li>批处理层 Hive Spark MapReduce</li>
<li>速度处理层 Storm Spark Streaming Flink</li>
<li>服务层 Kylin Presto Impala Druid
<ul>
<li>以批处理层和加速层结果数据为基础，对外提供低延时数据查询和即席查询服务</li>
</ul>
</li>
</ul>
<p>Kappa 架构</p>
<ul>
<li>只保留流处理层，批处理层被流处理层替代</li>
</ul>
<p>对比</p>
<p>IOTA 架构</p>
<p>数据库系统</p>
<p>索引</p>
<p>数据分片</p>
<p>数据分区</p>
<p>数据库高可用模式</p>
<ul>
<li>读写分离</li>
<li>主从复制</li>
<li>一致性问题</li>
</ul>
<p>数据库选型</p>
<p>分布式系统</p>
<ul>
<li>CAP 理论: 数据一致性、可用性和分区容错性</li>
<li>BASE 理论: 基本可用、软状态和最终一致性</li>
</ul>
<p>分布式事务</p>
<ul>
<li>2PC 两阶段提交协议</li>
<li>TCC 柔性事务</li>
<li>柔性事务本地消息表</li>
</ul>
<p>Redis</p>
<p>MongoDB</p>
<ul>
<li>分片集群</li>
<li>主从副本</li>
</ul>
<p>ElasticSearch</p>
<ul>
<li>全文搜索</li>
<li>倒排索引</li>
</ul>
<h2 id="论文"><a class="header-anchor-1" href="#论文">#</a>论文</h2>
<h3 id=""><a class="header-anchor-1" href="#">#</a></h3>
]]></content>
      <categories>
        <category>ruankao</category>
      </categories>
      <tags>
        <tag>软考</tag>
      </tags>
  </entry>
  <entry>
    <title>20 行代码速通 Safe Rust Double Free (整活向)</title>
    <url>/2025/02/11/unsound-rust/</url>
    <content><![CDATA[<p>受到 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1NwZXlraW91cy9jdmUtcnM=">cve-rs<i class="fa fa-external-link-alt"></i></span> 项目启发，利用 Type system 的固有 Unsoundness 实现一个经典的 Double Free。</p>
<h2 id="代码"><a class="header-anchor-1" href="#代码">#</a>代码</h2>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="meta">#[inline(never)]</span></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">const</span> <span class="keyword">fn</span> <span class="title function_">lifetime_translator</span>&lt;<span class="symbol">&#x27;a</span>, <span class="symbol">&#x27;b</span>, T: ?<span class="built_in">Sized</span>&gt;(_: &amp;<span class="symbol">&#x27;a</span> &amp;<span class="symbol">&#x27;b</span> (), x: &amp;<span class="symbol">&#x27;b</span> <span class="keyword">mut</span> T) <span class="punctuation">-&gt;</span> &amp;<span class="symbol">&#x27;a</span> <span class="keyword">mut</span> T &#123;</span><br><span class="line">    x</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">fn</span> <span class="title function_">expand</span>&lt;<span class="symbol">&#x27;a</span>, <span class="symbol">&#x27;b</span>, T: ?<span class="built_in">Sized</span>&gt;(x: &amp;<span class="symbol">&#x27;a</span> <span class="keyword">mut</span> T) <span class="punctuation">-&gt;</span> &amp;<span class="symbol">&#x27;b</span> <span class="keyword">mut</span> T &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">f</span>: <span class="keyword">for</span>&lt;<span class="symbol">&#x27;x</span>&gt; <span class="title function_ invoke__">fn</span>(_, &amp;<span class="symbol">&#x27;x</span> <span class="keyword">mut</span> T) <span class="punctuation">-&gt;</span> &amp;<span class="symbol">&#x27;b</span> <span class="keyword">mut</span> T = lifetime_translator;</span><br><span class="line">    <span class="title function_ invoke__">f</span>(STATIC_UNIT, x)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">const</span> STATIC_UNIT: &amp;&amp;() = &amp;&amp;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">fn</span> <span class="title function_">main</span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">dead</span> = <span class="title function_ invoke__">expand</span>(&amp;<span class="keyword">mut</span> <span class="built_in">vec!</span>[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]);</span><br><span class="line">    dead.<span class="title function_ invoke__">push</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="运行"><a class="header-anchor-1" href="#运行">#</a>运行</h2>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">frezcirno@homelab:~/unsound-rust$ rustc unsound.rs</span><br><span class="line">frezcirno@homelab:~/unsound-rust$ ./unsound</span><br><span class="line">free(): double free detected in tcache 2</span><br><span class="line">已中止</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>rust</category>
      </categories>
  </entry>
  <entry>
    <title>模糊测试 Fuzzing test</title>
    <url>/2023/12/19/afl-fuzz/</url>
    <content><![CDATA[<h2 id="编译项目，插桩"><a class="header-anchor-1" href="#编译项目，插桩">#</a>编译项目，插桩</h2>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> CC=afl-clang-fast</span><br><span class="line"><span class="built_in">export</span> CXX=afl-clang-fast++</span><br><span class="line"></span><br><span class="line">./configure --enable-shared=no --enable-static=<span class="built_in">yes</span></span><br><span class="line">make -j 32</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="运行-fuzz"><a class="header-anchor-1" href="#运行-fuzz">#</a>运行 Fuzz</h2>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">tmux new-window afl-fuzz -i fuzz-input -o fuzz-output -t 100000 -m 200 -S 1 -- ./utilities/magick convert @@ /tmp/out.png &amp;</span><br><span class="line">tmux new-window afl-fuzz -i fuzz-input -o fuzz-output -t 100000 -m 200 -S 2 -- ./utilities/magick convert @@ /tmp/out.png &amp;</span><br><span class="line">tmux new-window afl-fuzz -i fuzz-input -o fuzz-output -t 100000 -m 200 -S 3 -- ./utilities/magick convert @@ /tmp/out.png &amp;</span><br><span class="line">tmux new-window afl-fuzz -i fuzz-input -o fuzz-output -t 100000 -m 200 -M 0 -- ./utilities/magick convert @@ /tmp/out.png</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>software-test</category>
      </categories>
      <tags>
        <tag>软件测试</tag>
        <tag>模糊测试</tag>
        <tag>fuzz</tag>
      </tags>
  </entry>
  <entry>
    <title>jpf-symbc 踩坑记录</title>
    <url>/2023/12/20/jpf-symbc/</url>
    <content><![CDATA[<h2 id="jpf"><a class="header-anchor-1" href="#jpf">#</a>JPF</h2>
<p>Analysis system for Java</p>
<p>Developed by NASA</p>
<p>jpf 可以用来:</p>
<ul>
<li>software model checking (deadlock &amp; race detection)</li>
<li>deep inspection (numeric analysis, invalid access)</li>
<li>test case generation (symbolic execution)</li>
</ul>
<h2 id="组件"><a class="header-anchor-1" href="#组件">#</a>组件</h2>
<p>Java 字节码解释器(虚拟机)</p>
<p>Listeners: To print results of symbolic analysis (path conditions, test vectors or test sequences); to influence the search</p>
<h2 id="相关资源"><a class="header-anchor-1" href="#相关资源">#</a>相关资源</h2>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly95YW5uaWNub2xsZXIubm90aW9uLnNpdGUvU3ltYm9saWMtUGF0aEZpbmRlci1TZXR1cC00N2ZlNzg0ZDgxNjE0Zjk4YjQ1MjVmMjYwNjE4ZmEzNSNmY2QyYmQ0ZGVhMGQ0ZGFhOWRhYjgzNTIwZGE2OGZlMQ==">jpf-symbc 作者的 notion 笔记<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9taXIuY3MuaWxsaW5vaXMuZWR1L21hcmlub3YvcmlvMjAxMS9KUEYtNTgucGRm">JavaPathfinder Tutorial 02/2010<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuc2xpZGVzZXJ2ZS5jb20vb21lci9qcGYtdHV0b3JpYWw=">JPF Tutorial – Part 2 Symbolic PathFinder – Symbolic Execution of Java Byte-code<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9mbS5jc2wuc3JpLmNvbS9TU0ZUMTEvSlBGLWxlY3R1cmUtMi5wZGY=">Java Pathfinder Lecture 2: Under the Hood<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cudWlvLm5vL3N0dWRpZXIvZW1uZXIvbWF0bmF0L2lmaS9JTkY1MTQwL3YxNS9zbGlkZXMvanBmLnBkZg==">Java Path Finder 2015<i class="fa fa-external-link-alt"></i></span></li>
<li></li>
</ul>
<h2 id="安装和配置"><a class="header-anchor-1" href="#安装和配置">#</a>安装和配置</h2>
<p>安装配置文档竟在<span class="exturl" data-url="aHR0cHM6Ly95YW5uaWNub2xsZXIubm90aW9uLnNpdGUvU3ltYm9saWMtUGF0aEZpbmRlci1TZXR1cC00N2ZlNzg0ZDgxNjE0Zjk4YjQ1MjVmMjYwNjE4ZmEzNSNmY2QyYmQ0ZGVhMGQ0ZGFhOWRhYjgzNTIwZGE2OGZlMQ==">作者的 notion 笔记<i class="fa fa-external-link-alt"></i></span>里面…</p>
<p>下面讲一下笔者的踩坑经验</p>
<ol>
<li>克隆项目</li>
</ol>
<p><code>jpf-core</code> 和 <code>jpf-symbc</code> 放在同一个目录下面</p>
<p><code>jpf-core</code> 要用这个版本 -&gt; <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3lhbm5pY25vbGxlci9qcGYtY29yZQ==">https://github.com/yannicnoller/jpf-core<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── jpf-core</span><br><span class="line">└── jpf-symbc</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>编译项目</li>
</ol>
<p><code>jpf-symbc</code> 只支持 Java 8</p>
<p>切换到 Java 8</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">jabba install temulin@8</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">jabba use temulin@8</span></span><br></pre></td></tr></table></figure>
<p><code>jpf-core</code> 用 <code>ant</code> 编译</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">## in jpf-core</span></span><br><span class="line">ant build</span><br><span class="line"></span><br><span class="line"><span class="comment">## (Optional) test</span></span><br><span class="line">JUNIT_HOME=/usr/share/maven-repo/junit/junit/4.13.2/ ant <span class="built_in">test</span></span><br></pre></td></tr></table></figure>
<p><code>jpf-symbc</code> 用 <code>ant</code> 编译</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">## in jpf-symbc</span></span><br><span class="line">ant build</span><br><span class="line"></span><br><span class="line"><span class="comment">## (Optional) test</span></span><br><span class="line">JUNIT_HOME=/usr/share/maven-repo/junit/junit/4.13.2/ ant <span class="built_in">test</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>配置 <code>~/.jpf/site.properties</code></li>
</ol>
<p>里面填写如下内容</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">jpf-core</span> = <span class="string">$&#123;user.home&#125;/src/javapathfinder/jpf-core</span></span><br><span class="line"><span class="attr">jpf-symbc</span> = <span class="string">$&#123;user.home&#125;/src/javapathfinder/jpf-symbc</span></span><br><span class="line"><span class="attr">extensions</span> = <span class="string">$&#123;jpf-core&#125;,$&#123;jpf-symbc&#125;</span></span><br></pre></td></tr></table></figure>
<p>其中对应修改两个项目的路径</p>
<ol start="4">
<li>测试下能否正常使用</li>
</ol>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># in jpf-symbc</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">java -Xmx1024m -ea -jar ../jpf-core/build/RunJPF.jar src/examples/demo/NumericExample.jpf</span></span><br><span class="line">symbolic.min_int=-2147483648</span><br><span class="line">symbolic.min_long=-9223372036854775808</span><br><span class="line">symbolic.min_short=-32768</span><br><span class="line">symbolic.min_byte=-128</span><br><span class="line">symbolic.min_char=0</span><br><span class="line">symbolic.max_int=2147483647</span><br><span class="line">symbolic.max_long=9223372036854775807</span><br><span class="line">symbolic.max_short=32767</span><br><span class="line">symbolic.max_byte=127</span><br><span class="line">symbolic.max_char=65535</span><br><span class="line">symbolic.min_double=4.9E-324</span><br><span class="line">symbolic.max_double=1.7976931348623157E308</span><br><span class="line">JavaPathfinder core system v8.0 - (C) 2005-2014 United States Government. All rights reserved.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">====================================================== system under test</span><br><span class="line">demo.NumericExample.main()</span><br><span class="line"></span><br><span class="line">====================================================== search started: 23-12-29 下午2:55</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">0</span></span><br><span class="line">&lt;=0</span><br><span class="line">Property Violated: PC is constraint ## = 1</span><br><span class="line">((a_1_SYMINT[15] + b_2_SYMINT[-13]) - CONST_2) == CONST_0</span><br><span class="line">Property Violated: result is  &quot;java.lang.ArithmeticException: div by 0...&quot;</span><br><span class="line">****************************</span><br><span class="line"></span><br><span class="line">====================================================== error 1</span><br><span class="line">gov.nasa.jpf.vm.NoUncaughtExceptionsProperty</span><br><span class="line">java.lang.ArithmeticException: div by 0</span><br><span class="line">        at demo.NumericExample.test(NumericExample.java:26)</span><br><span class="line">        at demo.NumericExample.main(NumericExample.java:34)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">====================================================== snapshot #1</span><br><span class="line">thread java.lang.Thread:&#123;id:0,name:main,status:RUNNING,priority:5,isDaemon:false,lockCount:0,suspendCount:0&#125;</span><br><span class="line">  call stack:</span><br><span class="line">        at demo.NumericExample.test(NumericExample.java:26)</span><br><span class="line">        at demo.NumericExample.main(NumericExample.java:34)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">====================================================== Method Summaries</span><br><span class="line">Inputs: a_1_SYMINT,b_2_SYMINT</span><br><span class="line"></span><br><span class="line">demo.NumericExample.test(-50,17)  --&gt; Return Value: --</span><br><span class="line">demo.NumericExample.test(0,0)  --&gt; Return Value: --</span><br><span class="line">demo.NumericExample.test(15,-13)  --&gt; &quot;java.lang.ArithmeticException: div by 0...&quot;</span><br><span class="line"></span><br><span class="line">====================================================== Method Summaries (HTML)</span><br><span class="line">&lt;h1&gt;Test Cases Generated by Symbolic JavaPath Finder for demo.NumericExample.test (Path Coverage) &lt;/h1&gt;</span><br><span class="line">&lt;table border=1&gt;</span><br><span class="line">&lt;tr&gt;&lt;td&gt;a_1_SYMINT&lt;/td&gt;&lt;td&gt;b_2_SYMINT&lt;/td&gt;&lt;td&gt;RETURN&lt;/td&gt;&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;&lt;td&gt;-50&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;Return Value: --&lt;/td&gt;&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;Return Value: --&lt;/td&gt;&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;-13&lt;/td&gt;&lt;td&gt;&quot;java.lang.ArithmeticException: div by 0...&quot;&lt;/td&gt;&lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br><span class="line">====================================================== results</span><br><span class="line">error #1: gov.nasa.jpf.vm.NoUncaughtExceptionsProperty &quot;java.lang.ArithmeticException: div by 0  at demo.N...&quot;</span><br><span class="line"></span><br><span class="line">====================================================== statistics</span><br><span class="line">elapsed time:       00:00:00</span><br><span class="line">states:             new=5,visited=0,backtracked=5,end=2</span><br><span class="line">search:             maxDepth=3,constraints=0</span><br><span class="line">choice generators:  thread=1 (signal=0,lock=1,sharedRef=0,threadApi=0,reschedule=0), data=2</span><br><span class="line">heap:               new=371,released=20,maxLive=349,gcCycles=3</span><br><span class="line">instructions:       3246</span><br><span class="line">max memory:         709MB</span><br><span class="line">loaded code:        classes=64,methods=1325</span><br><span class="line"></span><br><span class="line">====================================================== search finished: 23-12-29 下午2:55</span><br></pre></td></tr></table></figure>
<h2 id="jpf-symbc-使用"><a class="header-anchor-1" href="#jpf-symbc-使用">#</a><code>jpf-symbc</code> 使用</h2>
<p>对于每个要进行符号执行的程序, 需要编写一个 <code>.jpf</code> 文件, 然后调用 <code>RunJPF.jar</code>:</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># in jpf-symbc</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">java -Xmx1024m -ea -jar ../jpf-core/build/RunJPF.jar src/examples/demo/NumericExample.jpf</span></span><br></pre></td></tr></table></figure>
<h3 id="jpf-文件内容含义"><a class="header-anchor-1" href="#jpf-文件内容含义">#</a><code>.jpf</code> 文件内容含义</h3>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">; 测试的application类</span></span><br><span class="line"><span class="attr">target</span>=x.y.TreeMapSimple</span><br><span class="line"></span><br><span class="line"><span class="attr">target.args</span>=arg1,arg2</span><br><span class="line"></span><br><span class="line"><span class="attr">classpath</span>=<span class="variable">$&#123;jpf-symbc&#125;</span>/build/examples  <span class="comment">; path to your class example</span></span><br><span class="line"><span class="attr">sourcepath</span>=<span class="variable">$&#123;jpf-symbc&#125;</span>/build/examples  <span class="comment">; path to the source of your example</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; 注册到jpf-core的listener</span></span><br><span class="line"><span class="comment">; 控制接下来做什么</span></span><br><span class="line"><span class="comment">; gov.nasa.jpf.listener.PreciseRaceDetector  竞争情况检查</span></span><br><span class="line"><span class="comment">; gov.nasa.jpf.listener.CoverageAnalyzer   分析覆盖率</span></span><br><span class="line"><span class="comment">; gov.nasa.jpf.listener.DeadlockAnalyzer   分析代码死锁</span></span><br><span class="line"><span class="comment">; gov.nasa.jpf.listener.MethodAnalyzer</span></span><br><span class="line"><span class="comment">; gov.nasa.jpf.symbc.SymbolicListener   输出 PC 和 JUnit test</span></span><br><span class="line"><span class="comment">; gov.nasa.jpf.symbc.sequences.SymbolicSequenceListener  输出 JUnit test</span></span><br><span class="line"><span class="comment">; gov.nasa.jpf.symbc.GreenListener</span></span><br><span class="line"><span class="attr">listener</span>=gov.nasa.jpf.symbc.SymbolicListener,gov.nasa.jpf.symbc.sequences.SymbolicSequenceListener,gov.nasa.jpf.listener.PreciseRaceDetector,gov.nasa.jpf.listener.CoverageAnalyzer</span><br><span class="line"></span><br><span class="line"><span class="comment">; specify some search limit</span></span><br><span class="line"><span class="attr">search.depth_limit</span>=<span class="number">15</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;</span></span><br><span class="line"><span class="attr">coverage.include</span>=dataflow.Billing</span><br><span class="line"><span class="attr">coverage.show_requirements</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; 遇到exception的时候打印stack trace</span></span><br><span class="line"><span class="comment">; 和 PreciseRaceDetector 一起使用</span></span><br><span class="line"><span class="comment">; error trace snapshot</span></span><br><span class="line"><span class="attr">report.console.property_violation</span>=error,trace</span><br><span class="line"></span><br><span class="line"><span class="comment">; 对于 random.nextInt 枚举随机数</span></span><br><span class="line"><span class="attr">cg.enumerate_random</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; 和 MethodAnalyzer 一起使用</span></span><br><span class="line"><span class="attr">method.include</span>=*Robot*</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">; 测试的目标方法, 多个函数用逗号分隔</span></span><br><span class="line"><span class="comment">; 函数参数用 (sym) 表示, 多个参数用 ## 分隔</span></span><br><span class="line"><span class="comment">; 例如: triangle.Triangle.getType(sym#sym#sym)</span></span><br><span class="line"><span class="attr">symbolic.method</span>=TreeMapSimple.containsKey(sym),TreeMapSimple.put(sym),TreeMapSimple.remove(sym)</span><br><span class="line"></span><br><span class="line"><span class="comment">; specify the decision procedure to use</span></span><br><span class="line"><span class="comment">; z3, z3inc, z3bitvector, z3bitvectorinc</span></span><br><span class="line"><span class="comment">; cvc3, cvc3bitvec, choco, iasolver</span></span><br><span class="line"><span class="attr">symbolic.dp</span>=z3bitvector</span><br><span class="line"><span class="attr">symbolic.bvlength</span>=<span class="number">64</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; 各种类型的范围</span></span><br><span class="line"><span class="attr">symbolic.min_int</span>=-<span class="number">100</span></span><br><span class="line"><span class="attr">symbolic.max_int</span>=<span class="number">100</span></span><br><span class="line"><span class="attr">symbolic.min_double</span>=-<span class="number">100.0</span></span><br><span class="line"><span class="attr">symbolic.max_double</span>=<span class="number">100.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; print some debug information</span></span><br><span class="line"><span class="attr">symbolic.debug</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; handling symbolic arrays</span></span><br><span class="line"><span class="attr">symbolic.lazy</span>=<span class="literal">on</span></span><br><span class="line"><span class="attr">symbolic.arrays</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; specify string analysis</span></span><br><span class="line"><span class="attr">symbolic.strings</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">symbolic.string_dp</span>=ABC  <span class="comment">; or z3str</span></span><br><span class="line"><span class="attr">symbolic.string_dp_timeout_ms</span>=<span class="number">3000</span></span><br></pre></td></tr></table></figure>
<!-- ## `jpf` 源码分析 -->
]]></content>
      <categories>
        <category>software-test</category>
      </categories>
      <tags>
        <tag>jpf-symbc</tag>
      </tags>
  </entry>
  <entry>
    <title>KLEE 符号执行</title>
    <url>/2023/12/19/klee/</url>
    <content><![CDATA[<h2 id="基本使用"><a class="header-anchor-1" href="#基本使用">#</a>基本使用</h2>
<ol>
<li>修改程序源码，在合适的地方插入符号值</li>
</ol>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">int main() &#123;</span><br><span class="line">  int a;</span><br><span class="line"><span class="addition">+  klee_make_symbolic(&amp;a, sizeof(a), &quot;a&quot;);</span></span><br><span class="line">  return get_sign(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>编译成 LLVM bitcode</li>
</ol>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">clang -I ../../include -emit-llvm -c -g -O0 -Xclang -disable-O0-optnone get_sign.c</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>符号模拟执行 bitcode</li>
</ol>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">klee get_sign.bc</span></span><br></pre></td></tr></table></figure>
<ol start="4">
<li>查看模拟得到的 test cases</li>
</ol>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ktest-tool klee-last/test000001.ktest</span></span><br></pre></td></tr></table></figure>
<h2 id="内部实现"><a class="header-anchor-1" href="#内部实现">#</a>内部实现</h2>
<h3 id="directory-structure"><a class="header-anchor-1" href="#directory-structure">#</a>Directory Structure</h3>
<ul>
<li>lib - KLEE 核心源代码
<ul>
<li>Basic - 不依赖 LLVM 的工具代码, 一堆工具类</li>
<li>Support - 依赖 LLVM 的工具代码, 一堆工具类
<ul>
<li>KTest.cpp</li>
<li>Statistics.cpp</li>
</ul>
</li>
<li>Module - klee facilities for working with LLVM modules, including the shadow module/instruction structures we use during execution.</li>
<li>Expr - 表达式对象</li>
<li>Solver - 求解器 binder</li>
<li>Core - 核心符号虚拟机</li>
</ul>
</li>
<li>tools - KLEE 的二进制
<ul>
<li>kleaver - 查询什么 log</li>
<li>klee - 符号模拟执行一个 bitcode</li>
<li>klee-replay - 复现 ktest</li>
<li>klee-stats</li>
<li>klee-zesti</li>
<li>ktest-gen</li>
<li>ktest-randgen</li>
<li>ktest-tool</li>
</ul>
</li>
<li>runtime - 符号模拟执行时依赖的库</li>
</ul>
<h3 id="utilities-klee-辅助类"><a class="header-anchor-1" href="#utilities-klee-辅助类">#</a>Utilities KLEE 辅助类</h3>
<h4 id="引用计数-referencecounter-ref-t"><a class="header-anchor-1" href="#引用计数-referencecounter-ref-t">#</a>引用计数 <code>ReferenceCounter</code> <code>ref&lt;T&gt;</code></h4>
<p>这两个类用于实现引用计数</p>
<p><code>ReferenceCounter</code> 放在被计数的对象中</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Human</span> &#123;</span><br><span class="line">  ReferenceCounter _refCount;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><code>ref&lt;T&gt;</code> 是对象的引用, 重载了*和-&gt;运算符, 可以像指针一样使用</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">ref&lt;Human&gt; <span class="title">r</span><span class="params">(<span class="keyword">new</span> Human())</span></span>;</span><br><span class="line">r-&gt;<span class="built_in">hello</span>();</span><br></pre></td></tr></table></figure>
<h3 id="tools-klee-klee-工具源码"><a class="header-anchor-1" href="#tools-klee-klee-工具源码">#</a>tools/klee KLEE 工具源码</h3>
<h4 id="main-主函数"><a class="header-anchor-1" href="#main-主函数">#</a>main 主函数</h4>
<ul>
<li>
<p><code>klee::loadFile</code> 加载输入文件，可以是单个 bitcode(.bc)或者 archive(.a), 得到一组<code>llvm::Module</code></p>
</li>
<li>
<p><code>klee::linkModules</code> 把所有 <code>Module</code> 链接成一整个</p>
</li>
<li>
<p>检查 triple</p>
</li>
<li>
<p>配置 Libcxx, Libc</p>
</li>
<li>
<p>配置程序运行环境: argc, argv, envp</p>
</li>
<li>
<p>创建 <code>Handler</code>, <code>Executor</code> <em>impl</em> <code>Interpreter</code></p>
</li>
<li>
<p><code>externalsAndGlobalsCheck</code> 做检查</p>
</li>
<li>
<p>Replay or 模拟执行</p>
</li>
<li>
<p><code>interpreter</code>-&gt;<code>runFunctionAsMain</code> 开始模拟执行</p>
</li>
</ul>
<h4 id="executor-run-开始"><a class="header-anchor-1" href="#executor-run-开始">#</a><code>Executor::run</code> 开始</h4>
<ul>
<li>
<p><code>usingSeeds</code> 判断</p>
</li>
<li>
<p>主循环</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main interpreter loop</span></span><br><span class="line"><span class="keyword">while</span> (!states.<span class="built_in">empty</span>() &amp;&amp; !haltExecution) &#123;</span><br><span class="line">  ExecutionState &amp;state = searcher-&gt;<span class="built_in">selectState</span>();  <span class="comment">// 选择一个 State</span></span><br><span class="line">  KInstruction *ki = state.pc;  <span class="comment">// 取指令</span></span><br><span class="line">  <span class="built_in">stepInstruction</span>(state);  <span class="comment">// 更新 PC</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">executeInstruction</span>(state, ki);  <span class="comment">// 执行指令</span></span><br><span class="line">  timers.<span class="built_in">invoke</span>();</span><br><span class="line">  <span class="keyword">if</span> (::dumpStates) <span class="built_in">dumpStates</span>();</span><br><span class="line">  <span class="keyword">if</span> (::dumpPTree) <span class="built_in">dumpPTree</span>();</span><br><span class="line"></span><br><span class="line">  <span class="built_in">updateStates</span>(&amp;state);  <span class="comment">// 更新 State</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!<span class="built_in">checkMemoryUsage</span>()) &#123;</span><br><span class="line">    <span class="comment">// update searchers when states were terminated early due to memory pressure</span></span><br><span class="line">    <span class="built_in">updateStates</span>(<span class="literal">nullptr</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>很清晰的代码, 每次循环选择一个程序 <code>ExecutionState</code>, 执行下条 <code>KInstruction</code>, 更新状态, 然后重复.</p>
<p>其中 <code>Searcher</code> 实现了探索的策略, <code>klee</code> 中有多种实现, 如 <code>BFS</code>/<code>DFS</code>/<code>Random</code> 等</p>
<h4 id="程序状态-executionstate-stackframe"><a class="header-anchor-1" href="#程序状态-executionstate-stackframe">#</a>程序状态 <code>ExecutionState</code>, <code>StackFrame</code></h4>
<p>执行状态, 包括栈帧</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ExecutionState</span> &#123;</span><br><span class="line">  <span class="comment">/// @brief Pointer to instruction to be executed after the current</span></span><br><span class="line">  <span class="comment">/// instruction</span></span><br><span class="line">  KInstIterator pc;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// @brief Stack representing the current instruction stream</span></span><br><span class="line">  std::vector&lt;StackFrame&gt; stack;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>栈帧里面包含 <code>locals</code>, 是一堆预分配的 <code>Cell</code>, 数量等于函数参数+指令总数</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">StackFrame</span> &#123;</span><br><span class="line">  KInstIterator caller;</span><br><span class="line">  KFunction *kf;</span><br><span class="line">  CallPathNode *callPathNode;</span><br><span class="line"></span><br><span class="line">  std::vector&lt;<span class="type">const</span> MemoryObject *&gt; allocas;</span><br><span class="line">  Cell *locals;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><code>Cell</code> 即对 <code>Expr</code> 的引用</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> klee &#123;</span><br><span class="line">  <span class="keyword">struct</span> <span class="title class_">Cell</span> &#123;</span><br><span class="line">    ref&lt;Expr&gt; value;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="executor-executeinstruction-开始"><a class="header-anchor-1" href="#executor-executeinstruction-开始">#</a><code>Executor::executeInstruction</code> 开始</h4>
<p>根据指令 opcode 对应处理</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">case</span> Instruction::Ret:</span><br><span class="line">      <span class="comment">// 求解return返回的值</span></span><br><span class="line">      result = <span class="built_in">eval</span>(ki, <span class="number">0</span>, state).value;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 考虑是否需要进行 coercion</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// bindLocal caller指令 的 dest cell 的 value</span></span><br><span class="line">      <span class="built_in">bindLocal</span>(kcaller, state, result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> Instruction::Br:</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> Instruction::IndirectBr:</span><br><span class="line"><span class="keyword">case</span> Instruction::Switch:</span><br><span class="line"><span class="keyword">case</span> Instruction::Unreachable:</span><br><span class="line"><span class="keyword">case</span> Instruction::Invoke:</span><br><span class="line"><span class="keyword">case</span> Instruction::Call:</span><br><span class="line"><span class="keyword">case</span> Instruction::PHI:</span><br><span class="line"><span class="keyword">case</span> Instruction::Select:</span><br><span class="line"><span class="keyword">case</span> Instruction::VAArg:</span><br><span class="line"><span class="keyword">case</span> Instruction::Add:</span><br><span class="line"><span class="keyword">case</span> Instruction::Sub:</span><br><span class="line"><span class="keyword">case</span> Instruction::Mul:</span><br><span class="line"><span class="keyword">case</span> Instruction::UDiv:</span><br><span class="line"><span class="keyword">case</span> Instruction::SDiv:</span><br><span class="line"><span class="keyword">case</span> Instruction::URem:</span><br><span class="line"><span class="keyword">case</span> Instruction::SRem:</span><br><span class="line"><span class="keyword">case</span> Instruction::And:</span><br><span class="line"><span class="keyword">case</span> Instruction::Or:</span><br><span class="line"><span class="keyword">case</span> Instruction::Xor:</span><br><span class="line"><span class="keyword">case</span> Instruction::Shl:</span><br><span class="line"><span class="keyword">case</span> Instruction::LShr:</span><br><span class="line"><span class="keyword">case</span> Instruction::AShr:</span><br><span class="line"><span class="keyword">case</span> Instruction::ICmp:</span><br><span class="line"><span class="keyword">case</span> Instruction::Alloca:</span><br><span class="line"><span class="keyword">case</span> Instruction::Load:</span><br><span class="line"><span class="keyword">case</span> Instruction::Store:</span><br><span class="line"><span class="keyword">case</span> Instruction::GetElementPtr:</span><br><span class="line"><span class="keyword">case</span> Instruction::Trunc:</span><br><span class="line"><span class="keyword">case</span> Instruction::ZExt:</span><br><span class="line"><span class="keyword">case</span> Instruction::SExt:</span><br><span class="line"><span class="keyword">case</span> Instruction::IntToPtr:</span><br><span class="line"><span class="keyword">case</span> Instruction::PtrToInt:</span><br><span class="line"><span class="keyword">case</span> Instruction::BitCast:</span><br><span class="line"><span class="keyword">case</span> Instruction::FNeg:</span><br><span class="line"><span class="keyword">case</span> Instruction::FAdd:</span><br><span class="line"><span class="keyword">case</span> Instruction::FSub:</span><br><span class="line"><span class="keyword">case</span> Instruction::FMul:</span><br><span class="line"><span class="keyword">case</span> Instruction::FDiv:</span><br><span class="line"><span class="keyword">case</span> Instruction::FRem:</span><br><span class="line"><span class="keyword">case</span> Instruction::FPTrunc:</span><br><span class="line"><span class="keyword">case</span> Instruction::FPExt:</span><br><span class="line"><span class="keyword">case</span> Instruction::FPToUI:</span><br><span class="line"><span class="keyword">case</span> Instruction::FPToSI:</span><br><span class="line"><span class="keyword">case</span> Instruction::UIToFP:</span><br><span class="line"><span class="keyword">case</span> Instruction::SIToFP:</span><br><span class="line"><span class="keyword">case</span> Instruction::FCmp:</span><br><span class="line"><span class="keyword">case</span> Instruction::InsertValue:</span><br><span class="line"><span class="keyword">case</span> Instruction::ExtractValue:</span><br><span class="line"><span class="keyword">case</span> Instruction::Fence:</span><br><span class="line"><span class="keyword">case</span> Instruction::InsertElement:</span><br><span class="line"><span class="keyword">case</span> Instruction::ExtractElement:</span><br><span class="line"><span class="keyword">case</span> Instruction::ShuffleVector:</span><br><span class="line"><span class="keyword">case</span> Instruction::Resume:</span><br><span class="line"><span class="keyword">case</span> Instruction::LandingPad:</span><br><span class="line"><span class="keyword">case</span> Instruction::AtomicRMW:</span><br><span class="line"><span class="keyword">case</span> Instruction::AtomicCmpXchg:</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>software-test</category>
      </categories>
      <tags>
        <tag>Program Analysis</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtIO 规范</title>
    <url>/2024/04/16/virtio-note/</url>
    <content><![CDATA[<p>VirtIO 是一种通用的半虚拟化的解决方案，它定义了一组规范：只要 Guest 和 Host 按照此规范进行数据操作，就可以使虚拟机绕过内核空间而直接和用户空间的进程间通信，以此达到提高 IO 性能的目的。</p>
<p>众所周知，真实硬件具有复杂的细节，模拟起来不仅复杂且效率低，当一个 Guest 访问到完全虚拟设备的寄存器 or 内存时，会 trap 到 Hypervisor 的设备模拟代码中，这一过程需要虚拟机内、外的多次切换过程，效率很低。
VirtIO 极大地简化了设备的实现，当我们只需要最基本的内外传输的功能时，VirtIO 是很好的选择。</p>
<p>VirtIO 属于半虚拟化的一种，即 Guest 知道自己是虚拟出来的。</p>
<p>VirtIO 规范目前由 OASIS 维护，目前已经更新到 virtio v1.3 版本。
VirtIO 规范中定义了多种实现方式，最常见的是 VirtIO over PCI，也有 VirtIO over MMIO 和 VirtIO over Channel I/O。</p>
<h2 id="virtio-架构"><a class="header-anchor-1" href="#virtio-架构">#</a>VirtIO 架构</h2>
<p><img src="arch.png" alt="virtio-arch" /></p>
<p>VirtIO 支持虚拟多种类型的设备，例如块设备(virtio_blk)，网卡设备（virtio_net），SCSI 总线设备(virtio_scsi)等。</p>
<p>位于 Guest 中的部分（即虚拟出来的设备）称为前端。对于 VirtIO 系列设备，Linux 内核中早已有对应的驱动支持。</p>
<p>位于 Host 上的部分为后端。源码位于 Hypervisor 中。</p>
<p>不管是哪种类型的设备，底层的数据通道都是一样的。</p>
<h2 id="前端-virtio-设备"><a class="header-anchor-1" href="#前端-virtio-设备">#</a>前端 VirtIO 设备</h2>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">virtio_device</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">list_head</span> <span class="title">vqs</span>;</span> <span class="comment">// VQ</span></span><br><span class="line">    u64 features;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><code>features</code> 是 virtio_driver &amp; virtio_device 同时支持的通信特性，也就是前后端最终协商的通信特性。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">virtio_driver</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> (*probe)(<span class="keyword">struct</span> virtio_device *dev);</span><br><span class="line">    <span class="type">int</span> (*scan)(<span class="keyword">struct</span> virtio_device *dev);</span><br><span class="line">    <span class="type">int</span> (*remove)(<span class="keyword">struct</span> virtio_device *dev);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>设备加载和注销等</p>
<h2 id="virtqueue（vq）"><a class="header-anchor-1" href="#virtqueue（vq）">#</a>VirtQueue（VQ）</h2>
<p>Host 和 Guest 之前通信的抽象数据通道称为 VirtQueue，具有双向数据收发的能力。</p>
<p>根据实际设备收发速率，可能存在一个或者多个 VirtQueue。比如 virtio-net 默认创建了两条 VirtQueue。</p>
<p>VQ 创建于 PCI 设备的<code>probe</code>阶段，由 Guest 侧创建，然后把 VQ 的物理地址传递给后端。</p>
<h3 id="virtqueue-add-发送数据"><a class="header-anchor-1" href="#virtqueue-add-发送数据">#</a><code>virtqueue_add()</code> 发送数据</h3>
<p>VQ 发送函数，负责把一个 SG list 放进 VQ。</p>
<h3 id="virtqueue-kick-通知后端"><a class="header-anchor-1" href="#virtqueue-kick-通知后端">#</a><code>virtqueue_kick()</code> 通知后端</h3>
<h2 id="vring"><a class="header-anchor-1" href="#vring">#</a>VRing</h2>
<p>VirtQueue 是一个抽象类，其具体实现是 VRing，即 vring_virtqueue。</p>
<p>VRing 是实际进行数据传输的实现，整体结构包含三部门：Descriptor 表和两个存放<code>Descriptor*</code>的 Ring Buffer。</p>
<p>两个 Ring 分别是 Avail Ring 和 Used Ring，用于双向传递数据。Avail 用于从内向外，Used 用于从外向内，是站在 Host 角度命名的。</p>
<p>每个 Descriptor 描述了一块数据区，主要包含 Guest 缓冲区的物理地址和长度。</p>
<p>Host 会从 Avail Ring 中取 Descriptor，收取 or 填充数据并放入 Used Ring 中。</p>
<h2 id="virtio-net"><a class="header-anchor-1" href="#virtio-net">#</a>virtio-net</h2>
<p>virtio-net 把 VQ 进一步封装成<code>send_queue</code>和<code>receive_queue</code></p>
<p>特定时机会调用<code>try_fill_recv</code>来向<code>receive_queue</code>中填充空 buffer</p>
<h2 id="virtio-blk"><a class="header-anchor-1" href="#virtio-blk">#</a>virtio-blk</h2>
<h2 id="virtio-演进"><a class="header-anchor-1" href="#virtio-演进">#</a>Virtio 演进</h2>
<h3 id="vhost"><a class="header-anchor-1" href="#vhost">#</a>Vhost</h3>
<p>开发者发现，原始的数据通路 Guest – virtio – Hypervisor 后端 – Host 系统调用 – Host 内核，最后一步总是要切换到内核态。</p>
<p>为了省去这个开销，vhost 技术将 Hypervisor 后端数据面放在 Host 内核中，由 Host 的一个内核线程负责处理 IO。</p>
<h3 id="vhost-user"><a class="header-anchor-1" href="#vhost-user">#</a>Vhost-user</h3>
<p>Vhost 需要使用 1:1 的内核线程，不够灵活。</p>
<p>与 Vhost 相反，Vhost-user 将后端数据面放在了用户态进程(e.g., DPDK，SPDK 的 BlobFS)中。</p>
]]></content>
      <categories>
        <category>virtualization</category>
      </categories>
      <tags>
        <tag>虚拟化</tag>
      </tags>
  </entry>
  <entry>
    <title>1032. Sharing</title>
    <url>/2020/12/18/1032/</url>
    <content><![CDATA[<p>寻找最长公共后缀</p>
<p>注意:
边界情况: 两条链没有交集, 其中一条链是另一条链的子链</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _DEBUG</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt; <span class="function"><span class="type">void</span> <span class="title">ERR</span><span class="params">(T x, string name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;[DEBUG]&#123;&quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot;&#125; = &quot;</span> &lt;&lt; x &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#    <span class="keyword">define</span> debug(x) ERR(x, #x)</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta">#    <span class="keyword">define</span> debug(...) 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">map&lt;string, pair&lt;<span class="type">char</span>, string&gt;&gt; M;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _DEBUG</span></span><br><span class="line">    <span class="built_in">freopen</span>(__FILE__ <span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, stdin);</span><br><span class="line">    <span class="comment">// freopen(__FILE__ &quot;.out&quot;, &quot;w&quot;, stdout);</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    string w1, w2;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; w1 &gt;&gt; w2 &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        string a, b;</span><br><span class="line">        <span class="type">char</span> c;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; c &gt;&gt; b;</span><br><span class="line">        M[a] = <span class="built_in">make_pair</span>(c, b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    stack&lt;string&gt; s1, s2;</span><br><span class="line">    <span class="built_in">debug</span>(<span class="string">&quot;s1&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (string addr = w1; addr != <span class="string">&quot;-1&quot;</span>; addr = M[addr].second) &#123;</span><br><span class="line">        s<span class="number">1.</span><span class="built_in">push</span>(addr);</span><br><span class="line">        <span class="built_in">debug</span>(addr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">debug</span>(<span class="string">&quot;s2&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (string addr = w2; addr != <span class="string">&quot;-1&quot;</span>; addr = M[addr].second) &#123;</span><br><span class="line">        s<span class="number">2.</span><span class="built_in">push</span>(addr);</span><br><span class="line">        <span class="built_in">debug</span>(addr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    string top = <span class="string">&quot;-1&quot;</span>;</span><br><span class="line">    <span class="keyword">while</span> (s<span class="number">1.</span><span class="built_in">size</span>() &amp;&amp; s<span class="number">2.</span><span class="built_in">size</span>() &amp;&amp; s<span class="number">1.</span><span class="built_in">top</span>() == s<span class="number">2.</span><span class="built_in">top</span>()) &#123;</span><br><span class="line">        top = s<span class="number">1.</span><span class="built_in">top</span>();</span><br><span class="line">        <span class="built_in">debug</span>(top);</span><br><span class="line">        s<span class="number">1.</span><span class="built_in">pop</span>();</span><br><span class="line">        s<span class="number">2.</span><span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; top &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>PTA</category>
      </categories>
  </entry>
  <entry>
    <title>1035. Password</title>
    <url>/2021/01/13/1035/</url>
    <content><![CDATA[<p>水题</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> mod = <span class="number">0</span>;</span><br><span class="line">    ostringstream out;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        string name, pass;</span><br><span class="line">        <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        cin &gt;&gt; name &gt;&gt; pass;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;&amp;ch : pass) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (ch) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;l&#x27;</span>: ch = <span class="string">&#x27;L&#x27;</span>; flag = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>: ch = <span class="string">&#x27;@&#x27;</span>; flag = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>: ch = <span class="string">&#x27;%&#x27;</span>; flag = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;O&#x27;</span>: ch = <span class="string">&#x27;o&#x27;</span>; flag = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>: <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            mod++;</span><br><span class="line">            out &lt;&lt; name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; pass &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mod) &#123;</span><br><span class="line">        cout &lt;&lt; mod &lt;&lt; endl &lt;&lt; out.<span class="built_in">str</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;There &quot;</span> &lt;&lt; (n == <span class="number">1</span> ? <span class="string">&quot;is&quot;</span> : <span class="string">&quot;are&quot;</span>) &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; n &lt;&lt; <span class="string">&quot; account&quot;</span></span><br><span class="line">             &lt;&lt; (n == <span class="number">1</span> ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;s&quot;</span>) &lt;&lt; <span class="string">&quot; and no account is modified&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>PTA</category>
      </categories>
  </entry>
  <entry>
    <title>1036. Boys vs Girls</title>
    <url>/2021/01/11/1036/</url>
    <content><![CDATA[<p>送分题</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> &#123;</span><br><span class="line">    string name;</span><br><span class="line">    string major;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    student s, male_min, female_max;</span><br><span class="line">    <span class="type">int</span> score, male_score_min = <span class="number">101</span>, female_score_max = <span class="number">-1</span>;</span><br><span class="line">    string gender;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; s.name &gt;&gt; gender &gt;&gt; s.major &gt;&gt; score;</span><br><span class="line">        <span class="keyword">if</span> (gender == <span class="string">&quot;M&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (score &lt; male_score_min) &#123;</span><br><span class="line">                male_min = s;</span><br><span class="line">                male_score_min = score;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (score &gt; female_score_max) &#123;</span><br><span class="line">                female_max = s;</span><br><span class="line">                female_score_max = score;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (female_score_max != <span class="number">-1</span>) &#123;</span><br><span class="line">        cout &lt;&lt; female_max.name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; female_max.major &lt;&lt; endl;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Absent&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (male_score_min != <span class="number">101</span>) &#123;</span><br><span class="line">        cout &lt;&lt; male_min.name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; male_min.major &lt;&lt; endl;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Absent&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (female_score_max != <span class="number">-1</span> &amp;&amp; male_score_min != <span class="number">101</span>) &#123;</span><br><span class="line">        cout &lt;&lt; female_score_max - male_score_min &lt;&lt; endl;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;NA&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>PTA</category>
      </categories>
  </entry>
  <entry>
    <title>1046. Shortest Distance</title>
    <url>/2021/01/08/1046/</url>
    <content><![CDATA[<h2 id="题意"><a class="header-anchor-1" href="#题意">#</a>题意</h2>
<p>仅由一个环的图, 求任意两个节点之间的最短距离</p>
<h2 id="思路"><a class="header-anchor-1" href="#思路">#</a>思路</h2>
<p>将环剪开成一条线, 记录每个节点距离起始节点的距离, 查询时取两个方向的距离的最小值</p>
<h2 id="感想"><a class="header-anchor-1" href="#感想">#</a>感想</h2>
<p>意外的很简单</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> D[<span class="number">100001</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _DEBUG</span></span><br><span class="line">    <span class="built_in">freopen</span>(__FILE__ <span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, stdin);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> dist;</span><br><span class="line">        cin &gt;&gt; dist;</span><br><span class="line">        D[i + <span class="number">1</span>] = D[i] + dist;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> len = D[n];</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> q;</span><br><span class="line">    cin &gt;&gt; q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; q; i++) &#123;</span><br><span class="line">        <span class="type">int</span> x, y;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        <span class="keyword">if</span> (x &gt; y) &#123;</span><br><span class="line">            <span class="built_in">swap</span>(x, y);</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="built_in">min</span>(D[y - <span class="number">1</span>] - D[x - <span class="number">1</span>], len - D[y - <span class="number">1</span>] + D[x - <span class="number">1</span>]) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>PTA</category>
      </categories>
  </entry>
  <entry>
    <title>1048. Find Coins</title>
    <url>/2021/01/14/1048/</url>
    <content><![CDATA[<p>寻找{(x,y)|x+y=m,x,y∈S}</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; S;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        S[x]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> minx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;&amp;k : S) &#123;</span><br><span class="line">        <span class="type">int</span> x = k.first;</span><br><span class="line">        <span class="type">int</span> y = m - x;</span><br><span class="line">        <span class="keyword">if</span> (x &lt; y &amp;&amp; S.<span class="built_in">find</span>(y) != S.<span class="built_in">end</span>() || x == y &amp;&amp; S[x] &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!minx || x &lt; minx)</span><br><span class="line">                minx = x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (minx) &#123;</span><br><span class="line">        cout &lt;&lt; minx &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; m - minx &lt;&lt; endl;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;No Solution&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>PTA</category>
      </categories>
  </entry>
  <entry>
    <title>1055. The World&#39;s Richest</title>
    <url>/2021/01/22/1055/</url>
    <content><![CDATA[<h2 id="题意"><a class="header-anchor-1" href="#题意">#</a>题意</h2>
<p>数据表按照某一列筛选后按另一列排序输出, 重复多次</p>
<h2 id="优化"><a class="header-anchor-1" href="#优化">#</a>优化</h2>
<p>按照输出的最大数量缩减原数据表</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">person</span> &#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">int</span> worth;</span><br><span class="line">    <span class="built_in">person</span>(<span class="type">const</span> string &amp;name, <span class="type">const</span> <span class="type">int</span> &amp;age, <span class="type">const</span> <span class="type">int</span> &amp;worth)</span><br><span class="line">        : <span class="built_in">name</span>(name), <span class="built_in">age</span>(age), <span class="built_in">worth</span>(worth)</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;person&gt; P;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        string name;</span><br><span class="line">        <span class="type">int</span> age;</span><br><span class="line">        <span class="type">int</span> worth;</span><br><span class="line">        cin &gt;&gt; name &gt;&gt; age &gt;&gt; worth;</span><br><span class="line">        P.<span class="built_in">emplace_back</span>(name, age, worth);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span>(P.<span class="built_in">begin</span>(), P.<span class="built_in">end</span>(), [](<span class="type">const</span> person &amp;p1, <span class="type">const</span> person &amp;p2) &#123;</span><br><span class="line">        <span class="built_in">return</span> (p<span class="number">1.</span>worth != p<span class="number">2.</span>worth ?</span><br><span class="line">                    p<span class="number">1.</span>worth &gt; p<span class="number">2.</span>worth :</span><br><span class="line">                    (p<span class="number">1.</span>age != p<span class="number">2.</span>age ? p<span class="number">1.</span>age &lt; p<span class="number">2.</span>age : p<span class="number">1.</span>name &lt; p<span class="number">2.</span>name));</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    vector&lt;person&gt; P1;</span><br><span class="line">    unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; AgeCount;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (AgeCount[P[i].age] &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">            AgeCount[P[i].age]++;</span><br><span class="line">            P<span class="number">1.</span><span class="built_in">emplace_back</span>(P[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; k; i++) &#123;</span><br><span class="line">        <span class="type">int</span> m, amin, amax, count = <span class="number">0</span>;</span><br><span class="line">        cin &gt;&gt; m &gt;&gt; amin &gt;&gt; amax;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;&amp;p : P1) &#123;</span><br><span class="line">            <span class="keyword">if</span> (p.age &gt;= amin &amp;&amp; p.age &lt;= amax) &#123;</span><br><span class="line">                cout &lt;&lt; p.name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; p.age &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; p.worth &lt;&lt; endl;</span><br><span class="line">                count++;</span><br><span class="line">                <span class="keyword">if</span> (count &gt;= m)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;None&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>PTA</category>
      </categories>
  </entry>
  <entry>
    <title>1063. Set Similarity</title>
    <url>/2020/12/25/1063/</url>
    <content><![CDATA[<p>给出n个集合和k次查询, 计算集合相似度:</p>
<blockquote>
<p>集合相似度 = 交集元素数量 / 并集元素数量</p>
</blockquote>
<p>思路: 重复查询缓存结果</p>
<p>tips:</p>
<ul>
<li>C++ STL中有<code>set_intersection</code>, <code>set_union</code>, <code>set_difference</code>可以直接使用</li>
<li>insert_iterator<Container>(Container container, Iterator iter)可以创建一个&quot;自动插入迭代器&quot;, 将对迭代器的copy(to)操作转化为插入操作</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">set&lt;<span class="type">int</span>&gt; S[<span class="number">50</span>];</span><br><span class="line"><span class="type">float</span> F[<span class="number">50</span>][<span class="number">50</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">compare</span><span class="params">(<span class="type">int</span> _a, <span class="type">int</span> _b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (F[_a][_b]) &#123;</span><br><span class="line">        <span class="keyword">return</span> F[_a][_b];</span><br><span class="line">    &#125;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; &amp;a = S[_a], &amp;b = S[_b];</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; U, I;</span><br><span class="line">    <span class="built_in">set_intersection</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>(), b.<span class="built_in">begin</span>(), b.<span class="built_in">end</span>(), insert_iterator&lt;set&lt;<span class="type">int</span>&gt;&gt;(I, I.<span class="built_in">begin</span>()));</span><br><span class="line">    <span class="built_in">set_union</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>(), b.<span class="built_in">begin</span>(), b.<span class="built_in">end</span>(), insert_iterator&lt;set&lt;<span class="type">int</span>&gt;&gt;(U, U.<span class="built_in">begin</span>()));</span><br><span class="line">    <span class="type">float</span> res = <span class="built_in">static_cast</span>&lt;<span class="type">float</span>&gt;(I.<span class="built_in">size</span>()) / U.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">if</span> (res == <span class="number">0</span>) res = <span class="number">0.0001F</span>;</span><br><span class="line">    <span class="keyword">return</span> F[_a][_b] = F[_b][_a] = res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; s; j++) &#123;</span><br><span class="line">            <span class="type">int</span> x;</span><br><span class="line">            cin &gt;&gt; x;</span><br><span class="line">            S[i].<span class="built_in">insert</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> k;</span><br><span class="line">    cin &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; k; i++) &#123;</span><br><span class="line">        <span class="type">int</span> a, b;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.1f%%\n&quot;</span>, <span class="number">100</span> * <span class="built_in">compare</span>(a - <span class="number">1</span>, b - <span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>PTA</category>
      </categories>
  </entry>
  <entry>
    <title>1093. Count PAT&#39;s</title>
    <url>/2021/01/10/1093/</url>
    <content><![CDATA[<h2 id="题意"><a class="header-anchor-1" href="#题意">#</a>题意</h2>
<p>计算<code>PAT</code>字串个数</p>
<h2 id="思路"><a class="header-anchor-1" href="#思路">#</a>思路</h2>
<p>动态规划?</p>
<table>
<thead>
<tr>
<th>增加一个</th>
<th><code>PAT</code>个数</th>
<th><code>PA</code>个数</th>
<th><code>P</code>个数</th>
</tr>
</thead>
<tbody>
<tr>
<td>P</td>
<td>不变</td>
<td>不变</td>
<td>增加1</td>
</tr>
<tr>
<td>A</td>
<td>不变</td>
<td>增加前面的<code>P</code>的个数</td>
<td>不变</td>
</tr>
<tr>
<td>T</td>
<td>增加前面的<code>PA</code>字串的个数</td>
<td>不变</td>
<td>不变</td>
</tr>
</tbody>
</table>
<h2 id="代码"><a class="header-anchor-1" href="#代码">#</a>代码</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="type">int</span> n = s.<span class="built_in">size</span>();</span><br><span class="line">    ll p = <span class="number">0</span>, pa = <span class="number">0</span>, pat = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (s[i]) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;P&#x27;</span>: p++; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>: pa = (pa + p) % <span class="number">1000000007</span>; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;T&#x27;</span>: pat = (pat + pa) % <span class="number">1000000007</span>; <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; pat % <span class="number">1000000007</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>PTA</category>
      </categories>
  </entry>
  <entry>
    <title>1098. Insertion or Heap Sort</title>
    <url>/2020/12/19/1098/</url>
    <content><![CDATA[<p>根据排序的中间结果判断使用的插入排序还是堆排序, 并给出下一轮迭代的中间结果</p>
<p>堆排序: 先逐步构造一个大顶堆, 再每次从堆中取出最大的元素放到堆后面</p>
<p>思路:
插入排序的特点: 前面递增, 后面和原数组一样</p>
<p>进行1次插排: sort
进行1次堆排: pop_heap</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">100</span>], b[<span class="number">100</span>];</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; b[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> p = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (p &lt; n &amp;&amp; b[p - <span class="number">1</span>] &lt;= b[p])</span><br><span class="line">        p++;</span><br><span class="line">    <span class="type">int</span> index = p;</span><br><span class="line">    <span class="keyword">while</span> (p &lt; n &amp;&amp; a[p] == b[p])</span><br><span class="line">        p++;</span><br><span class="line">    <span class="keyword">if</span> (p == n) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Insertion Sort&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">sort</span>(b, b + index + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i != <span class="number">0</span>)</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            cout &lt;&lt; b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Heap Sort&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="type">int</span> p = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (p &gt; <span class="number">1</span> &amp;&amp; b[p] &gt;= b[<span class="number">1</span>])</span><br><span class="line">            p--;</span><br><span class="line">        <span class="built_in">pop_heap</span>(b, b + p + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i != <span class="number">0</span>)</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            cout &lt;&lt; b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _DEBUG</span></span><br><span class="line">    <span class="built_in">freopen</span>(__FILE__ <span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, stdin);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>PTA</category>
      </categories>
  </entry>
  <entry>
    <title>1099. Build A Binary Search Tree</title>
    <url>/2020/12/16/1099/</url>
    <content><![CDATA[<p>给出二叉树结构和节点的值列表, 将值填入二叉树中, 输出层次序遍历的结果</p>
<p>考点: 二叉树的直接后继</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _DEBUG</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt; <span class="function"><span class="type">void</span> <span class="title">ERR</span><span class="params">(T x, string name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;[DEBUG]&#123;&quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot;&#125; = &quot;</span> &lt;&lt; x &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#    <span class="keyword">define</span> debug(x) ERR(x, #    x)</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta">#    <span class="keyword">define</span> debug(...) 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="type">int</span> val;</span><br><span class="line">    <span class="type">int</span> left, right, parent;</span><br><span class="line">&#125; N[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _DEBUG</span></span><br><span class="line">    <span class="built_in">freopen</span>(__FILE__ <span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, stdin);</span><br><span class="line">    <span class="comment">// freopen(__FILE__ &quot;.out&quot;, &quot;w&quot;, stdout);</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    <span class="type">int</span> first = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    N[<span class="number">0</span>].parent = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> l, r;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        N[i].left = l;</span><br><span class="line">        N[l].parent = i;</span><br><span class="line">        N[i].right = r;</span><br><span class="line">        N[r].parent = i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; vals;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> val;</span><br><span class="line">        cin &gt;&gt; val;</span><br><span class="line">        vals.<span class="built_in">push_back</span>(val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(vals.<span class="built_in">begin</span>(), vals.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (N[p].left != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (N[p].left != <span class="number">-1</span>)</span><br><span class="line">            p = N[p].left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (p != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="built_in">debug</span>(p);</span><br><span class="line">        N[p].val = vals.<span class="built_in">front</span>();</span><br><span class="line">        vals.<span class="built_in">erase</span>(vals.<span class="built_in">begin</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (N[p].right != <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="comment">// right down</span></span><br><span class="line">            p = N[p].right;</span><br><span class="line">            <span class="keyword">while</span> (N[p].left != <span class="number">-1</span>) &#123;</span><br><span class="line">                p = N[p].left;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (N[p].parent != <span class="number">-1</span> &amp;&amp; N[N[p].parent].left == p) &#123;</span><br><span class="line">            <span class="comment">// right up</span></span><br><span class="line">            p = N[p].parent;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (N[p].parent != <span class="number">-1</span> &amp;&amp; N[N[p].parent].right == p) &#123;</span><br><span class="line">                p = N[p].parent;</span><br><span class="line">            &#125;</span><br><span class="line">            p = N[p].parent;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; Q;</span><br><span class="line">    Q.<span class="built_in">push</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">while</span> (Q.<span class="built_in">size</span>()) &#123;</span><br><span class="line">        <span class="type">int</span> top = Q.<span class="built_in">front</span>();</span><br><span class="line">        Q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span> (!first)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            first = <span class="number">0</span>;</span><br><span class="line">        cout &lt;&lt; N[top].val;</span><br><span class="line">        <span class="keyword">if</span> (N[top].left != <span class="number">-1</span>)</span><br><span class="line">            Q.<span class="built_in">push</span>(N[top].left);</span><br><span class="line">        <span class="keyword">if</span> (N[top].right != <span class="number">-1</span>)</span><br><span class="line">            Q.<span class="built_in">push</span>(N[top].right);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>PTA</category>
      </categories>
  </entry>
  <entry>
    <title>1104. Sum of Number Segments</title>
    <url>/2021/01/07/1104/</url>
    <content><![CDATA[<p>数学题</p>
<h2 id="大意"><a class="header-anchor-1" href="#大意">#</a>大意</h2>
<p>给定一个数组, 计算该数组所有子序列的和的和, 即</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>S</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mi>i</mi></mrow><mi>n</mi></munderover><mrow><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mi>i</mi></mrow><mi>j</mi></munderover><msub><mi>a</mi><mi>k</mi></msub></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mi>i</mi></mrow><mi>n</mi></munderover><mrow><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mi>i</mi></mrow><mi>j</mi></munderover><msub><mi>a</mi><mi>k</mi></msub></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
S&amp;=\sum_{i=1}^{n}\sum_{j=i}^{n}{\sum_{k=i}^{j}{a_{k}}}
\\&amp;=\sum_{i=1}^{n}\sum_{j=i}^{n}{\sum_{k=i}^{j}{a_{k}}}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.1451em;vertical-align:-3.3226em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8226em;"><span style="top:-5.8226em;"><span class="pstrut" style="height:3.8588em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.8588em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3226em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8226em;"><span style="top:-5.8226em;"><span class="pstrut" style="height:3.8588em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8588em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3471em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.8588em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8588em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3471em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3226em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h2 id="求解"><a class="header-anchor-1" href="#求解">#</a>求解</h2>
<p>对于任意<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>∈</mo><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">]</mo></mrow></mrow><annotation encoding="application/x-tex">x\in{[1,n]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">]</span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">a_{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>被计算的次数</p>
<p>就等于集合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>j</mi><mo>≤</mo><mi>n</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{(i,j)|1 \le i \le j \le n\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mord">∣1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7955em;vertical-align:-0.136em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">}</span></span></span></span>中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>≤</mo><mi>x</mi><mo>≤</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i \le x \le j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7955em;vertical-align:-0.136em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>的次数</p>
<p>即</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>C</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>x</mi></munderover><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mi>x</mi></mrow><mi>n</mi></munderover><mn>1</mn></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>x</mi></munderover><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
C_{x}&amp;=\sum_{i=1}^{x}{\sum_{j=x}^{n}{1}} \\
&amp;=\sum_{i=1}^{x}{(n-x+1)} \\
&amp;=x(n-x+1)
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.0942em;vertical-align:-3.7971em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.2971em;"><span style="top:-6.2971em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.9319em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"></span></span><span style="top:-0.5143em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.7971em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.2971em;"><span style="top:-6.2971em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">1</span></span></span></span></span><span style="top:-2.9319em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span style="top:-0.5143em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.7971em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>总和</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>S</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><msub><mi>C</mi><mi>i</mi></msub><msub><mi>a</mi><mi>i</mi></msub></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
S&amp;=\sum_{i=1}^{n}{C_{i}a_{i}}\\
&amp;=\sum_{i=1}^{n}{(i(n-i+1)a_{i})}\\
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.4581em;vertical-align:-2.9791em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.4791em;"><span style="top:-5.4791em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.9791em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.4791em;"><span style="top:-5.4791em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.9791em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>实测: 高精度?</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> res = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">double</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        res += (<span class="type">long</span> <span class="type">long</span>)(<span class="number">1000</span> * x) * i * (n - i + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>, res / <span class="number">1000.0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>PTA</category>
      </categories>
  </entry>
  <entry>
    <title>1115. Counting Nodes in a BST</title>
    <url>/2020/12/15/1115/</url>
    <content><![CDATA[<p>按给定序列构造一个二叉搜索树, 分别计算最低两层的节点数量</p>
<p>思路: 如题, 考基本功</p>
<p>注意: 一种新奇的写法, 获取倒数第n个元素 (想到了Python是不是XD)</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// vector&lt;int&gt; x;</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">cout &lt;&lt; x.<span class="built_in">end</span>()[-n] &lt;&lt; endl;</span><br></pre></td></tr></table></figure>
<p>代码(有内存泄漏):</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="type">int</span> val;</span><br><span class="line">    node *left, *right, *parent;</span><br><span class="line">&#125; root;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!root.parent) &#123;</span><br><span class="line">        <span class="comment">// is the first root</span></span><br><span class="line">        root.parent = &amp;root;</span><br><span class="line">        root.val = x;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    node *p = &amp;root;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x &lt;= p-&gt;val) &#123;</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;left) &#123;</span><br><span class="line">                p = p-&gt;left;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;right) &#123;</span><br><span class="line">                p = p-&gt;right;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (x &gt; p-&gt;val) &#123;</span><br><span class="line">        p-&gt;right = <span class="keyword">new</span> <span class="built_in">node</span>();</span><br><span class="line">        p-&gt;right-&gt;val = x;</span><br><span class="line">        p-&gt;right-&gt;parent = p;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        p-&gt;left = <span class="keyword">new</span> <span class="built_in">node</span>();</span><br><span class="line">        p-&gt;left-&gt;val = x;</span><br><span class="line">        p-&gt;left-&gt;parent = p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">trav</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    queue&lt;node *&gt; Q;</span><br><span class="line">    <span class="keyword">if</span> (root.parent) &#123;</span><br><span class="line">        Q.<span class="built_in">push</span>(&amp;root);</span><br><span class="line">    &#125;</span><br><span class="line">    Q.<span class="built_in">push</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> lcount = <span class="number">0</span>;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; counts;</span><br><span class="line">    <span class="keyword">while</span> (Q.<span class="built_in">size</span>() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        node *x = Q.<span class="built_in">front</span>();</span><br><span class="line">        Q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            counts.<span class="built_in">push_back</span>(lcount);</span><br><span class="line">            lcount = <span class="number">0</span>;</span><br><span class="line">            Q.<span class="built_in">push</span>(<span class="literal">nullptr</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        lcount++;</span><br><span class="line">        <span class="keyword">if</span> (x-&gt;left)</span><br><span class="line">            Q.<span class="built_in">push</span>(x-&gt;left);</span><br><span class="line">        <span class="keyword">if</span> (x-&gt;right)</span><br><span class="line">            Q.<span class="built_in">push</span>(x-&gt;right);</span><br><span class="line">    &#125;</span><br><span class="line">    counts.<span class="built_in">push_back</span>(lcount);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> back = counts.<span class="built_in">size</span>() ? counts.<span class="built_in">back</span>() : <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> back2 = counts.<span class="built_in">size</span>() &gt; <span class="number">2</span> ? counts.<span class="built_in">end</span>()[<span class="number">-2</span>] : <span class="number">0</span>;</span><br><span class="line">    cout &lt;&lt; back &lt;&lt; <span class="string">&quot; + &quot;</span> &lt;&lt; back2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; back + back2 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        <span class="built_in">insert</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">trav</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>PTA</category>
      </categories>
  </entry>
  <entry>
    <title>1109. Group Photo</title>
    <url>/2021/01/22/1109/</url>
    <content><![CDATA[<h2 id="题意"><a class="header-anchor-1" href="#题意">#</a>题意</h2>
<ol>
<li>将N个人按照身高排成K行</li>
<li>每行N/K个人,</li>
<li>后排的人比前排的人高</li>
<li>每一排之中, 最高的人在中间, 然后依次在左,右排列</li>
<li>相同身高的人按字典序排列</li>
</ol>
<h2 id="思路"><a class="header-anchor-1" href="#思路">#</a>思路</h2>
<p>用deque模拟一排</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> first = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">typedef</span> pair&lt;string, <span class="type">int</span>&gt; person;</span><br><span class="line">    vector&lt;person&gt; P;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        string name;</span><br><span class="line">        <span class="type">int</span> height;</span><br><span class="line">        cin &gt;&gt; name &gt;&gt; height;</span><br><span class="line">        P.<span class="built_in">emplace_back</span>(name, height);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span>(P.<span class="built_in">begin</span>(), P.<span class="built_in">end</span>(), [](<span class="type">const</span> person &amp;p1, <span class="type">const</span> person &amp;p2) &#123;</span><br><span class="line">        <span class="keyword">return</span> p<span class="number">1.</span>second != p<span class="number">2.</span>second ? p<span class="number">1.</span>second &gt; p<span class="number">2.</span>second :</span><br><span class="line">                                        p<span class="number">1.f</span>irst &lt; p<span class="number">2.f</span>irst;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> rowcount = n / k;</span><br><span class="line">    <span class="type">int</span> rest = n % k;</span><br><span class="line">    deque&lt;<span class="type">int</span>&gt; row;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, left = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (left)</span><br><span class="line">            row.<span class="built_in">push_back</span>(i);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            row.<span class="built_in">push_front</span>(i);</span><br><span class="line">        left = <span class="number">1</span> - left;</span><br><span class="line">        <span class="keyword">if</span> (row.<span class="built_in">size</span>() == rowcount + rest) &#123;</span><br><span class="line">            rest = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;&amp;i : row) &#123;</span><br><span class="line">                cout &lt;&lt; (first ? <span class="string">&quot;&quot;</span> : <span class="string">&quot; &quot;</span>) &lt;&lt; P[i].first;</span><br><span class="line">                first = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            first = <span class="number">1</span>;</span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line">            row.<span class="built_in">clear</span>();</span><br><span class="line">            left = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;&amp;i : row) &#123;</span><br><span class="line">        cout &lt;&lt; (first ? <span class="string">&quot;&quot;</span> : <span class="string">&quot; &quot;</span>) &lt;&lt; P[i].first;</span><br><span class="line">        first = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>PTA</category>
      </categories>
  </entry>
  <entry>
    <title>1123. Is It a Complete AVL Tree</title>
    <url>/2020/12/18/1123/</url>
    <content><![CDATA[<h2 id="题目"><a class="header-anchor-1" href="#题目">#</a>题目</h2>
<p>按输入序列构造AVL树, 输出层次序遍历的结果, 和AVL树是否为完全二叉树</p>
<h2 id="一些小技巧"><a class="header-anchor-1" href="#一些小技巧">#</a>一些小技巧:</h2>
<h3 id="1-树的初始化问题"><a class="header-anchor-1" href="#1-树的初始化问题">#</a>1. 树的初始化问题</h3>
<p>我们可以让insert函数返回插入后新的树根(从而可以递归调用), 调用时采用 <code>node = insert(node, val)</code> 的方式, 从而统一了第一个节点和其他节点的处理, 极大地简化了判断逻辑</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">node* <span class="title">insert</span><span class="params">(node* p, <span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!p)&#123;</span><br><span class="line">        p=<span class="keyword">new</span> <span class="built_in">node</span>();</span><br><span class="line">        p-&gt;val=x;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(x&lt;p-&gt;val)&#123;</span><br><span class="line">        p-&gt;left=<span class="built_in">insert</span>(p-&gt;left,x);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        p-&gt;right=<span class="built_in">insert</span>(p-&gt;right,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    node*root=<span class="literal">nullptr</span>;</span><br><span class="line">    root=<span class="built_in">insert</span>(root,<span class="number">1</span>);</span><br><span class="line">    root=<span class="built_in">insert</span>(root,<span class="number">2</span>);</span><br><span class="line">    root=<span class="built_in">insert</span>(root,<span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="体会"><a class="header-anchor-1" href="#体会">#</a>体会:</h2>
<ol>
<li>KISS, 简单的才是最好的</li>
<li>用好递归能节约大量代码</li>
<li>数据结构题不必在性能上过多纠结</li>
</ol>
<h2 id="代码"><a class="header-anchor-1" href="#代码">#</a>代码</h2>
<p>(部分参考自网络)</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="type">int</span> val;</span><br><span class="line">    node *left = <span class="literal">nullptr</span>, *right = <span class="literal">nullptr</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">depth</span><span class="params">(node *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> p ? <span class="number">1</span> + <span class="built_in">max</span>(<span class="built_in">depth</span>(p-&gt;left), <span class="built_in">depth</span>(p-&gt;right)) : <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">node *<span class="title">rr</span><span class="params">(node *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    node *lc = p-&gt;left;</span><br><span class="line">    p-&gt;left = lc-&gt;right;</span><br><span class="line">    lc-&gt;right = p;</span><br><span class="line">    <span class="keyword">return</span> lc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">node *<span class="title">lr</span><span class="params">(node *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    node *rc = p-&gt;right;</span><br><span class="line">    p-&gt;right = rc-&gt;left;</span><br><span class="line">    rc-&gt;left = p;</span><br><span class="line">    <span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">node *<span class="title">lrr</span><span class="params">(node *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p-&gt;left = <span class="built_in">lr</span>(p-&gt;left);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">rr</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">node *<span class="title">rlr</span><span class="params">(node *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p-&gt;right = <span class="built_in">rr</span>(p-&gt;right);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">lr</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">node *<span class="title">insert</span><span class="params">(node *p, <span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!p) &#123;</span><br><span class="line">        p = <span class="keyword">new</span> <span class="built_in">node</span>();</span><br><span class="line">        p-&gt;val = x;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (x &lt; p-&gt;val) &#123;</span><br><span class="line">        p-&gt;left = <span class="built_in">insert</span>(p-&gt;left, x);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">depth</span>(p-&gt;left) - <span class="built_in">depth</span>(p-&gt;right) &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x &lt; p-&gt;left-&gt;val)</span><br><span class="line">                p = <span class="built_in">rr</span>(p);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                p = <span class="built_in">lrr</span>(p);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        p-&gt;right = <span class="built_in">insert</span>(p-&gt;right, x);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">depth</span>(p-&gt;left) - <span class="built_in">depth</span>(p-&gt;right) &lt; <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x &gt; p-&gt;right-&gt;val)</span><br><span class="line">                p = <span class="built_in">lr</span>(p);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                p = <span class="built_in">rlr</span>(p);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">trav</span><span class="params">(node *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> first = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> empty = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> comp = <span class="number">1</span>;</span><br><span class="line">    queue&lt;node *&gt; Q;</span><br><span class="line">    <span class="keyword">if</span> (p) &#123;</span><br><span class="line">        Q.<span class="built_in">push</span>(p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (Q.<span class="built_in">size</span>()) &#123;</span><br><span class="line">        node *top = Q.<span class="built_in">front</span>();</span><br><span class="line">        Q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span> (!first) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        first = <span class="number">0</span>;</span><br><span class="line">        cout &lt;&lt; top-&gt;val;</span><br><span class="line">        <span class="keyword">if</span> (top-&gt;left) &#123;</span><br><span class="line">            <span class="keyword">if</span> (empty) &#123;</span><br><span class="line">                comp = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            Q.<span class="built_in">push</span>(top-&gt;left);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            empty = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (top-&gt;right) &#123;</span><br><span class="line">            <span class="keyword">if</span> (empty) &#123;</span><br><span class="line">                comp = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            Q.<span class="built_in">push</span>(top-&gt;right);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            empty = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl &lt;&lt; (comp ? <span class="string">&quot;YES&quot;</span> : <span class="string">&quot;NO&quot;</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    node *root = <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        root = <span class="built_in">insert</span>(root, x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">trav</span>(root);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>PTA</category>
      </categories>
  </entry>
  <entry>
    <title>1140. Look-and-say Sequence</title>
    <url>/2021/01/10/1140/</url>
    <content><![CDATA[<h2 id="题意"><a class="header-anchor-1" href="#题意">#</a>题意</h2>
<p>求一个数字用行程编码压缩n-1次的结果</p>
<h2 id="代码"><a class="header-anchor-1" href="#代码">#</a>代码</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function">string <span class="title">compress</span><span class="params">(<span class="type">const</span> string &amp;s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n = s.<span class="built_in">size</span>();</span><br><span class="line">    string res;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, count = <span class="number">0</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == n || i &gt; <span class="number">0</span> &amp;&amp; s[i] != s[i - <span class="number">1</span>]) &#123;</span><br><span class="line">            res.<span class="built_in">push_back</span>(s[i - <span class="number">1</span>]);</span><br><span class="line">            res += <span class="built_in">to_string</span>(count);</span><br><span class="line">            count = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; s &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        s = <span class="built_in">compress</span>(s);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>PTA</category>
      </categories>
  </entry>
  <entry>
    <title>1151. LCA in a Binary Tree</title>
    <url>/2021/01/12/1151/</url>
    <content><![CDATA[<p>二叉树上寻找最近公共祖先</p>
<p>需要注意节点的key不一定连续</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="type">int</span> left, right, parent, depth;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">unordered_map&lt;<span class="type">int</span>, node&gt; N;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">build</span><span class="params">(<span class="type">const</span> vector&lt;<span class="type">int</span>&gt;::iterator &amp;preord_b,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> vector&lt;<span class="type">int</span>&gt;::iterator &amp;preord_e,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> vector&lt;<span class="type">int</span>&gt;::iterator &amp;inord_b,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> vector&lt;<span class="type">int</span>&gt;::iterator &amp;inord_e,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">int</span> parent,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">int</span> depth)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (preord_b == preord_e)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> key = *preord_b;</span><br><span class="line">    <span class="keyword">auto</span> inord_mid = <span class="built_in">find</span>(inord_b, inord_e, key);</span><br><span class="line">    <span class="type">int</span> left_len = inord_mid - inord_b;</span><br><span class="line">    N[key].left = <span class="built_in">build</span>(preord_b + <span class="number">1</span>, preord_b + <span class="number">1</span> + left_len, inord_b,</span><br><span class="line">        inord_mid, key, depth + <span class="number">1</span>);</span><br><span class="line">    N[key].right = <span class="built_in">build</span>(preord_b + <span class="number">1</span> + left_len, preord_e, inord_mid + <span class="number">1</span>,</span><br><span class="line">        inord_e, key, depth + <span class="number">1</span>);</span><br><span class="line">    N[key].parent = parent;</span><br><span class="line">    N[key].depth = depth;</span><br><span class="line">    <span class="keyword">return</span> key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lca</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a == b) &#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (N[a].depth &gt; N[b].depth) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">lca</span>(N[a].parent, b);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (N[a].depth &lt; N[b].depth) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">lca</span>(N[b].parent, a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">lca</span>(N[a].parent, N[b].parent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    cin &gt;&gt; m;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">inord</span><span class="params">(n)</span>, <span class="title">preord</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        cin &gt;&gt; inord[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        cin &gt;&gt; preord[i];</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> root =</span><br><span class="line">        <span class="built_in">build</span>(preord.<span class="built_in">begin</span>(), preord.<span class="built_in">end</span>(), inord.<span class="built_in">begin</span>(), inord.<span class="built_in">end</span>(), <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="type">int</span> u, v;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        <span class="type">bool</span> e1 = (N.<span class="built_in">find</span>(u) == N.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">bool</span> e2 = (N.<span class="built_in">find</span>(v) == N.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (e1 &amp;&amp; e2) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;ERROR: &quot;</span> &lt;&lt; u &lt;&lt; <span class="string">&quot; and &quot;</span> &lt;&lt; v &lt;&lt; <span class="string">&quot; are not found.&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e1 || e2) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;ERROR: &quot;</span> &lt;&lt; (e1 ? u : v) &lt;&lt; <span class="string">&quot; is not found.&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> a = <span class="built_in">lca</span>(u, v);</span><br><span class="line">        <span class="keyword">if</span> (a == u || a == v) &#123;</span><br><span class="line">            cout &lt;&lt; a &lt;&lt; <span class="string">&quot; is an ancestor of &quot;</span> &lt;&lt; (a == u ? v : u) &lt;&lt; <span class="string">&quot;.&quot;</span></span><br><span class="line">                 &lt;&lt; endl;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;LCA of &quot;</span> &lt;&lt; u &lt;&lt; <span class="string">&quot; and &quot;</span> &lt;&lt; v &lt;&lt; <span class="string">&quot; is &quot;</span> &lt;&lt; a &lt;&lt; <span class="string">&quot;.&quot;</span></span><br><span class="line">                 &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>PTA</category>
      </categories>
  </entry>
  <entry>
    <title>每日 PTA</title>
    <url>/2020/12/15/index/</url>
    <content><![CDATA[<p>leetcode medium 纯算法题偏少, 准备每日加一道PTA.</p>
<p><strong>目标</strong>: 每天一道PTA甲级 [PAT (Advanced Level) Practice]</p>
<p>题号就roll一个<span class="exturl" data-url="aHR0cDovL2thdHR5LnRvcDo4ODg4L2FwaS9yYW5kP2Zyb209MSZ0bz0xNTY=">随机数<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>PTA</category>
      </categories>
  </entry>
  <entry>
    <title>10. 正则表达式匹配</title>
    <url>/2020/12/16/10/</url>
    <content><![CDATA[<p>实现支持.和*的正则表达式匹配.</p>
<p>思路: 动态规划</p>
<p>用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span>中的前 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个字母能否与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span> 中的前 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 个字母匹配, 按照<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">p[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>是否为*分为两种情况</p>
<p>存在*时的转移方程可以这样考虑:</p>
<ol>
<li>
<p>匹配 s 末尾的一个字符，将该字符扔掉，而该组合还可以继续进行匹配；(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[i-1][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>)</p>
</li>
<li>
<p>不匹配字符，将该组合扔掉，不再进行匹配。(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo>−</mo><mn>2</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[i][j - 2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">]</span></span></span></span>)</p>
</li>
</ol>
<p>最终的状态转移方程:</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>p</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><msup><mo mathvariant="normal">≠</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mo>∗</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mtext> </mtext><mi>a</mi><mi>n</mi><mi>d</mi><mtext> </mtext><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mi>p</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>p</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><msup><mo mathvariant="normal">≠</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mo>∗</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mtext> </mtext><mi>a</mi><mi>n</mi><mi>d</mi><mtext> </mtext><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo mathvariant="normal">≠</mo><mi>p</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo>−</mo><mn>2</mn><mo stretchy="false">]</mo><mtext> </mtext><mi>o</mi><mi>r</mi><mtext> </mtext><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>p</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><msup><mo>=</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mo>∗</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mtext> </mtext><mi>a</mi><mi>n</mi><mi>d</mi><mtext> </mtext><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mi>p</mi><mo stretchy="false">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo>−</mo><mn>2</mn><mo stretchy="false">]</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>p</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><msup><mo>=</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mo>∗</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mtext> </mtext><mi>a</mi><mi>n</mi><mi>d</mi><mtext> </mtext><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo mathvariant="normal">≠</mo><mi>p</mi><mo stretchy="false">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f[i][j] = \begin{cases}
f[i - 1][j - 1], &amp; p[j] \neq &#x27;*&#x27; ~and~ s[i] = p[j] \\
false, &amp; p[j] \neq &#x27;*&#x27; ~and~ s[i] \neq p[j] \\
f[i][j - 2] ~or~ f[i-1][j], &amp; p[j] = &#x27;*&#x27; ~and~ s[i] = p[j-1] \\
f[i][j - 2], &amp; p[j] = &#x27;*&#x27; ~and~ s[i] \neq p[j-1]
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:5.76em;vertical-align:-2.63em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-1.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.592em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.916em" style="width:0.8889em" viewBox="0 0 888.89 916" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V916 H384z M384 0 H504 V916 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.916em" style="width:0.8889em" viewBox="0 0 888.89 916" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V916 H384z M384 0 H504 V916 H384z"/></svg></span></span><span style="top:-5.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.13em;"><span style="top:-5.13em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mpunct">,</span></span></span><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mclose">]</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mpunct">,</span></span></span><span style="top:-0.81em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mclose">]</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.63em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.13em;"><span style="top:-5.13em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8362em;"><span style="top:-3.1473em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mbin">∗</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mspace nobreak"> </span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8362em;"><span style="top:-3.1473em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mbin">∗</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mspace nobreak"> </span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">=</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mbin">∗</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mspace nobreak"> </span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span><span style="top:-0.81em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">=</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mbin">∗</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mspace nobreak"> </span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.63em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>代码:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isMatch</span><span class="params">(string s, string p)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> m = s.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> n = p.<span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">auto</span> matches = [&amp;](<span class="type">int</span> i, <span class="type">int</span> j) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (p[j - <span class="number">1</span>] == <span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> s[i - <span class="number">1</span>] == p[j - <span class="number">1</span>];</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">f</span>(m + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n + <span class="number">1</span>));</span><br><span class="line">        f[<span class="number">0</span>][<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">                <span class="keyword">if</span> (p[j - <span class="number">1</span>] == <span class="string">&#x27;*&#x27;</span>) &#123;</span><br><span class="line">                    f[i][j] |= f[i][j - <span class="number">2</span>];</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">matches</span>(i, j - <span class="number">1</span>)) &#123;</span><br><span class="line">                        f[i][j] |= f[i - <span class="number">1</span>][j];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">matches</span>(i, j)) &#123;</span><br><span class="line">                        f[i][j] |= f[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> f[m][n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>动态规划</tag>
      </tags>
  </entry>
  <entry>
    <title>1202. 交换字符串中的元素</title>
    <url>/2021/01/11/1202/</url>
    <content><![CDATA[<h2 id="题意"><a class="header-anchor-1" href="#题意">#</a>题意</h2>
<p>给定一些可以任意交换位置的组, 求整个字符串的最小字典序</p>
<h2 id="思路"><a class="header-anchor-1" href="#思路">#</a>思路</h2>
<ol>
<li>用并查集把所有组关联在一起</li>
<li>对于每个可交换组, 把所有候选字母依次填入</li>
</ol>
<h2 id="收获"><a class="header-anchor-1" href="#收获">#</a>收获</h2>
<ol>
<li>unordered_map的使用</li>
<li>c++的for-range语法</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span>&amp;[i,group]:groups)&#123;</span><br><span class="line">    <span class="built_in">sort</span>(group.<span class="built_in">begin</span>(),group.<span class="built_in">end</span>(),<span class="built_in">greater</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>重温并查集</li>
</ol>
<h2 id="代码"><a class="header-anchor-1" href="#代码">#</a>代码</h2>
<p>参考官方题解优化完毕</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;parents,rank;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">dj_root</span><span class="params">(<span class="type">int</span> i)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (parents[i]==i ? i : parents[i]=<span class="built_in">dj_root</span>(parents[i]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">dj_union</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">        a=<span class="built_in">dj_root</span>(a);</span><br><span class="line">        b=<span class="built_in">dj_root</span>(b);</span><br><span class="line">        <span class="keyword">if</span>(a==b)<span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (rank[a]&lt;rank[b])<span class="built_in">swap</span>(a,b);</span><br><span class="line">        rank[a]+=rank[b];</span><br><span class="line">        parents[a]=b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">string <span class="title">smallestStringWithSwaps</span><span class="params">(string s, vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; pairs)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=s.<span class="built_in">size</span>();</span><br><span class="line">        parents.<span class="built_in">resize</span>(n);</span><br><span class="line">        rank.<span class="built_in">resize</span>(n,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            parents[i]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span>&amp;&amp;pair:pairs)&#123;</span><br><span class="line">            <span class="built_in">dj_union</span>(pair[<span class="number">0</span>],pair[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        unordered_map&lt;<span class="type">int</span>,string&gt;groups;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="type">int</span> r=<span class="built_in">dj_root</span>(i);</span><br><span class="line">            groups[r].<span class="built_in">push_back</span>(s[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span>&amp;[i,group]:groups)&#123;</span><br><span class="line">            <span class="built_in">sort</span>(group.<span class="built_in">begin</span>(),group.<span class="built_in">end</span>(),<span class="built_in">greater</span>());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="type">int</span> g=<span class="built_in">dj_root</span>(i);</span><br><span class="line">            s[i]=groups[g].<span class="built_in">back</span>();</span><br><span class="line">            groups[g].<span class="built_in">pop_back</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>1203. 项目管理</title>
    <url>/2021/01/12/1203/</url>
    <content><![CDATA[<p>双重拓扑排序: 组内 &amp; 组间</p>
<p>拓扑排序</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">topSort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; deg, vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; graph, vector&lt;<span class="type">int</span>&gt;&amp; items)</span> </span>&#123;</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; Q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; item: items) &#123;</span><br><span class="line">        <span class="keyword">if</span> (deg[item] == <span class="number">0</span>) &#123;</span><br><span class="line">            Q.<span class="built_in">push</span>(item);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; res;</span><br><span class="line">    <span class="keyword">while</span> (!Q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        <span class="type">int</span> u = Q.<span class="built_in">front</span>(); </span><br><span class="line">        Q.<span class="built_in">pop</span>();</span><br><span class="line">        res.<span class="built_in">emplace_back</span>(u);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; v: graph[u]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (--deg[v] == <span class="number">0</span>) &#123;</span><br><span class="line">                Q.<span class="built_in">push</span>(v);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="built_in">size</span>() == items.<span class="built_in">size</span>() ? res : vector&lt;<span class="type">int</span>&gt;&#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvc29ydC1pdGVtcy1ieS1ncm91cHMtcmVzcGVjdGluZy1kZXBlbmRlbmNpZXMvc29sdXRpb24veGlhbmctbXUtZ3Vhbi1saS1ieS1sZWV0Y29kZS1zb2x1dGlvbi0zZTdqLw==">官方题解<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>拓扑排序</tag>
      </tags>
  </entry>
  <entry>
    <title>1018. 可被 5 整除的二进制前缀</title>
    <url>/2021/01/14/1018/</url>
    <content><![CDATA[<p>找规律题</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">prefixesDivBy5</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; A)</span> </span>&#123;</span><br><span class="line">        vector&lt;<span class="type">bool</span>&gt; ret;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span>&amp;&amp;a:A)&#123;</span><br><span class="line">            res = res * <span class="number">2</span> + a;</span><br><span class="line">            res %= <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">if</span>(res % <span class="number">5</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                ret.<span class="built_in">push_back</span>(<span class="literal">true</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                ret.<span class="built_in">push_back</span>(<span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>123. 买卖股票的最佳时机 III</title>
    <url>/2021/01/09/123/</url>
    <content><![CDATA[<p>最多可以交易两次</p>
<h2 id="思路"><a class="header-anchor-1" href="#思路">#</a>思路</h2>
<p>动态规划, 用四个状态变量</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvYmVzdC10aW1lLXRvLWJ1eS1hbmQtc2VsbC1zdG9jay1paWkvc29sdXRpb24vbWFpLW1haS1ndS1waWFvLWRlLXp1aS1qaWEtc2hpLWppLWlpaS1ieS13cm50Lw==">官方题解<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>1395. 统计作战单位数</title>
    <url>/2021/07/02/1395/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">rating</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> numTeams = <span class="keyword">function</span> (<span class="params">rating</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; rating.<span class="property">length</span> - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> ri = rating[i];</span><br><span class="line">        <span class="keyword">let</span> countx1 = <span class="number">0</span>, countx2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">let</span> county1 = <span class="number">0</span>, county2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> x = <span class="number">0</span>; x &lt; i; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (rating[x] &lt; ri) countx1++;</span><br><span class="line">            <span class="keyword">if</span> (rating[x] &gt; ri) countx2++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> x = i + <span class="number">1</span>; x &lt; rating.<span class="property">length</span>; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (rating[x] &lt; ri) county1++;</span><br><span class="line">            <span class="keyword">if</span> (rating[x] &gt; ri) county2++;</span><br><span class="line">        &#125;</span><br><span class="line">        count += countx1 * county2 + countx2 * county1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>1584. 连接所有点的最小费用</title>
    <url>/2021/01/19/1584/</url>
    <content><![CDATA[<p>实际上是最小生成树</p>
]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>1833. 雪糕的最大数量</title>
    <url>/2021/07/02/1833/</url>
    <content><![CDATA[<p>排序</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">costs</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">coins</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> maxIceCream = <span class="keyword">function</span> (<span class="params">costs, coins</span>) &#123;</span><br><span class="line">    costs.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a - b);</span><br><span class="line">    <span class="keyword">let</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; costs.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (costs[i] &lt;= coins) &#123;</span><br><span class="line">            coins -= costs[i];</span><br><span class="line">            count++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>189. 旋转数组</title>
    <url>/2021/01/08/189/</url>
    <content><![CDATA[<h2 id="题意"><a class="header-anchor-1" href="#题意">#</a>题意</h2>
<p>使用O(n)时间和O(1)空间旋转数组</p>
<h2 id="思路"><a class="header-anchor-1" href="#思路">#</a>思路</h2>
<p>数学题, GCD</p>
<h2 id="感想"><a class="header-anchor-1" href="#感想">#</a>感想</h2>
<p>下次遇到这种题画个图会更好理解</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">rotate</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(!n || n == <span class="number">1</span>)<span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span>(!(k %= n))<span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> c=<span class="number">0</span>, _gcd=<span class="built_in">gcd</span>(n,k); c&lt;_gcd; c++)&#123;</span><br><span class="line">            <span class="type">int</span> tmp = nums[c];</span><br><span class="line">            <span class="type">int</span> x=c,_x;</span><br><span class="line">            <span class="keyword">while</span>((_x=(x-k+n)%n)!=c)&#123;</span><br><span class="line">                nums[x]=nums[_x];</span><br><span class="line">                x=_x;</span><br><span class="line">            &#125;</span><br><span class="line">            nums[x]=tmp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>GCD</tag>
      </tags>
  </entry>
  <entry>
    <title>2. 两数相加</title>
    <url>/2020/12/25/2/</url>
    <content><![CDATA[<p>指针</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode() : val(0), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x, ListNode *next) : val(x), next(next) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">addTwoNumbers</span><span class="params">(ListNode* l1, ListNode* l2)</span> </span>&#123;</span><br><span class="line">        ListNode*p1=l1,*p2=l2,*p3,*last=<span class="literal">nullptr</span>;</span><br><span class="line">        <span class="type">int</span> up=<span class="number">0</span>;</span><br><span class="line">        ListNode* root=<span class="keyword">new</span> <span class="built_in">ListNode</span>();</span><br><span class="line">        p3=root;</span><br><span class="line">        <span class="keyword">while</span>(p1 || p2 || up)&#123;</span><br><span class="line">            <span class="type">int</span> n1=<span class="number">0</span>,n2=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(p1)&#123;n1=p1-&gt;val;p1=p1-&gt;next;&#125;</span><br><span class="line">            <span class="keyword">if</span>(p2)&#123;n2=p2-&gt;val;p2=p2-&gt;next;&#125;</span><br><span class="line">            up+=n1+n2;</span><br><span class="line">            p3-&gt;val=up%<span class="number">10</span>;</span><br><span class="line">            last=p3;</span><br><span class="line">            p3=p3-&gt;next=<span class="keyword">new</span> <span class="built_in">ListNode</span>();</span><br><span class="line">            up/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">delete</span> last-&gt;next;</span><br><span class="line">        last-&gt;next=<span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>205. 同构字符串</title>
    <url>/2020/12/27/205/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isIsomorphic</span><span class="params">(string s, string t)</span> </span>&#123;</span><br><span class="line">        map&lt;<span class="type">char</span>, <span class="type">char</span>&gt;M;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="type">char</span> ss = s[i], tt = t[i];</span><br><span class="line">            <span class="keyword">if</span>(M.<span class="built_in">find</span>(ss)==M.<span class="built_in">end</span>())&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">find_if</span>(M.<span class="built_in">begin</span>(),M.<span class="built_in">end</span>(),[&amp;](<span class="type">const</span> map&lt;<span class="type">char</span>, <span class="type">char</span>&gt;::iterator&amp;it)&#123;<span class="keyword">return</span> it-&gt;second==tt;&#125;)!=M.<span class="built_in">end</span>())&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    M[ss]=tt;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(M[ss]!=tt)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>217. 存在重复元素</title>
    <url>/2020/12/13/217/</url>
    <content><![CDATA[<p>给定一个整数数组，判断是否存在重复元素。</p>
<p>如果任意一值在数组中出现至少两次，函数返回 true 。如果数组中每个元素都不相同，则返回 false 。</p>
<p>没啥好说的:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">containsDuplicate</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(),nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">unique</span>(nums.<span class="built_in">begin</span>(),nums.<span class="built_in">end</span>())!=nums.<span class="built_in">end</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>228. 汇总区间</title>
    <url>/2021/01/10/228/</url>
    <content><![CDATA[<p>水题, 注意边界情况</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">summaryRanges</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> last = (n&gt;<span class="number">0</span>?nums[<span class="number">0</span>]:<span class="number">0</span>);</span><br><span class="line">        vector&lt;string&gt; res;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i==n || nums[i]!=nums[i<span class="number">-1</span>]<span class="number">+1</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (last==nums[i<span class="number">-1</span>])&#123;</span><br><span class="line">                    res.<span class="built_in">push_back</span>(<span class="built_in">to_string</span>(last));</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    res.<span class="built_in">push_back</span>(<span class="built_in">to_string</span>(last)+<span class="string">&quot;-&gt;&quot;</span>+<span class="built_in">to_string</span>(nums[i<span class="number">-1</span>]));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(i&lt;n) last=nums[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>23. 合并K个升序链表</title>
    <url>/2020/12/18/23/</url>
    <content><![CDATA[<p>思路类似归并排序</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode() : val(0), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x, ListNode *next) : val(x), next(next) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeKLists</span><span class="params">(vector&lt;ListNode*&gt;&amp; lists)</span> </span>&#123;</span><br><span class="line">        ListNode newList;</span><br><span class="line">        ListNode*head=&amp;newList;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="type">int</span> min=<span class="number">-1</span>,minval=<span class="number">0x3fffffff</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;lists.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">                ListNode*l=lists[i];</span><br><span class="line">                <span class="keyword">if</span>(l &amp;&amp; l-&gt;val &lt; minval)&#123;</span><br><span class="line">                    min=i;</span><br><span class="line">                    minval=l-&gt;val;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(min&lt;<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">            head-&gt;next=lists[min];</span><br><span class="line">            lists[min]=lists[min]-&gt;next;</span><br><span class="line">            head=head-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        head-&gt;next=<span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">return</span> newList.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>25. K 个一组翻转链表</title>
    <url>/2021/03/01/25/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode *<span class="title">reverseKGroup</span><span class="params">(ListNode *head, <span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ListNode _header(<span class="number">0</span>, head);</span><br><span class="line">        ListNode *last = &amp;_header;</span><br><span class="line">        head = last;</span><br><span class="line">        <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (head) &#123;</span><br><span class="line">            head = head-&gt;next;</span><br><span class="line">            count++;</span><br><span class="line">            <span class="keyword">if</span> (head &amp;&amp; count == k) &#123;</span><br><span class="line">                count -= k;</span><br><span class="line">                ListNode *tmp_last_next = last-&gt;next;</span><br><span class="line">                <span class="built_in">reverseK</span>(last, k);</span><br><span class="line">                head = last = tmp_last_next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> _header.next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">reverseK</span><span class="params">(ListNode *start, <span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ListNode *cur = start, *next = start-&gt;next;</span><br><span class="line">        <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (count &lt; k) &#123;</span><br><span class="line">            ListNode *tmp = next-&gt;next;</span><br><span class="line">            next-&gt;next = cur;</span><br><span class="line">            cur = next;</span><br><span class="line">            next = tmp;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        start-&gt;next-&gt;next = next;</span><br><span class="line">        start-&gt;next = cur;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>290. 单词规律</title>
    <url>/2020/12/16/290/</url>
    <content><![CDATA[<p>判断给定<em>字符串</em>是不是按照给定<em>模式</em>的短语, 例如&quot;dog dog cat cat&quot;就是&quot;aabb&quot;式的短语</p>
<p>思路: 用map记录模式字母与单词的对应关系, 如果发现不一致, 返回false, 否则返回true</p>
<p>注意: 模式中不同字母对应的单词不能相同</p>
<p>提示:</p>
<p>按照key查询map可以使用map自带的find()函数</p>
<p>按照value查询map可以使用find_if()函数</p>
<p>两者都返回迭代器</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">M.<span class="built_in">find</span>(someKey);</span><br><span class="line"><span class="built_in">find_if</span>(M.<span class="built_in">begin</span>(), M.<span class="built_in">end</span>(), [&amp;](<span class="type">const</span> <span class="keyword">auto</span>&amp; kv)&#123; <span class="comment">/* ... */</span> &#125;);</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">wordPattern</span><span class="params">(string pattern, string s)</span> </span>&#123;</span><br><span class="line">        map&lt;<span class="type">char</span>, string&gt; M;</span><br><span class="line">        vector&lt;string&gt; S;</span><br><span class="line">        <span class="type">char</span> *p = <span class="built_in">strtok</span>((<span class="type">char</span> *)s.<span class="built_in">c_str</span>(), <span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (p) <span class="keyword">do</span> &#123;</span><br><span class="line">            S.<span class="built_in">push_back</span>(p);</span><br><span class="line">        &#125; <span class="keyword">while</span> (p = <span class="built_in">strtok</span>(<span class="literal">NULL</span>, <span class="string">&quot; &quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (pattern.<span class="built_in">size</span>() != S.<span class="built_in">size</span>()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; pattern.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            <span class="type">char</span> ch = pattern[i];</span><br><span class="line">            <span class="keyword">if</span> (M.<span class="built_in">find</span>(ch) == M.<span class="built_in">end</span>()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">find_if</span>(M.<span class="built_in">begin</span>(),M.<span class="built_in">end</span>(),[&amp;](<span class="type">const</span> <span class="keyword">auto</span>&amp;p)&#123;<span class="keyword">return</span> p.second==S[i];&#125;)!=M.<span class="built_in">end</span>())&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                cout&lt;&lt;ch&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;S[i]&lt;&lt;endl;</span><br><span class="line">                M[ch] = S[i];</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (M[ch] != S[i]) &#123;</span><br><span class="line">                cout&lt;&lt;M[ch]&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;S[i]&lt;&lt;endl;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>3. 无重复字符的最长子串</title>
    <url>/2021/03/01/3/</url>
    <content><![CDATA[<h2 id="思路"><a class="header-anchor-1" href="#思路">#</a>思路</h2>
<p>滑动窗口</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(string s)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        unordered_set&lt;<span class="type">char</span>&gt; cur_group;</span><br><span class="line">        <span class="type">int</span> end = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (end &lt; s.<span class="built_in">size</span>() &amp;&amp; cur_group.<span class="built_in">find</span>(s[end]) == cur_group.<span class="built_in">end</span>()) &#123;</span><br><span class="line">            cur_group.<span class="built_in">insert</span>(s[end++]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">unsigned</span> <span class="type">long</span> max_length = cur_group.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            cur_group.<span class="built_in">erase</span>(s[i]);</span><br><span class="line">            <span class="keyword">while</span> (end &lt; s.<span class="built_in">size</span>() &amp;&amp; cur_group.<span class="built_in">find</span>(s[end]) == cur_group.<span class="built_in">end</span>()) &#123;</span><br><span class="line">                cur_group.<span class="built_in">insert</span>(s[end++]);</span><br><span class="line">            &#125;</span><br><span class="line">            max_length = std::<span class="built_in">max</span>(max_length, cur_group.<span class="built_in">size</span>());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max_length;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>318. 最大单词长度乘积</title>
    <url>/2021/11/17/318/</url>
    <content><![CDATA[<p>位运算</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">unsigned</span> <span class="title">to_uword</span><span class="params">(<span class="type">const</span> string &amp;word)</span> </span>&#123;</span><br><span class="line">        <span class="type">unsigned</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;&amp;c: word) &#123;</span><br><span class="line">            res |= <span class="number">1</span> &lt;&lt; (c - <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxProduct</span><span class="params">(vector&lt;string&gt;&amp; words)</span> </span>&#123;</span><br><span class="line">        vector&lt;<span class="type">unsigned</span>&gt; uwords;</span><br><span class="line">        uwords.<span class="built_in">reserve</span>(words.<span class="built_in">size</span>());</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;&amp;w: words) &#123;</span><br><span class="line">            uwords.<span class="built_in">push_back</span>(<span class="built_in">to_uword</span>(w));</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> m = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> n = words.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">auto</span> &amp;s1 = uwords[i];</span><br><span class="line">                <span class="keyword">auto</span> &amp;s2 = uwords[j];</span><br><span class="line">                <span class="keyword">if</span> (s1 &amp; s2) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="type">int</span> r = words[i].<span class="built_in">size</span>() * words[j].<span class="built_in">size</span>(); r &gt; m) m = r;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> m;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>37. 解数独</title>
    <url>/2021/03/01/37/</url>
    <content><![CDATA[<h2 id="思路"><a class="header-anchor-1" href="#思路">#</a>思路</h2>
<p>DFS</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">solveSudoku</span><span class="params">(vector&lt;vector&lt;<span class="type">char</span>&gt;&gt;&amp; board)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">solveSudoku1</span>(board, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">solveSudoku1</span><span class="params">(vector&lt;vector&lt;<span class="type">char</span>&gt;&gt;&amp; board, <span class="type">int</span> i, <span class="type">int</span> j)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (i&gt;=<span class="number">9</span>||j&gt;=<span class="number">9</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (board[i][j]==<span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">            <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">used_numbers</span><span class="params">(<span class="number">9</span>)</span></span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k=<span class="number">0</span>;k&lt;<span class="number">9</span>;k++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (board[i][k]!=<span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">                    used_numbers[board[i][k]-<span class="string">&#x27;1&#x27;</span>]=<span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k=<span class="number">0</span>;k&lt;<span class="number">9</span>;k++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (board[k][j]!=<span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">                    used_numbers[board[k][j]-<span class="string">&#x27;1&#x27;</span>]=<span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> grid_i = i / <span class="number">3</span>;</span><br><span class="line">            <span class="type">int</span> grid_j = j / <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> m=<span class="number">3</span>*grid_i;m&lt;<span class="number">3</span><span class="number">+3</span>*grid_i;m++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> n=<span class="number">3</span>*grid_j;n&lt;<span class="number">3</span><span class="number">+3</span>*grid_j;n++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (board[m][n]!=<span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">                        used_numbers[board[m][n]-<span class="string">&#x27;1&#x27;</span>]=<span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> ii=<span class="number">0</span>;ii&lt;<span class="number">9</span>;ii++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (used_numbers[ii]==<span class="literal">false</span>) &#123;</span><br><span class="line">                    board[i][j] = ii+<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">solveSudoku1</span>(board, i+(j<span class="number">+1</span>)/<span class="number">9</span>, (j<span class="number">+1</span>)%<span class="number">9</span>)) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            board[i][j] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">solveSudoku1</span>(board, i+(j<span class="number">+1</span>)/<span class="number">9</span>, (j<span class="number">+1</span>)%<span class="number">9</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>376. 摆动序列</title>
    <url>/2020/12/12/376/</url>
    <content><![CDATA[<p>思路: 先差分, 然后把所有0和相邻同号的数字(之一)去掉, 剩下的元素数量+2既是最终答案</p>
<p>注意: 元素个数为0, 元素个数为1, 差分后有0出现</p>
<p>代码:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">wiggleMaxLength</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;nums)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> size = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (size &lt; <span class="number">1</span>) &#123; <span class="keyword">return</span> size + <span class="number">1</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> start = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            nums[i] -= nums[i + <span class="number">1</span>];</span><br><span class="line">            <span class="comment">// find first not zero</span></span><br><span class="line">            <span class="keyword">if</span> (start == <span class="number">-1</span> &amp;&amp; nums[i] != <span class="number">0</span>) &#123; start = i; &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (start == <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="comment">// none</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> count = <span class="number">1</span>, want = nums[start];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = start + <span class="number">1</span>; i &lt; size; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((nums[i] &gt; <span class="number">0</span> &amp;&amp; want &lt; <span class="number">0</span>) ||</span><br><span class="line">                (nums[i] &lt; <span class="number">0</span> &amp;&amp; want &gt; <span class="number">0</span>)) &#123;  <span class="comment">// different sign and no zero</span></span><br><span class="line">                want = nums[i];</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> count + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>看过题解: 复杂了, 只要统计波峰和波谷的数量就行了</p>
<p>别人的代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">wiggleMaxLength</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.length;</span><br><span class="line">        <span class="keyword">if</span> (n &lt; <span class="number">2</span>) <span class="keyword">return</span> n;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>, prev_diff = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">diff</span> <span class="operator">=</span> nums[i] - nums[i - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (diff &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (prev_diff &gt;= <span class="number">0</span>)</span><br><span class="line">                    count++;</span><br><span class="line">                prev_diff = -<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (diff &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (prev_diff &lt;= <span class="number">0</span>)</span><br><span class="line">                    count++;</span><br><span class="line">                prev_diff = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">作者：lincs</span><br><span class="line">链接：https:<span class="comment">//leetcode-cn.com/problems/wiggle-subsequence/solution/java-on-solution-by-lincs-6l5r/</span></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>389. 找不同</title>
    <url>/2020/12/18/389/</url>
    <content><![CDATA[<p>送分题</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">char</span> <span class="title">findTheDifference</span><span class="params">(string s, string t)</span> </span>&#123;</span><br><span class="line">        map&lt;<span class="type">char</span>, <span class="type">int</span>&gt;count;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span>&amp;&amp;c:s)&#123;</span><br><span class="line">            count[c]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span>&amp;&amp;c:t)&#123;</span><br><span class="line">            count[c]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">find_if</span>(count.<span class="built_in">begin</span>(),count.<span class="built_in">end</span>(),[&amp;](<span class="keyword">auto</span> it)&#123;<span class="keyword">return</span> it.second!=<span class="number">0</span>;&#125;)-&gt;first;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>4. 寻找两个正序数组的中位数</title>
    <url>/2020/12/13/4/</url>
    <content><![CDATA[<p>思路: 先归并排序, 再寻找中间位置</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums1, vector&lt;<span class="type">int</span>&gt;&amp; nums2)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> len1=nums<span class="number">1.</span><span class="built_in">size</span>(),len2=nums<span class="number">2.</span><span class="built_in">size</span>(),len=len1+len2;</span><br><span class="line">        <span class="type">int</span> t, lastt;</span><br><span class="line">        <span class="keyword">while</span>(i+j&lt;=len/<span class="number">2</span>)&#123;</span><br><span class="line">            lastt=t;</span><br><span class="line">            <span class="keyword">if</span>(i&lt;len1 &amp;&amp; j&lt; len2)&#123;</span><br><span class="line">                <span class="type">int</span> n1=nums1[i];</span><br><span class="line">                <span class="type">int</span> n2=nums2[j];</span><br><span class="line">                <span class="keyword">if</span>(n1&lt;n2)&#123;</span><br><span class="line">                    t=n1;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    t=n2;</span><br><span class="line">                    j++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i&lt;len1)&#123;</span><br><span class="line">                t=nums1[i++];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                t=nums2[j++];</span><br><span class="line">            &#125;</span><br><span class="line">            cout&lt;&lt;i+j&lt;&lt;<span class="string">&quot;:&quot;</span>&lt;&lt;t&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (len%<span class="number">2</span>?t:(t+lastt)/<span class="number">2.0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>455. 分发饼干</title>
    <url>/2020/12/25/455/</url>
    <content><![CDATA[<p>排序</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">findContentChildren</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; g, vector&lt;<span class="type">int</span>&gt;&amp; s)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">sort</span>(g.<span class="built_in">begin</span>(),g.<span class="built_in">end</span>()); <span class="comment">// 1 2 3</span></span><br><span class="line">        <span class="built_in">sort</span>(s.<span class="built_in">begin</span>(),s.<span class="built_in">end</span>()); <span class="comment">// 1 1</span></span><br><span class="line">        <span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=s.<span class="built_in">size</span>()<span class="number">-1</span>, gg=g.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>&amp;&amp;gg&gt;=<span class="number">0</span>;i--,gg--,count++)&#123;</span><br><span class="line">            <span class="type">int</span> ss=s[i];</span><br><span class="line">            <span class="keyword">while</span>(gg&gt;=<span class="number">0</span>&amp;&amp;g[gg]&gt;ss)&#123;</span><br><span class="line">                gg--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(gg&lt;<span class="number">0</span>) count--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>49. 字母异位词分组</title>
    <url>/2020/12/14/49/</url>
    <content><![CDATA[<p>思路: 字符串排序后作为key, 存到map中再转成vector返回, AC</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;string&gt;&gt; <span class="built_in">groupAnagrams</span>(vector&lt;string&gt;&amp; strs) &#123;</span><br><span class="line">        map&lt;string, vector&lt;string&gt;&gt; m;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;strs.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            string s=strs[i];</span><br><span class="line">            <span class="built_in">sort</span>(s.<span class="built_in">begin</span>(),s.<span class="built_in">end</span>());</span><br><span class="line">            m[s].<span class="built_in">push_back</span>(strs[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        vector&lt;vector&lt;string&gt;&gt; res;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;k:m)&#123;</span><br><span class="line">            res.<span class="built_in">push_back</span>(k.second);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>5. 最长回文子串</title>
    <url>/2021/03/01/5/</url>
    <content><![CDATA[<h2 id="思路"><a class="header-anchor-1" href="#思路">#</a>思路</h2>
<p>动态规划 &lt; 中心扩展算法 &lt; manacher</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">longestPalindrome</span><span class="params">(string s)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = s.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> maximum = <span class="number">1</span>, maxI = <span class="number">0</span>, maxJ = <span class="number">0</span>;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(n, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n, <span class="number">0</span>));</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == j) &#123;</span><br><span class="line">                    dp[i][j] = <span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    dp[i][j] = <span class="built_in">max</span>(dp[i][j - <span class="number">1</span>], dp[i + <span class="number">1</span>][j]);</span><br><span class="line">                    <span class="keyword">if</span> (dp[i + <span class="number">1</span>][j - <span class="number">1</span>] == j - i - <span class="number">1</span> &amp;&amp; s[i] == s[j])</span><br><span class="line">                        dp[i][j] = <span class="built_in">max</span>(dp[i][j], dp[i + <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">2</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (dp[i][j] &gt; maximum) &#123;</span><br><span class="line">                    maximum = dp[i][j];</span><br><span class="line">                    maxI = i;</span><br><span class="line">                    maxJ = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">string</span>(s.<span class="built_in">begin</span>() + maxI, s.<span class="built_in">begin</span>() + maxJ + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>动态规划</tag>
      </tags>
  </entry>
  <entry>
    <title>547. 省份数量</title>
    <url>/2021/01/07/547/</url>
    <content><![CDATA[<p>无向图给出邻接表, 计算连通分量个数</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">findCircleNum</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; isConnected)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> len = isConnected.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt;<span class="built_in">flag</span>(len,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!flag[i])&#123;</span><br><span class="line">                count++;</span><br><span class="line">                queue&lt;<span class="type">int</span>&gt;found;</span><br><span class="line">                found.<span class="built_in">push</span>(i);</span><br><span class="line">                flag[i]=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span>(!found.<span class="built_in">empty</span>())&#123;</span><br><span class="line">                    <span class="type">int</span> cur = found.<span class="built_in">front</span>(); found.<span class="built_in">pop</span>();</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;len;j++)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(!flag[j]&amp;&amp;isConnected[cur][j])&#123;</span><br><span class="line">                            found.<span class="built_in">push</span>(j);</span><br><span class="line">                            flag[j]=<span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>连通分量</tag>
      </tags>
  </entry>
  <entry>
    <title>645. 错误的集合</title>
    <url>/2021/07/04/645/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number[]</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> findErrorNums = <span class="keyword">function</span>(<span class="params">nums</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> ex = <span class="keyword">new</span> <span class="title class_">Array</span>(nums.<span class="property">length</span>);</span><br><span class="line">    <span class="keyword">let</span> dup,lost;</span><br><span class="line">    <span class="keyword">for</span>(num <span class="keyword">of</span> nums)&#123;</span><br><span class="line">        <span class="keyword">if</span> (!ex[num-<span class="number">1</span>])&#123;</span><br><span class="line">            ex[num-<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            dup=num;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;nums.<span class="property">length</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!ex[i])&#123;</span><br><span class="line">            lost=i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [dup, lost]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>684. 冗余连接</title>
    <url>/2021/01/13/684/</url>
    <content><![CDATA[<h2 id="思路"><a class="header-anchor-1" href="#思路">#</a>思路</h2>
<p>有环无向图中找出环上最后出现的边</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; parents;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">dj_root</span><span class="params">(<span class="type">int</span> a)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a==parents[a]? a: parents[a]=<span class="built_in">dj_root</span>(parents[a]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">dj_union</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">        a=<span class="built_in">dj_root</span>(a);</span><br><span class="line">        b=<span class="built_in">dj_root</span>(b);</span><br><span class="line">        <span class="keyword">if</span> (a!=b) parents[a]=b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">findRedundantConnection</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; edges)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; edge: edges) &#123;</span><br><span class="line">            <span class="keyword">if</span> (edge[<span class="number">0</span>] &gt; n) n = edge[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span> (edge[<span class="number">1</span>] &gt; n) n = edge[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        parents.<span class="built_in">resize</span>(n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">            parents[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; edge: edges) &#123;</span><br><span class="line">            <span class="type">int</span> a = edge[<span class="number">0</span>]<span class="number">-1</span>;</span><br><span class="line">            <span class="type">int</span> b = edge[<span class="number">1</span>]<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">dj_root</span>(a) == <span class="built_in">dj_root</span>(b)) &#123;</span><br><span class="line">                <span class="keyword">return</span> edge;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">dj_union</span>(a, b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> edges.<span class="built_in">back</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>738. 单调递增的数字</title>
    <url>/2020/12/15/738/</url>
    <content><![CDATA[<p>思路: 对于数字<code>x = an ... ai+1 ai ... a1 a0</code>, 如果任意相邻的<code>ai+1</code>,<code>ai</code>不符合单调递增, 就给原数字减去<code>(ai + 1) * 10 ^ i</code>, 减去之后得到的新数字即为<code>y</code></p>
<p>可以发现, 若<code>x</code>与<code>y</code>不完全相同, 则最终结果在第一个不相同位之后的位必定全是<code>9</code>, 按此规律修正结果即可.</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">monotoneIncreasingDigits</span><span class="params">(<span class="type">int</span> N)</span> </span>&#123;</span><br><span class="line">        string s = <span class="built_in">to_string</span>(N);</span><br><span class="line">        string olds=s;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> bor=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=s.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(bor)&#123;</span><br><span class="line">                s[i]--;</span><br><span class="line">                s[i<span class="number">+1</span>]+=<span class="number">10</span>;</span><br><span class="line">                bor=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(s[i]&lt;s[i<span class="number">-1</span>])&#123;</span><br><span class="line">                <span class="comment">// -s[i]-1</span></span><br><span class="line">                s[i]=<span class="string">&#x27;9&#x27;</span>;</span><br><span class="line">                s[i<span class="number">-1</span>]--;</span><br><span class="line">                <span class="keyword">if</span>(s[i<span class="number">-1</span>]&lt;<span class="string">&#x27;0&#x27;</span>) bor = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// fix</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]&lt;olds[i])&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=i<span class="number">+1</span>;j&lt;s.<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">                    s[j]=<span class="string">&#x27;9&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// restore</span></span><br><span class="line">        <span class="type">int</span> val =<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            val=val*<span class="number">10</span>+s[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>每日 leetcode</title>
    <url>/2020/12/12/index/</url>
    <content><![CDATA[<h1>决定开始刷leetcode了</h1>
<p>目标:
<del>每天一道</del><del>如果每日一题是easy, 就加一道hard</del>
如果每日一题是easy, 就加一道medium</p>
]]></content>
      <categories>
        <category>algorithm-practice</category>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>Bash 基本使用总结</title>
    <url>/2021/02/11/bash/</url>
    <content><![CDATA[<h2 id="bash-基本使用"><a class="header-anchor-1" href="#bash-基本使用">#</a>Bash 基本使用</h2>
<h3 id="常用快捷键"><a class="header-anchor-1" href="#常用快捷键">#</a>常用快捷键</h3>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">^c   终止当前进程</span><br><span class="line">^z   将当前进程挂起到后台</span><br><span class="line">^d   退出, 等价于exit</span><br><span class="line">^l   清屏</span><br><span class="line">^r   搜索历史命令</span><br><span class="line">^a   光标移到开头</span><br><span class="line">^e   光标移到结尾</span><br><span class="line">^u   删除光标前所有内容</span><br><span class="line">^k   删除光标后所有内容</span><br></pre></td></tr></table></figure>
<h3 id="常用通配符"><a class="header-anchor-1" href="#常用通配符">#</a>常用通配符</h3>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">*                       匹配前面的内容任意次</span><br><span class="line">?                       匹配前面的内容0-1次</span><br><span class="line">[list]                  list中任意一个字符</span><br><span class="line">&#123;string1,string2,...&#125;   string1,string2或者更多字符串</span><br></pre></td></tr></table></figure>
<h3 id="引号"><a class="header-anchor-1" href="#引号">#</a>引号</h3>
<ul>
<li>双引号<code>&quot;&quot;</code> 把引号中的内容作为一个整体, 允许通过$符号来引用其他变量值</li>
<li>单引号<code>''</code> 把引号中的内容作为一个整体, 禁止通过$符号来引用其他变量值, 其中的 shell 特殊符号都视为普通字符</li>
<li>反引号 与$()相同, 先执行引号中的内容, 不能嵌套</li>
</ul>
<h2 id="shell-脚本"><a class="header-anchor-1" href="#shell-脚本">#</a>shell 脚本</h2>
<h3 id="结构"><a class="header-anchor-1" href="#结构">#</a>结构</h3>
<ul>
<li>HashBang</li>
</ul>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/usr/bin/env bash</span></span><br></pre></td></tr></table></figure>
<ul>
<li>命令</li>
</ul>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&#x27;Hello World&#x27;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="执行脚本"><a class="header-anchor-1" href="#执行脚本">#</a>执行脚本</h3>
<ul>
<li>标准方式</li>
</ul>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span> +x script.sh</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./script.sh</span></span><br></pre></td></tr></table></figure>
<ul>
<li>非标准方式</li>
</ul>
<ol>
<li>直接指定解释器执行</li>
</ol>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">bash script.sh</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-x 显示脚本的执行过程, 用于debug</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-n 检查语法是否有问题</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>使用 source 命令执行</li>
</ol>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">source</span> script.sh</span></span><br></pre></td></tr></table></figure>
<h3 id="变量"><a class="header-anchor-1" href="#变量">#</a>变量</h3>
<ul>
<li>变量名不能由数字开头</li>
<li>区分大小写</li>
</ul>
<h3 id="读取用户输入"><a class="header-anchor-1" href="#读取用户输入">#</a>读取用户输入</h3>
<p>语法：<code>read [选项] 变量名</code></p>
<ul>
<li><code>-p</code> 提示信息</li>
<li><code>-n</code> 输入长度</li>
<li><code>-s</code> 不回显</li>
<li><code>-t</code> 超时时间, 单位 s</li>
</ul>
<h3 id="内置变量"><a class="header-anchor-1" href="#内置变量">#</a>内置变量</h3>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">$      当前进程号</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">?      上一条命令的返回值</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">_      上一条命令的最后一个参数</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">0      当前执行的程序（脚本文件）名</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">&#123;x&#125;    第x个参数</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">*      所有参数</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">@      所有参数</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash"><span class="comment">##      执行时所带的参数个数</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">!      后台运行的最后一个进程的进程号</span></span><br></pre></td></tr></table></figure>
<h3 id="简单四则运算"><a class="header-anchor-1" href="#简单四则运算">#</a>简单四则运算</h3>
<table>
<thead>
<tr>
<th>表达式</th>
<th>举例</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>$(( ))</code></td>
<td><code>echo $((1+1))</code></td>
</tr>
<tr>
<td><code>$[ ]</code></td>
<td><code>echo $[10-5]</code></td>
</tr>
<tr>
<td><code>expr</code></td>
<td><code>expr 10 / 5</code></td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>backend</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux命令行实用工具</title>
    <url>/2021/02/09/commands/</url>
    <content><![CDATA[<h2 id="杂项"><a class="header-anchor-1" href="#杂项">#</a>杂项</h2>
<h3 id="清屏"><a class="header-anchor-1" href="#清屏">#</a>清屏</h3>
<p>按下 Ctrl+l</p>
<h3 id="快速清空文件内容"><a class="header-anchor-1" href="#快速清空文件内容">#</a>快速清空文件内容</h3>
<p>利用文件写入</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">filename</span></span><br></pre></td></tr></table></figure>
<h2 id="实用程序"><a class="header-anchor-1" href="#实用程序">#</a>实用程序</h2>
<h3 id="cat"><a class="header-anchor-1" href="#cat">#</a>cat</h3>
<p>显示文件内容, 如果输入是多个文件也可以用于文件拼接</p>
<ul>
<li><code>-n</code> 显示行号</li>
</ul>
<h3 id="grep"><a class="header-anchor-1" href="#grep">#</a>grep</h3>
<p>行过滤</p>
<ul>
<li><code>-n</code> 显示行号</li>
<li><code>-i</code> 忽略大小写</li>
<li><code>-c</code> 统计结果行数</li>
<li><code>-A</code> 显示匹配处后多少行</li>
<li><code>-B</code> 显示匹配处前多少行</li>
<li><code>-C</code> 显示匹配处前后多少行</li>
<li><code>--color=auto</code> 彩色显示</li>
<li><code>^</code> 行开头</li>
<li><code>$</code> 行末尾</li>
</ul>
<h3 id="cut"><a class="header-anchor-1" href="#cut">#</a>cut</h3>
<p>列截取</p>
<ul>
<li><code>-d</code> 分隔符</li>
<li><code>-f</code> 分割后取出哪些列</li>
</ul>
<h3 id="sort"><a class="header-anchor-1" href="#sort">#</a>sort</h3>
<p>对标准输入进行排序, 默认是升序排列</p>
<ul>
<li><code>-r</code> 逆序排列, 即按降序排列</li>
<li></li>
</ul>
<h3 id="uniq"><a class="header-anchor-1" href="#uniq">#</a>uniq</h3>
<p>连续行去重, 即对标准输入中连续重复的行只保留一个</p>
<h3 id="tee"><a class="header-anchor-1" href="#tee">#</a>tee</h3>
<p>把标准输入写入到标准输出和一个文件中, 即: 双向<strong>覆盖</strong>重定向(屏幕+文件输出)</p>
<ul>
<li><code>-a</code> 双向<strong>追加</strong>重定向</li>
</ul>
<h3 id="diff"><a class="header-anchor-1" href="#diff">#</a>diff</h3>
<p>描述怎样改变第一个文件使之与第二个文件匹配</p>
<h3 id="patch"><a class="header-anchor-1" href="#patch">#</a>patch</h3>
<p>基于 diff 的结果修改一个文件</p>
<h3 id="paste"><a class="header-anchor-1" href="#paste">#</a>paste</h3>
<p>将两个文件逐行拼接, 与 cut 相反</p>
<ul>
<li><code>-d</code> 指定分割符, 默认是 tab</li>
<li><code>-s</code> 将结果转置</li>
</ul>
<h3 id="tr"><a class="header-anchor-1" href="#tr">#</a>tr</h3>
<p>字符转换, 替换和删除. 主要用于删除文件中的控制字符, 或者进行字符转换</p>
<p>格式:</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">tr</span> set1 set2 &lt; stdin</span></span><br></pre></td></tr></table></figure>
<p>把字符集 1 中的字符替换成字符集 2 中的字符</p>
<p>例:</p>
<ul>
<li>小写转大写 <code>tr a-z A-Z &lt; package.json</code></li>
</ul>
]]></content>
      <categories>
        <category>backend</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 个人 blog 搭建记录</title>
    <url>/2020/11/29/2020-11-29/</url>
    <content><![CDATA[<h2 id="hexo-基本操作"><a class="header-anchor-1" href="#hexo-基本操作">#</a>Hexo 基本操作</h2>
<ul>
<li>
<p>安装</p>
<p><code>npm install -g hexo-cli</code></p>
</li>
<li>
<p>初始化 hexo</p>
<ul>
<li>
<p><code>hexo init</code></p>
</li>
<li>
<p>当前目录必须是空的</p>
</li>
</ul>
</li>
<li>
<p>新建文章</p>
<ul>
<li>
<p><code>hexo new [layout] name</code></p>
</li>
<li>
<p>layout 可以是 post, page, draft 之一</p>
</li>
<li>
<p>分别保存至 source/_posts, source, source/_drafts 中</p>
</li>
<li>
<p>新建文件名可以在 _config.yml 里面指定, <code>new_post_name</code>, 默认为 <code>name.md</code></p>
</li>
</ul>
</li>
<li>
<p>临时开启 server</p>
<ul>
<li><code>hexo server</code></li>
</ul>
</li>
</ul>
<h2 id="react-入门"><a class="header-anchor-1" href="#react-入门">#</a>React 入门</h2>
<h3 id="复习-javascript"><a class="header-anchor-1" href="#复习-javascript">#</a>复习 JavaScript</h3>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9BX3JlLWludHJvZHVjdGlvbl90b19KYXZhU2NyaXB0">很好的文章<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="vue-和-react-路由模块的区别"><a class="header-anchor-1" href="#vue-和-react-路由模块的区别">#</a>Vue 和 React 路由模块的区别</h2>
<h3 id="vue-路由"><a class="header-anchor-1" href="#vue-路由">#</a>Vue 路由</h3>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Router</span>(&#123;</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&quot;history&quot;</span>,</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/inspect&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/inspect/table1&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;报表&quot;</span>,</span><br><span class="line">      <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&quot;报表&quot;</span>, <span class="attr">icon</span>: <span class="string">&quot;table&quot;</span> &#125;,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;table1&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;Table&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/table/index&quot;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&quot;Table&quot;</span>, <span class="attr">icon</span>: <span class="string">&quot;table&quot;</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="vue-深入-——-mvvm-框架"><a class="header-anchor-1" href="#vue-深入-——-mvvm-框架">#</a>Vue 深入 —— MVVM 框架</h2>
<ul>
<li>
<p>Observer 数据劫持</p>
</li>
<li>
<p>Dep/Watcher 发布订阅</p>
</li>
<li>
<p>Compiler 解析 <code>&#123;&#123; &#125;&#125;</code>, 创建 watcher, 求解表达式</p>
</li>
</ul>
]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/11/30/2020-11-30/</url>
    <content><![CDATA[<h1>Github Developer Settings</h1>
<ul>
<li>
<p>GitHub Apps</p>
</li>
<li>
<p>OAuth Apps</p>
<ul>
<li>需要用到Github API的App</li>
</ul>
</li>
<li>
<p>Personal access tokens</p>
<ul>
<li>
<p>Tokens you have generated that can be used to access the GitHub API.</p>
</li>
<li>
<p>权限类似于账号+密码登录</p>
</li>
</ul>
</li>
</ul>
<h1>Github Actions</h1>
<ul>
<li>
<p>类似Travis-CI的持续集成平台</p>
</li>
<li>
<p>使用方法</p>
<ul>
<li>
<p>在项目根目录创建 .github/workflows</p>
</li>
<li>
<p>继续创建 pages.yml</p>
</li>
<li>
<p>关键字: jobs, runs-on, steps, name, uses, with等等</p>
</li>
</ul>
</li>
</ul>
<h1>Hexo博客评论系统</h1>
<ul>
<li>
<p>Gitalk</p>
<ul>
<li>
<p>利用Github Issues功能实现的评论系统, 开源</p>
</li>
<li>
<p>不支持回复评论</p>
</li>
<li>
<p>修改评论需要打开对应的Issue页修改</p>
</li>
<li>
<p>登录需要的Github权限太高(Github自身问题)</p>
</li>
</ul>
</li>
<li>
<p>Disqus</p>
<ul>
<li>
<p>界面好看</p>
</li>
<li>
<p>需要翻墙才能正常使用</p>
</li>
</ul>
</li>
</ul>
<h1>Code-Server</h1>
<ul>
<li>浏览器端的vscode</li>
</ul>
]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/12/01/2020-12-01/</url>
    <content><![CDATA[<h1>转换dos格式行尾为unix行尾</h1>
<ul>
<li>
<p>工具: dos2unix</p>
</li>
<li>
<p>单文件: <code>dos2unix input output</code></p>
</li>
<li>
<p>递归转换: <code>find . -type f -print0 | xargs -0 dos2unix</code></p>
</li>
</ul>
<h1>Linux下 nodejs 环境配置</h1>
<ul>
<li>
<p>安装node(不是最新版): <code>sudo apt install nodejs</code></p>
</li>
<li>
<p>使用<code>n</code>来切换node版本:</p>
<ul>
<li>
<p><code>sudo npm install -g n</code></p>
</li>
<li>
<p><code>sudo n stable</code></p>
</li>
</ul>
</li>
<li>
<p>安装yarn: <code>sudo npm install -g yarn</code></p>
</li>
</ul>
<h1>Nodejs版本切换</h1>
<ul>
<li>
<p>使用<code>n</code></p>
<ul>
<li>
<p>方法:</p>
<ul>
<li>
<p>安装: <code>sudo npm install -g n</code></p>
</li>
<li>
<p>切换版本: <code>sudo n stable</code></p>
</li>
</ul>
</li>
<li>
<p>缺点: 据说会导致node modules混乱</p>
</li>
</ul>
</li>
<li>
<p>使用<code>nvm</code></p>
</li>
</ul>
<h1>清理npm缓存</h1>
<ul>
<li>
<p><code>npm cache clean --force</code></p>
</li>
<li>
<p>The default cache direconstructory is ~/.npm on Posix (mac or linux), or %AppData%/npm-cache on Windows.</p>
</li>
</ul>
<h1>Javascript 复习</h1>
<ul>
<li>
<p>数据类型</p>
<ul>
<li>Number</li>
<li>String</li>
<li>Boolean</li>
<li>Symbol (new in ES2015)</li>
<li>Object
<ul>
<li>Function</li>
<li>Array</li>
<li>Date</li>
<li>RegExp</li>
</ul>
</li>
<li>null</li>
<li>undefined</li>
</ul>
</li>
<li>
<p>关于变量</p>
<ul>
<li>
<p>用<code>var</code>定义的变量具有<strong>函数</strong>作用域</p>
<ul>
<li>
<p>name hiding: <code>(function () &#123; ... &#125;)();</code></p>
</li>
<li>
<p>允许递归版(IIFEs): <code>(function foo() &#123; ...foo()... &#125;)();</code></p>
</li>
</ul>
</li>
<li>
<p>尽量使用<code>let</code>和<code>const</code></p>
</li>
</ul>
</li>
<li>
<p>关于Array:</p>
<ul>
<li>
<p>相当于一个下标是整数, 有一个length属性, 外表看起来像是数组的Object</p>
</li>
<li>
<p>数组的length属性是数组中最大的下标+1</p>
</li>
<li>
<p>当然作为Object, 也可以有非整数类型的下标</p>
</li>
<li>
<p>for…in…循环遍历实际存储的值, for…of…循环遍历下标</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = []</span><br><span class="line"></span><br><span class="line">a[<span class="number">100</span>] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">a.<span class="property">length</span> <span class="comment">// 101</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">in</span> a) <span class="variable language_">console</span>.<span class="title function_">log</span>(i) <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> a) <span class="variable language_">console</span>.<span class="title function_">log</span>(i) <span class="comment">// undefined, undefined, ... , 1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>
<p>关于String</p>
<ul>
<li>
<p>String + any = String</p>
</li>
<li>
<p>any + String = String</p>
</li>
<li>
<p>注意结合性</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> + <span class="number">2</span> + <span class="string">&#x27;3&#x27;</span> <span class="comment">// &#x27;33&#x27;</span></span><br><span class="line"><span class="string">&#x27;1&#x27;</span> + <span class="number">2</span> + <span class="number">3</span> <span class="comment">// &#x27;123&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>
<p>关于Object:</p>
<ul>
<li>
<p>对象字面量<code>&#123;&#125;</code>等效于<code>new Object()</code></p>
<ul>
<li>
<p>不过<code>Object()</code>可以被重载</p>
</li>
<li>
<p>对象字面量不能被重载</p>
</li>
</ul>
</li>
<li>
<p><code>new XXX()</code>: 相当于创建了一个类实例(实际上是个Object), <code>XXX()</code>函数可以对其进行进一步修饰</p>
</li>
</ul>
</li>
<li>
<p>关于<code>function</code>:</p>
<ul>
<li>函数是对象</li>
</ul>
</li>
<li>
<p>关于<code>new</code>:</p>
<ul>
<li>
<p>new的功能:</p>
<ul>
<li>
<p>创建一个空对象{}</p>
</li>
<li>
<p>设置空对象的<code>__proto__</code>(与浏览器实现有关)为构造函数的<code>prototype</code></p>
</li>
<li>
<p>让this指向空对象</p>
</li>
<li>
<p>执行构造函数, 传入参数this</p>
</li>
<li>
<p>如果构造函数不返回一个对象, 则返回this</p>
</li>
</ul>
</li>
<li>
<p>模仿一个new:</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fake_new</span>(<span class="params">ctor, ...args</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> x = <span class="title class_">Object</span>.<span class="title function_">create</span>(ctor.<span class="property"><span class="keyword">prototype</span></span>); <span class="comment">// ES5 创建新对象</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">///* before ES5 */</span></span><br><span class="line">    <span class="comment">// function F() &#123;&#125;</span></span><br><span class="line">    <span class="comment">// F.prototype = ctor.prototype;</span></span><br><span class="line">    <span class="comment">// let x = new F();</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> res = ctor.<span class="title function_">call</span>(x, ...args); <span class="comment">//借用外部传入的构造器给obj设置属性</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">typeof</span> res === <span class="string">&#x27;object&#x27;</span> ? res : x; <span class="comment">//确保构造器总是返回一个对象</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>
<p>关于<code>this</code>:</p>
<ul>
<li>
<p>如何正确绑定this</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="title function_">foo</span>(<span class="params"></span>) &#123; ... &#125;, <span class="comment">// bad, `this` is bound to the object</span></span><br><span class="line">    foo = <span class="function">() =&gt;</span> &#123; ... &#125;, <span class="comment">// good, `this` is bound dynamically</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>
<p>Javascript面向对象:</p>
<ul>
<li>
<p>不用<code>new</code>模拟对象, 利用闭包</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">makePerson</span>(<span class="params">first, last</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">first</span>: first,</span><br><span class="line">        <span class="attr">last</span>: last,</span><br><span class="line">        <span class="attr">fullName</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123; <span class="comment">// 每次创建对象时, 这个函数都会被拷贝</span></span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">first</span> + <span class="string">&#x27; &#x27;</span> + <span class="variable language_">this</span>.<span class="property">last</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">fullNameReversed</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123; <span class="comment">// 每次创建对象时, 这个函数都会被拷贝</span></span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">last</span> + <span class="string">&#x27;, &#x27;</span> + <span class="variable language_">this</span>.<span class="property">first</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> s = <span class="title function_">makePerson</span>(<span class="string">&#x27;Simon&#x27;</span>, <span class="string">&#x27;Willison&#x27;</span>);</span><br><span class="line">s.<span class="title function_">fullName</span>(); <span class="comment">// &quot;Simon Willison&quot;</span></span><br><span class="line">s.<span class="title function_">fullNameReversed</span>(); <span class="comment">// &quot;Willison, Simon&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>使用<code>new</code></p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">first, last</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">first</span> = first;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">last</span> = last;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fullName</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123; <span class="comment">// 每次创建对象时, 这个函数都会被拷贝</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">first</span> + <span class="string">&#x27; &#x27;</span> + <span class="variable language_">this</span>.<span class="property">last</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fullNameReversed</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123; <span class="comment">// 每次创建对象时, 这个函数都会被拷贝</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">last</span> + <span class="string">&#x27;, &#x27;</span> + <span class="variable language_">this</span>.<span class="property">first</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;Simon&#x27;</span>, <span class="string">&#x27;Willison&#x27;</span>);</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>优化: 减少函数对象的拷贝, 利用原型链</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">first, last</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">first</span> = first;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">last</span> = last;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">fullName</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">first</span> + <span class="string">&#x27; &#x27;</span> + <span class="variable language_">this</span>.<span class="property">last</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">fullNameReversed</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">last</span> + <span class="string">&#x27;, &#x27;</span> + <span class="variable language_">this</span>.<span class="property">first</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h1>React 复习</h1>
<ul>
<li>
<p>JSX语法</p>
  <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> element = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">className</span>=<span class="string">&quot;greeting&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;this.handleClick&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        Hello, world!</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> element = <span class="title class_">React</span>.<span class="title function_">createElement</span>(</span><br><span class="line">    <span class="string">&#x27;h1&#x27;</span>, <span class="comment">// label type</span></span><br><span class="line">    &#123;<span class="attr">className</span>: <span class="string">&#x27;greeting&#x27;</span>, <span class="attr">onClick</span>: <span class="variable language_">this</span>.<span class="property">handleClick</span>&#125;, <span class="comment">// attrs</span></span><br><span class="line">    <span class="string">&#x27;Hello, world!&#x27;</span> <span class="comment">// children</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>遇到<code>&lt;</code>开始解析HTML, 遇到<code>&#123;</code>开始解析Javascript</p>
</li>
<li>
<p>要比Vue的模板更加灵活</p>
</li>
</ul>
</li>
<li>
<p>数据流</p>
<ul>
<li>
<p>外层-&gt;内层组件: <code>props</code>, 只读</p>
</li>
<li>
<p>组件自己的状态: <code>state</code>, 可以修改</p>
<ul>
<li>
<p>初始化: 在构造函数内直接赋值</p>
</li>
<li>
<p>更新: 通过<code>this.setState(&#123;&#125;)</code></p>
</li>
<li>
<p>state可以被传递给子组件作为子组件的props</p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>受控组件:</p>
<ul>
<li>
<p>不自己维护状态的组件</p>
</li>
<li>
<p>状态变化全部交给外部来做: props.value, props.onValueChanged()</p>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Javascript</tag>
        <tag>React</tag>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/12/02/2020-12-02/</url>
    <content><![CDATA[<ul>
<li>
<p>React</p>
<ul>
<li>children属性: 子元素构成的数组</li>
</ul>
</li>
<li>
<p>React-redux</p>
<ul>
<li>
<p>引入: <code>import &#123;...&#125; from 'react-redux'</code></p>
</li>
<li>
<p><code>Store</code></p>
<ul>
<li>
<p>Redux maintains a <code>store</code>, which hold <code>state</code> and <code>reducer</code></p>
</li>
<li>
<p><code>createStore(reducer, initState)</code></p>
<ul>
<li><code>reducer</code> and <code>initState</code> should have the same keys</li>
</ul>
</li>
</ul>
</li>
<li>
<p><code>Reducer</code>: (state, action) =&gt; (newstate)</p>
</li>
<li>
<p><code>&lt;Provider&gt;</code>: Inject global <code>state</code> to its children component</p>
</li>
<li>
<p><code>connect(mapStateToProps)(Component)</code></p>
<ul>
<li>
<p>map current states to <code>Component</code>’s props</p>
</li>
<li>
<p><code>mapStateToProps</code>: is a function: (state) =&gt; { …someProp }</p>
</li>
<li>
<p>一般和<Provider>结合起来用</p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>React-Router</p>
<ul>
<li>
<p>引入: <code>import &#123;&#125; from 'react-router-dom'</code></p>
</li>
<li>
<p><code>&lt;Route path&gt;</code>: 当url与path匹配时, 渲染内容</p>
<ul>
<li>
<p><code>&lt;BrowserRouter&gt;, &lt;HashRouter&gt;</code>: <Route>的容器</p>
</li>
<li>
<p><code>&lt;Switch&gt;</code>: 保证其下的所有Route只会选中一个</p>
</li>
<li>
<p>参数化匹配</p>
<ul>
<li>
<p>参数定义: <code>path=&quot;/hsl/:h/:s/:l&quot;</code></p>
</li>
<li>
<p>参数获取: 在children组件中 <code>let &#123; h, s, l &#125; = useParams();</code></p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p><code>&lt;Link to&gt;</code>: 跳转到to的a标签</p>
<ul>
<li><code>&lt;Redirect&gt;</code>: 渲染时自动跳转</li>
</ul>
</li>
<li>
<p>嵌套使用:</p>
  <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> &#123; path, url &#125; = <span class="title function_">useRouteMatch</span>(); <span class="comment">// 获取上一级的path和url</span></span><br><span class="line"><span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#123;</span>`$&#123;<span class="attr">path</span>&#125;/<span class="attr">next</span>`&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">)</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>
<p>Vue-Router</p>
<ul>
<li>
<p><code>&lt;router-link :to&gt;</code>: 跳转的a标签</p>
</li>
<li>
<p><code>&lt;router-view&gt;</code>: 匹配的路由内容会渲染到这里</p>
</li>
<li>
<p><code>Router</code>: 在这里定义全局路由表</p>
</li>
</ul>
</li>
<li>
<p>Ubuntu 安装 rpm 包</p>
<ul>
<li>
<p>sudo apt install alien</p>
</li>
<li>
<p>sudo alien packagename.rpm</p>
</li>
<li>
<p>sudo apt install ./packagename.deb</p>
</li>
<li>
<p>一步到位: sudo alien -i packagename.rpm</p>
</li>
</ul>
</li>
<li>
<p>Oracle 的连接方式</p>
<ul>
<li>
<p>SID/System IDentifier: 数据库实例的全局唯一ID, 每个实例都不一样</p>
</li>
<li>
<p>SERVICE_NAME: 用于对外提供服务的名字, 被客户端使用</p>
<ul>
<li>也可以被数据库端用来区分对不同客户端提供的服务</li>
</ul>
</li>
<li>
<p>TNS/Transparent Network Substrate: 由Oracle创造的, 专门用于Oracle数据库连接的, 基于TCP/IP, SDP和命名管道的, 同构p2p连接技术</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// STATE.WORLD是一个TNS Name</span><br><span class="line">STAGE.WORLD =</span><br><span class="line">    (DESCRIPTION =</span><br><span class="line">        (ADDRESS =</span><br><span class="line">            (PROTOCOL = TCP) </span><br><span class="line">            (PORT = 1521)</span><br><span class="line">            (HOST = LITTLECOMPUTER.ACME.ORG) // 服务器地址</span><br><span class="line">        )</span><br><span class="line">        (CONNECT_DATA = (SID = MYSID)) // 数据库标识, 可以使用SID或者SERVICE_NAME</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">// PROD.WORLD也是一个TNS Name</span><br><span class="line">PROD.WORLD =</span><br><span class="line">    (DESCRIPTION =</span><br><span class="line">        (ADDRESS =</span><br><span class="line">            (PROTOCOL = TCP) </span><br><span class="line">            (PORT = 1521)</span><br><span class="line">            (HOST = BIGCOMPUTER.ACME.ORG)</span><br><span class="line">        )</span><br><span class="line">        (CONNECT_DATA = (SERVICE_NAME = MYNAME))</span><br><span class="line">    )</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>React</tag>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/12/03/2020-12-03/</url>
    <content><![CDATA[<h1>秘书问题</h1>
<ul>
<li>
<p>又称相亲问题、止步问题、见好就收问题、苏丹的嫁妆问题、挑剔的求婚者问题等</p>
</li>
<li>
<p>要聘请一名秘书，有 n 个应聘者。每次面试一人，面试后就要及时决定是否聘他，如果当时决定不聘他，他便不会回来。面试后总能清楚了解应聘者的合适程度，并能和之前的每个人做比较。问什么样的策略，才使最佳人选被选中的概率最大。</p>
</li>
<li>
<p>答案:</p>
  <details>
  <summary>展开</summary>
<ul>
<li>
<p>这个问题的最优解是一个停止规则。在这个规则里，面试官会拒绝头 r - 1 个应聘者 (令他们中的最佳人选为 应聘者 M)，然后选出第一个比 M 好的应聘者。可见最优策略包含于这个系列的策略中。 (如果M在所有n个应聘者中也是最好的一个，那么这个策略将选不出任何人选)对于任意的截断值 r，最佳人选被选中的概率是：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>P</mi><mrow><mo fence="true">(</mo><mtext>applicant </mtext><mi>i</mi><mtext> is selected</mtext><mo>∩</mo><mtext>applicant </mtext><mi>i</mi><mtext> is the best</mtext><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>P</mi><mrow><mo fence="true">(</mo><mtext>applicant </mtext><mi>i</mi><mtext> is selected</mtext><mi mathvariant="normal">∣</mi><mtext>applicant </mtext><mi>i</mi><mtext> is the best</mtext><mo fence="true">)</mo></mrow><mo>⋅</mo><mi>P</mi><mrow><mo fence="true">(</mo><mtext>applicant </mtext><mi>i</mi><mtext> is the best</mtext><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">[</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>r</mi><mo>−</mo><mn>1</mn></mrow></munderover><mn>0</mn><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>r</mi></mrow><mi>n</mi></munderover><mi>P</mi><mrow><mo fence="true">(</mo><mrow><mtable rowspacing="0.16em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>the best of the first </mtext><mi>i</mi><mo>−</mo><mn>1</mn><mtext> applicants</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>is in the first </mtext><mi>r</mi><mo>−</mo><mn>1</mn><mtext> applicants</mtext></mrow></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow><mtext>applicant </mtext><mi>i</mi><mtext> is the best</mtext><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow><mo>⋅</mo><mfrac><mn>1</mn><mi>n</mi></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">[</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>r</mi></mrow><mi>n</mi></munderover><mfrac><mrow><mi>r</mi><mo>−</mo><mn>1</mn></mrow><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></mfrac><mo fence="true">]</mo></mrow><mo>⋅</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mspace width="1em"/><mo>=</mo><mspace width="1em"/><mfrac><mrow><mi>r</mi><mo>−</mo><mn>1</mn></mrow><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>r</mi></mrow><mi>n</mi></munderover><mfrac><mn>1</mn><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></mfrac><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr></mtable></mstyle></mrow><annotation encoding="application/x-tex">{\displaystyle {\begin{aligned}P(r)&amp;=\sum _{i=1}^{n}P\left({\text{applicant }}i{\text{ is selected}}\cap {\text{applicant }}i{\text{ is the best}}\right)\\&amp;=\sum _{i=1}^{n}P\left({\text{applicant }}i{\text{ is selected}}|{\text{applicant }}i{\text{ is the best}}\right)\cdot P\left({\text{applicant }}i{\text{ is the best}}\right)\\&amp;=\left[\sum _{i=1}^{r-1}0+\sum _{i=r}^{n}P\left(\left.{\begin{array}{l}{\text{the best of the first }}i-1{\text{ applicants}}\\{\text{is in the first }}r-1{\text{ applicants}}\end{array}}\right|{\text{applicant }}i{\text{ is the best}}\right)\right]\cdot {\frac {1}{n}}\\&amp;=\left[\sum _{i=r}^{n}{\frac {r-1}{i-1}}\right]\cdot {\frac {1}{n}}\quad =\quad {\frac {r-1}{n}}\sum _{i=r}^{n}{\frac {1}{i-1}}.\end{aligned}}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:13.1646em;vertical-align:-6.3323em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.8323em;"><span style="top:-8.982em;"><span class="pstrut" style="height:3.8011em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span><span style="top:-5.7529em;"><span class="pstrut" style="height:3.8011em;"></span><span class="mord"></span></span><span style="top:-2.3742em;"><span class="pstrut" style="height:3.8011em;"></span><span class="mord"></span></span><span style="top:0.9535em;"><span class="pstrut" style="height:3.8011em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.3323em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.8323em;"><span style="top:-8.982em;"><span class="pstrut" style="height:3.8011em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord text"><span class="mord">applicant </span></span></span><span class="mord mathnormal">i</span><span class="mord"><span class="mord text"><span class="mord"> is selected</span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord text"><span class="mord">applicant </span></span></span><span class="mord mathnormal">i</span><span class="mord"><span class="mord text"><span class="mord"> is the best</span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-5.7529em;"><span class="pstrut" style="height:3.8011em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord text"><span class="mord">applicant </span></span></span><span class="mord mathnormal">i</span><span class="mord"><span class="mord text"><span class="mord"> is selected</span></span></span><span class="mord">∣</span><span class="mord"><span class="mord text"><span class="mord">applicant </span></span></span><span class="mord mathnormal">i</span><span class="mord"><span class="mord text"><span class="mord"> is the best</span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord text"><span class="mord">applicant </span></span></span><span class="mord mathnormal">i</span><span class="mord"><span class="mord text"><span class="mord"> is the best</span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-2.3742em;"><span class="pstrut" style="height:3.8011em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord text"><span class="mord">the best of the first </span></span></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mord"><span class="mord text"><span class="mord"> applicants</span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord text"><span class="mord">is in the first </span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mord"><span class="mord text"><span class="mord"> applicants</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.45em;"><span class="pstrut" style="height:4.4em;"></span><span style="width:0.333em;height:2.400em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.333em" height="2.400em" viewBox="0 0 333 2400"><path d="M145 15 v585 v1200 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v1200 v585 h43z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord text"><span class="mord">applicant </span></span></span><span class="mord mathnormal">i</span><span class="mord"><span class="mord text"><span class="mord"> is the best</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span style="top:0.9535em;"><span class="pstrut" style="height:3.8011em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mord">.</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.3323em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>当n趋近于无穷大时</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><msubsup><mo>∫</mo><mi>x</mi><mn>1</mn></msubsup><mfrac><mn>1</mn><mi>t</mi></mfrac><mtext> </mtext><mi>d</mi><mi>t</mi><mo>=</mo><mo>−</mo><mi>x</mi><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi></mstyle></mrow><annotation encoding="application/x-tex">{\displaystyle P(x)=x\int _{x}^{1}{\frac {1}{t}}\,dt=-x\ln(x).}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.476em;vertical-align:-0.9119em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.564em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">t</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord">.</span></span></span></span></span></span></p>
</li>
<li>
<p>求出最优的x值为</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mn>1</mn><mi>e</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac {1}{e}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">e</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
</ul>
  </details>
</li>
</ul>
<h1>Nginx 配置</h1>
<ul>
<li>
<p>root: 表示去哪个目录下寻找对应url的文件, 实际上是添加前缀</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location /aaaa/ &#123;</span><br><span class="line">    root /home/tom/www/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>请求: http://(hostname)<span style="background-color: yellow;">/aaaa/</span>hello.txt</p>
</li>
<li>
<p>返回: <span style="background-color: #cdffd8;">/home/tom/www</span><span style="background-color: yellow;">/aaaa/</span>hello.txt</p>
</li>
</ul>
</li>
<li>
<p>alias: 表示把匹配成功的路径<strong>替换</strong>成alias</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location /aaaa/ &#123;</span><br><span class="line">    alias /home/tom/www/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>请求: http://(hostname)<span style="background-color: yellow;">/aaaa/</span>hello.txt</p>
</li>
<li>
<p>返回: <span style="background-color: #cdffd8;">/home/tom/www/</span>hello.txt</p>
</li>
</ul>
</li>
<li>
<p>PS: Nginx会自动将两个连续的斜杠替换成一个</p>
</li>
</ul>
<h1>Flask 嵌套路由配置</h1>
<ul>
<li>
<p>使用<code>register_blueprint</code>时的<code>url_prefix</code>参数</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># create app, blueprints, etc.</span></span><br><span class="line">app.register_blueprint(myblueprint, url_prefix=<span class="string">&#x27;/somepath&#x27;</span>)</span><br><span class="line"><span class="comment"># ...</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1>视频网站设计思考</h1>
<ul>
<li>视频文件存储到哪里: OSS对象存储服务</li>
</ul>
<h1>数据库隔离级别</h1>
<ol>
<li>
<p>读未提交(Read Uncommitted)</p>
</li>
<li>
<p>读已提交(Read Committed)/不可重复读 大多数数据库默认的隔离级别</p>
</li>
<li>
<p>可重复读(Repeatable-Read) mysql数据库所默认的级别</p>
</li>
<li>
<p>序列化(serializable)</p>
</li>
</ol>
]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>Database</tag>
        <tag>数学基础</tag>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/12/05/2020-12-05/</url>
    <content><![CDATA[<h1>Java Spring 框架学习</h1>
<p>Spring框架，它最主要的功能就是管理一堆使App（应用）发挥功能的类，这些作为整个App的基石、主干的类，就叫做bean。</p>
<p>要管理bean，也即是这堆发挥业务功能的类，就不能直接把它们new出来，这样缺乏统一的调度。所以，Spring使用.xml配置文件作为媒介，以IoC（Inversion of Control 控制反转）作为工具，将这些bean拿给Spring container作统一管理。</p>
<h1>Git submodule 使用</h1>
<ul>
<li>
<p>添加子模块</p>
<ul>
<li><code>git submodule add &lt;url&gt; &lt;path&gt;</code></li>
</ul>
</li>
<li>
<p>设置子模块的分支</p>
<ul>
<li><code>git submodule set-branch --branch &lt;branch&gt; &lt;path&gt;</code></li>
</ul>
</li>
<li>
<p>克隆下来的项目包含子模块</p>
  <figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git submodule init</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git submodule update</span></span><br></pre></td></tr></table></figure>
<p>或者</p>
  <figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git submodule update --init --recursive</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>子模块的更新</p>
<ol>
<li>
<p>在子模块内部, 作为一般的git项目更新(<code>pull</code>)</p>
</li>
<li>
<p>在项目目录下<code>git add</code></p>
</li>
</ol>
</li>
<li>
<p>子模块的删除</p>
<ul>
<li>
<p><code>rm -rf 子模块目录</code> 删除子模块目录及源码</p>
</li>
<li>
<p>删除项目目录下.gitmodules文件中子模块相关条目</p>
</li>
<li>
<p>vi .git/config 删除配置项中子模块相关条目</p>
</li>
<li>
<p><code>rm .git/module/*</code> 删除模块下的子模块目录，每个子模块对应一个目录，注意只删除对应的子模块目录即可</p>
</li>
</ul>
</li>
</ul>
<h1>Github 开源项目包含不想公开的密码/Token等怎么处理</h1>
<p>可以将隐私数据包含在项目的Secret设置中, 在Github Action中使用脚本将隐私数据注入到文件中</p>
<h1>YAML 语言</h1>
<p>基本类型:</p>
<blockquote>
<ul>
<li>
<p>String</p>
</li>
<li>
<p>Bool: <code>true</code>, <code>false</code></p>
</li>
<li>
<p>Int</p>
</li>
<li>
<p>Number</p>
</li>
<li>
<p>null: <code>~</code></p>
</li>
<li>
<p>Time: ISO8601 格式, 例<code>2001-12-14t21:59:43.10-05:00</code></p>
</li>
<li>
<p>Date: <code>1976-07-31</code></p>
</li>
</ul>
</blockquote>
<p>注释: <code>#</code></p>
<p>使用左端对齐的键值对表示对象:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">key1:</span> <span class="string">abc</span></span><br><span class="line">  <span class="attr">key2:</span> <span class="number">123</span></span><br><span class="line">  <span class="attr">key3:</span> <span class="string">sss</span></span><br></pre></td></tr></table></figure>
<p>使用以<code>-</code>开头的对齐的值表示数组:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">fruits:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">apple</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">banana</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">orange</span></span><br></pre></td></tr></table></figure>
<p>数组套对象:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">objs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">object</span> <span class="string">A</span></span><br><span class="line">    <span class="attr">desp:</span> <span class="string">I&#x27;am</span> <span class="string">an</span> <span class="string">object</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Object</span> <span class="string">B</span></span><br><span class="line">    <span class="attr">desp:</span> <span class="string">I&#x27;am</span> <span class="string">another</span> <span class="string">object</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Object</span> <span class="string">C</span></span><br><span class="line">    <span class="attr">desp:</span> <span class="string">I&#x27;am</span> <span class="string">still</span> <span class="string">an</span> <span class="string">object</span></span><br></pre></td></tr></table></figure>
<p>数组套数组:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">matrix:</span> </span><br><span class="line">  <span class="bullet">-</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="string">a11</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">a12</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">a13</span></span><br><span class="line">  <span class="bullet">-</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="string">a21</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">a22</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">a23</span></span><br><span class="line">  <span class="bullet">-</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="string">a31</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">a32</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">a33</span></span><br></pre></td></tr></table></figure>
<p>对象套数组:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">frezcirno</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Boy</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Handsome</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Student</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Cool</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Spring</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/12/04/2020-12-04/</url>
    <content><![CDATA[<h1>Java 包(Package), Jar和模块(Module)的区别</h1>
<ul>
<li>
<p>包 (Package)</p>
<ul>
<li>
<p>是Java源文件的集合, 包含Class/Interface/Annotation的定义</p>
</li>
<li>
<p>与文件系统中的目录对应</p>
</li>
<li>
<p>主要目的是<em>防止命名冲突</em></p>
</li>
</ul>
</li>
<li>
<p>Jar (Java Archive File)</p>
<ul>
<li>
<p>是编译后的Java代码(<code>.class</code>)的压缩包</p>
</li>
<li>
<p>实际上是一个zip格式文件</p>
</li>
<li>
<p>对Jar的操作用<code>jar</code>命令, 其语法类似Linux下的<code>tar</code></p>
<ul>
<li>
<p>创建Jar包: <code>jar cvf test.jar test</code></p>
</li>
<li>
<p>解压Jar包: <code>jar xvf test.jar</code></p>
</li>
<li>
<p>列举Jar包的内容: <code>jar tvf test.jar</code></p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>模块 (Module)</p>
<ul>
<li>
<p>是Java语言内置的一种管理组件之间依赖关系的方法, 在Java 9被引入</p>
</li>
<li>
<p>Module 解决的问题:</p>
<ul>
<li>
<p>在Java 9之前, <strong>主要使用package作为封装方式，使用Jar作为模块, 封装方式由 package和访问修饰符 (private, protected, public,包私有) 控制</strong></p>
<ul>
<li>
<p>任何模块都能访问其他模块的public的代码，不同Jar下的同名包可以相互访问包私有的代码。</p>
</li>
<li>
<p>无法控制非平台开发者对平台内部包的访问，如应用代码可以访问sun.misc、com.sun.security这样和具体平台绑定的包。</p>
</li>
<li>
<p>没有明确的依赖信息，模块开发者无法设置必须的依赖，模块使用者不清楚该模块必须依赖哪些模块。只能使用外部的工具，如Maven、Gradle、OSGI等。</p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>Module 的优势</p>
<ul>
<li>
<p>明确的依赖配置，JPMS会在编译和运行之前检查当前环境是否满足依赖的要求。JPMS会检查版本冲突，即当有两个模块暴露了相同的包名时，系统会抛出异常。JPMS支持传递性依赖。</p>
</li>
<li>
<p>强大的封装，模块可以明确指定哪些包能暴露给哪些模块，JPMS不允许代码使用反射的方式访问不对外开放的包。</p>
</li>
<li>
<p>性能优化，JPMS完全清楚哪些模块是需要的，所以不需要的模块不会被JVM载入。</p>
</li>
</ul>
</li>
<li>
<p>Module 的不足:</p>
<ul>
<li>缺乏对模块的版本的支持</li>
</ul>
</li>
<li>
<p>特点:</p>
<pre><code>![](https://frezcirno.github.io/static/images/2020-12-04-java-module.jpg)
</code></pre>
</li>
</ul>
</li>
</ul>
<h1>Linux (Ubuntu) 硬件管理</h1>
<ul>
<li>
<p>通用</p>
<ul>
<li><code>lshw -short</code>: 列举所有硬件信息</li>
</ul>
</li>
<li>
<p>CPU</p>
<ul>
<li>
<p><code>lscpu</code>: 查看CPU信息</p>
</li>
<li>
<p><code>cat /proc/cpuinfo</code>: 查看每个CPU的信息</p>
</li>
</ul>
</li>
<li>
<p>内存</p>
<ul>
<li>
<p><code>free [-m|-g|-k|-b|-h]</code>: 查看内存使用情况</p>
</li>
<li>
<p><code>cat /proc/meminfo</code>: 查看内存详细使用情况</p>
</li>
<li>
<p><code>dmidecode -t memory</code>: 查看内存硬件信息</p>
</li>
</ul>
</li>
<li>
<p>硬盘</p>
<ul>
<li>
<p><code>lsblk</code>: 查看硬盘和分区信息</p>
</li>
<li>
<p><code>fdisk -l</code>: 查看详细分区表</p>
</li>
<li>
<p><code>df -h</code>: 查看硬盘剩余空间</p>
</li>
</ul>
</li>
<li>
<p>主板 BIOS</p>
<ul>
<li><code>dmidecode -t bios</code>: 查看bios信息</li>
</ul>
</li>
<li>
<p>PCI设备</p>
<ul>
<li><code>lspci</code></li>
</ul>
</li>
<li>
<p>网卡</p>
<ul>
<li>
<p><code>lspci | grep -i 'Ethernet'</code>: 查看网卡硬件信息 (Ethernet 以太网)</p>
</li>
<li>
<p><code>lspci | grep -i 'Wireless'</code>: 查看无线网卡硬件信息</p>
</li>
<li>
<p><code>ifconfig -a</code>: 查看系统的所有网络接口</p>
</li>
</ul>
</li>
<li>
<p>USB 设备</p>
<ul>
<li><code>lsusb</code></li>
</ul>
</li>
</ul>
<h1>apt remove 与 apt purge 的区别</h1>
<ul>
<li>purge会删除配置文件, 而remove只会删除程序文件</li>
</ul>
<h1>Java 学习</h1>
<ul>
<li>
<p>Java多线程</p>
<ul>
<li>interrupt() 向该进程发送中断信号, 具体怎么处理由该进程实现</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/12/07/2020-12-07/</url>
    <content><![CDATA[<h1>Visio 画图如何添加自定义连接点</h1>
<p>在工具栏选中&quot;连接点&quot;</p>
<p>按住<kbd>Ctrl</kbd>键, 在画布上点击即可</p>
<p>有时候可能需要多点几次</p>
<h1>为什么校园网这么卡</h1>
<h1>Linux 创建用户时忘了使用<code>-m</code>参数创建用户目录怎么办</h1>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mkhomedir_helper &lt;username&gt;</span></span><br></pre></td></tr></table></figure>
<h1>xargs 命令</h1>
<p>xargs命令用于将上一个命令通过管道输出的内容, 作为命令行参数传递给下一个命令</p>
<p>xargs后面的命令默认是echo</p>
<p>即: stdin -&gt; **argv</p>
<h1>tee 命令</h1>
<p>tee命令用于将标准输入复制多份, 分别输出到不同的文件, 并输出到标准输出中去</p>
<p>可以用来复制文件</p>
<ul>
<li>输出管道中某一段的内容:</li>
</ul>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">... | <span class="built_in">tee</span> &gt;(xargs <span class="built_in">echo</span>) &gt;/dev/null | ...</span></span><br></pre></td></tr></table></figure>
<ul>
<li>不退出vim使用sudo保存文件</li>
</ul>
<p>命令<code>:w !&#123;cmd&#125;</code>表示把当前缓冲区的内容传给后面的命令</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">:w !sudo tee % </span><br></pre></td></tr></table></figure>
<h1>echo 命令</h1>
<p>echo命令用于将命令行参数输出到标准输出</p>
<p>即: stdin -&gt; stdout</p>
<h1>awk 命令</h1>
<p>强大的字符串处理工具</p>
<p>最基本的用法:
<code>awk '&#123;print$1,$2&#125;'</code></p>
]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>Visio</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/12/06/2020-12-06/</url>
    <content><![CDATA[<h1>学习Oracle使用</h1>
<p><a href="../oracledb/index">OracleDB</a></p>
]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/12/09/2020-12-09/</url>
    <content><![CDATA[<h1>Spring学习</h1>
<h2 id="ioc容器"><a class="header-anchor-1" href="#ioc容器">#</a>IoC容器</h2>
<p>Spring类似一个类实例的工厂, 我们提供配置文件(.Java, .xml), Spring按照配置文件装配产品.</p>
<p>Spring的核心IoC容器接口是<code>ApplicationContext</code>，并提供了多种实现类:
例如读取xml文件的<code>ClassPathXmlApplicationContext</code>, 使用注解的<code>AnnotationConfigApplicationContext</code></p>
<h2 id="java的web框架"><a class="header-anchor-1" href="#java的web框架">#</a>Java的Web框架</h2>
<ul>
<li>
<p>Struts: 最古老的一个MVC框架，目前版本是2，和1.x有很大的区别；</p>
</li>
<li>
<p>WebWork(Struts 2.0): 一个比Struts设计更优秀的MVC框架；</p>
</li>
<li>
<p>Turbine: 一个重度使用Velocity，强调布局的MVC框架；</p>
</li>
<li>
<p>其他100+MVC框架……（略）</p>
</li>
</ul>
<p>Spring本身也开发了一个MVC框架，就叫Spring MVC。</p>
<h2 id="spring连接数据库"><a class="header-anchor-1" href="#spring连接数据库">#</a>Spring连接数据库</h2>
<ul>
<li>
<p>使用jdbcTemplate</p>
</li>
<li>
<p>使用Hibernate集成框架</p>
</li>
<li>
<p>使用MyBatis集成框架</p>
</li>
</ul>
]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/12/10/2020-12-10/</url>
    <content><![CDATA[<h1>Java的ORM框架 vs Python的ORM框架</h1>
<p>TODO: 待更新</p>
<h1>为什么需要CORS? CORS是为了保护谁?</h1>
<p>CORS标准允许服务器指定谁可以访问该服务器上的资源, 以及该如何访问这些资源</p>
<p>所以说其实是保护服务器端, 防止恶意网站窃取数据</p>
<h1>信息安全之盲水印</h1>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzUwNzM1NzUz">妙啊<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>ORM框架</tag>
        <tag>CORS</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/12/11/2020-12-11/</url>
    <content><![CDATA[<h2 id="linux-内核提权"><a class="header-anchor-1" href="#linux-内核提权">#</a>Linux 内核提权</h2>
<ul>
<li>获取内核版本</li>
</ul>
<p><code>uname -a</code></p>
<p><code>lsb_release -a</code></p>
<ul>
<li>查询可用的 exploit</li>
</ul>
<p>在 Kali 中 <code>searchsploit Linux x.x.xx priv</code></p>
<p>人工筛选</p>
<ul>
<li>传到目标机器上碰运气</li>
</ul>
<h2 id="gcc-编译参数"><a class="header-anchor-1" href="#gcc-编译参数">#</a>GCC 编译参数</h2>
<p>目标机器上的 header/lib 可能不能正常使用, 此时可以下载一套 header/lib 放在用户目录, 用下面的方式指定</p>
<p>指定 include 目录: <code>-I&lt;path&gt;</code></p>
<p>指定连接库目录: <code>-L&lt;path&gt; -l&lt;libname&gt;</code></p>
<h2 id="忘了报名-ncre-悲"><a class="header-anchor-1" href="#忘了报名-ncre-悲">#</a>忘了报名 NCRE, 悲</h2>
]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>信息安全</tag>
        <tag>GCC</tag>
        <tag>NCRE</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/12/13/2020-12-13/</url>
    <content><![CDATA[<h2 id="c-stl-中-unique-的用法"><a class="header-anchor-1" href="#c-stl-中-unique-的用法">#</a>C++ STL 中 unique 的用法</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">ForwardIterator</span>&gt;</span><br><span class="line">  <span class="function">ForwardIterator <span class="title">unique</span> <span class="params">( ForwardIterator first, ForwardIterator last )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">ForwardIterator</span>, <span class="keyword">class</span> <span class="title class_">BinaryPredicate</span>&gt;</span><br><span class="line">  <span class="function">ForwardIterator <span class="title">unique</span> <span class="params">( ForwardIterator first, ForwardIterator last,</span></span></span><br><span class="line"><span class="params"><span class="function">                           BinaryPredicate pred )</span></span>;</span><br></pre></td></tr></table></figure>
<p>将<code>[first, last)</code>之间, <strong>相邻</strong>的多个相同元素合并为一个, 返回指向不重复部分末尾的迭代器. 多和 sort 函数一起使用</p>
<p>例: 使用 unique 实现<span class="exturl" data-url="aHR0cHM6Ly9vaS13aWtpLm9yZy9taXNjL2Rpc2NyZXRlLw==">离散化<i class="fa fa-external-link-alt"></i></span>:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// vector&lt;int&gt; array;</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">auto</span> disc = array;</span><br><span class="line"><span class="built_in">sort</span>(disc.<span class="built_in">begin</span>(), disc.<span class="built_in">end</span>());</span><br><span class="line">disc.<span class="built_in">erase</span>(<span class="built_in">unique</span>(disc.<span class="built_in">begin</span>(), disc.<span class="built_in">end</span>()), disc.<span class="built_in">end</span>())</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; disc.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">  disc[i] = <span class="built_in">lower_bound</span>(array.<span class="built_in">begin</span>(), array.<span class="built_in">end</span>(), disc[i]) - array.<span class="built_in">begin</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 那么disc就可以作为离散化之后的索引</span></span><br><span class="line"><span class="comment">// disc[i] = array中第i种元素的最小下标</span></span><br></pre></td></tr></table></figure>
<h2 id="ccfcsp"><a class="header-anchor-1" href="#ccfcsp">#</a>CCFCSP</h2>
<p>今天考了 CCF CSP.</p>
<h2 id="区间树-interval-tree-和线段树-segment-tree"><a class="header-anchor-1" href="#区间树-interval-tree-和线段树-segment-tree">#</a>区间树(Interval Tree)和线段树(Segment Tree)</h2>
]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>STL</tag>
        <tag>CCFCSP</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/12/15/2020-12-15/</url>
    <content><![CDATA[<h2 id="为什么要使用-mongodb"><a class="header-anchor-1" href="#为什么要使用-mongodb">#</a>为什么要使用 mongodb</h2>
<ul>
<li>
<p>不需要预先定义 schema 即可存储数据, 适合于快速原型开发, 以及需求经常变更的情况</p>
</li>
<li>
<p>存储使用的 BSON 格式非常灵活, 可以表示像数组, 字典这样的数据, 而在 RDB 中需要拆分成多个表</p>
</li>
</ul>
<h2 id="sitemap"><a class="header-anchor-1" href="#sitemap">#</a>Sitemap</h2>
<blockquote>
<p>站点地图（英语：Sitemaps，旧称 Google Sitemaps，也写为 Sitemap；又称网站地图）是一种列有某个网站所有网址（URL）的 XML 文件，由 Google 最先发起。利用 Sitemaps 协议，网站管理员可以列出网站上可以供搜索引擎抓取的 URL，并通知给后者。Sitemaps 中包含有关每个 URL 的其他信息，如 URL 上次更新的时间、更新的频率以及相对于网站其他 URL 的重要性。搜索引擎的爬虫可以通过 Sitemaps 更有效地抓取网站内容，并找到可能与网站其他内容没有相互链接的 URL。Sitemaps 协议是对 robots.txt 的补充。</p>
</blockquote>
<p>简单来说就是列举了网站所有页面的一个 xml 文件, 附带了一些 meta 信息, 有利于搜索引擎抓取, SEO 方法之一.</p>
<p>一般通过程序生成</p>
]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>SEO</tag>
        <tag>Sitemap</tag>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/12/17/2020-12-17/</url>
    <content><![CDATA[<h2 id="spring-doc-openapi-注解"><a class="header-anchor-1" href="#spring-doc-openapi-注解">#</a>Spring-doc OpenAPI 注解</h2>
<p>@Operation
@Response
@Parameter</p>
<h2 id="ubuntu-设置代理"><a class="header-anchor-1" href="#ubuntu-设置代理">#</a>Ubuntu 设置代理</h2>
<p>启动 clash for linux</p>
<ul>
<li>
<p>配置代理地址配置文件</p>
</li>
<li>
<p>配置 restAPI 地址和访问密码</p>
</li>
<li>
<p>将 clash 作为一个 daemon 进程:</p>
<ul>
<li>
<p>使用 systemd:</p>
<p>先创建配置文件<code>/etc/systemd/system/clash.service</code></p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Clash Daemon</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/bin/clash -d /etc/clash/</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<p>然后 clash 就成为了一个 service, 可以通过 systemctl 命令启动, 通过 journalctl 命令查看日志等</p>
</li>
<li>
<p>使用 pm2: <code>pm2 start clash</code></p>
</li>
</ul>
</li>
<li>
<p>在.bashrc 或者.zshrc 文件底部设置</p>
</li>
</ul>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> all_proxy=<span class="string">&#x27;socks5://localhost:7891&#x27;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> http_proxy=<span class="string">&#x27;http://localhost:7890&#x27;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> https_proxy=<span class="string">&#x27;http://localhost:7890&#x27;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> ftp_proxy=<span class="string">&#x27;http://localhost:7890&#x27;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> no_proxy=<span class="string">&#x27;localhost,127.0.0.1&#x27;</span></span></span><br></pre></td></tr></table></figure>
<h2 id="shell-的类型"><a class="header-anchor-1" href="#shell-的类型">#</a>Shell 的类型</h2>
<h3 id="shell-的类型-2"><a class="header-anchor-1" href="#shell-的类型-2">#</a>shell 的类型</h3>
<p>常见的 shell 有 sh, bash, zsh 等,</p>
<p>查看当前使用的 shell: <code>echo $SHELL</code></p>
<p>查看系统中的所有 shell: <code>cat /etc/shells</code></p>
<h3 id="登录-shell-和非登录-shell"><a class="header-anchor-1" href="#登录-shell-和非登录-shell">#</a>登录 shell 和非登录 shell</h3>
<h3 id="交互式-shell-和非交互式-shell"><a class="header-anchor-1" href="#交互式-shell-和非交互式-shell">#</a>交互式 shell 和非交互式 shell</h3>
<h3 id="profile-和-xxshrc"><a class="header-anchor-1" href="#profile-和-xxshrc">#</a>.profile 和 .xxshrc</h3>
<ul>
<li>
<p>/etc/profile 为系统的每个用户设置环境信息,当第一个用户登录时, 该文件被执行, 并从/etc/profile.d 目录的配置文件中搜集 shell 的设置</p>
</li>
<li>
<p>/etc/xxshrc 为每一个运行 xx shell 的用户执行此文件. 当 xx shell 被打开时, 该文件被读取。有些 linux 版本中的/etc 目录下已经没有了该文件。</p>
</li>
<li>
<p>~/.profile 每个用户都可使用该文件输入专用于自己使用的 shell 信息, 当用户登录时,该文件仅仅执行一次 默认情况下,它设置一些环境变量,然后执行用户的.xxshrc 文件.</p>
</li>
<li>
<p>~/.xxshrc 该文件包含专用于某个用户的 xx shell 的配置, 当该用户登录时以及每次打开新的 xx shell 时,该文件被读取.</p>
</li>
</ul>
<h2 id="hexo-layout"><a class="header-anchor-1" href="#hexo-layout">#</a>Hexo layout</h2>
<p>hexo 中每种不同的页面样式称为一个 layout</p>
<p>根据 md 放置的位置不同, 使用的 layout 也不同</p>
]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Java</tag>
        <tag>Spring</tag>
        <tag>Swagger</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/12/18/2020-12-18/</url>
    <content><![CDATA[<h2 id="oracle-apex-怎么调用-procedure"><a class="header-anchor-1" href="#oracle-apex-怎么调用-procedure">#</a>Oracle Apex 怎么调用 procedure</h2>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ANALYSIS(<span class="number">6</span>, <span class="number">1000</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/12/19/2020-12-19/</url>
    <content><![CDATA[<h2 id="spring-中-filter-和-interceptor-的区别"><a class="header-anchor-1" href="#spring-中-filter-和-interceptor-的区别">#</a>Spring 中 Filter 和 Interceptor 的区别</h2>
<p>Filter 和 Interceptor 都可以实现对请求的拦截</p>
<h3 id="功能定位"><a class="header-anchor-1" href="#功能定位">#</a>功能定位</h3>
<p>都可以用来实现用户认证</p>
<h3 id="区别"><a class="header-anchor-1" href="#区别">#</a>区别</h3>
<ul>
<li>
<p>定义规范不同</p>
<p>Filter 是 Servlet 的规范; 而 Interceptor 是 Spring 框架提供的类似的拦截器</p>
</li>
<li>
<p>拦截范围不同</p>
<p>Filter 的拦截范围是 Servlet 层; Interceptor 的拦截范围是 Controller 层</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">    │   ▲</span><br><span class="line">    ▼   │</span><br><span class="line">    ┌───────┐</span><br><span class="line">    │Filter1│</span><br><span class="line">    └───────┘</span><br><span class="line">    │   ▲</span><br><span class="line">    ▼   │</span><br><span class="line">    ┌───────┐</span><br><span class="line">    │Filter2│</span><br><span class="line">    └───────┘</span><br><span class="line">    │   ▲</span><br><span class="line">    ▼   │</span><br><span class="line">┌─────────────────┐</span><br><span class="line">│DispatcherServlet│&lt;───┐</span><br><span class="line">└─────────────────┘    │</span><br><span class="line">│              ┌────────────┐</span><br><span class="line">│              │ModelAndView│</span><br><span class="line">│              └────────────┘</span><br><span class="line">│ ┌ ─ ─ ─ ─ ─ ─ ─ ─ ┐ ▲</span><br><span class="line">│    ┌───────────┐    │</span><br><span class="line">├─┼─&gt;│Controller1│──┼─┤</span><br><span class="line">│    └───────────┘    │</span><br><span class="line">│ │                 │ │</span><br><span class="line">│    ┌───────────┐    │</span><br><span class="line">└─┼─&gt;│Controller2│──┼─┘</span><br><span class="line">    └───────────┘</span><br><span class="line">└ ─ ─ ─ ─ ─ ─ ─ ─ ┘</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>管理方式不同</p>
<p>Filter 由 Servlet 容器管理, 需要使用<code>DelegatingFilterProxy</code>代理类才能被 Spring 集成; Interceptor 直接由 Spring IoC 容器管理</p>
</li>
</ul>
]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/12/25/2020-12-25/</url>
    <content><![CDATA[<h1>Java 答辩结束了, Yeah</h1>
<p>今天开始刷题</p>
<h1>Hash Map, Hash Set vs Tree Map, Tree Set</h1>
<p>c++中的<code>map</code>, <code>set</code>默认是treemap和treeset, 底层基于红黑树, 元素始终保持有序</p>
<p>而<code>unordered_map</code>, <code>unordered_set</code>底层基于哈希表</p>
<h2 id="对比"><a class="header-anchor-1" href="#对比">#</a>对比</h2>
<p>查询/插入/删除</p>
<table>
<thead>
<tr>
<th>数据结构</th>
<th>底层</th>
<th>find/get/contain</th>
<th>set</th>
<th>delete</th>
</tr>
</thead>
<tbody>
<tr>
<td>map</td>
<td>tree</td>
<td>O(1)</td>
<td>O(1)</td>
<td>O(1)</td>
</tr>
<tr>
<td>unordered_map</td>
<td>hash</td>
<td>O(1)</td>
<td>O(1)</td>
<td>O(1)</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>数据结构</th>
<th>底层</th>
<th>find/contain</th>
<th>insert</th>
<th>delete</th>
</tr>
</thead>
<tbody>
<tr>
<td>set</td>
<td>tree</td>
<td>O(1)</td>
<td>O(1)</td>
<td>O(1)</td>
</tr>
<tr>
<td>unordered_set</td>
<td>hash</td>
<td>O(1)</td>
<td>O(1)</td>
<td>O(1)</td>
</tr>
</tbody>
</table>
<p>遍历</p>
<p><code>map</code>和<code>set</code>都支持按序遍历, 而<code>unordered_map</code>, <code>unordered_set</code>天生就不适合按序遍历(底层不是按序存储), 但是可以无序遍历</p>
<h1>Java 项目总结</h1>
<h2 id="前端"><a class="header-anchor-1" href="#前端">#</a>前端</h2>
<h2 id="后端"><a class="header-anchor-1" href="#后端">#</a>后端</h2>
<h3 id="java-web项目的基本结构"><a class="header-anchor-1" href="#java-web项目的基本结构">#</a>Java Web项目的基本结构</h3>
<p>Controller层: 前端实际调用的接口, 包括用户鉴权, 页面跳转等等, 接口内部调用Service层来实现功能.</p>
<p>Service层: 实际的业务逻辑, 一般按照功能分包, 尽量做到与Controller层脱钩, 一般都是些无状态函数(对环境不做任何假设)</p>
<p>DAO层: 与数据库相关的代码, 也被称为持久层</p>
<h3 id="spring框架"><a class="header-anchor-1" href="#spring框架">#</a>Spring框架</h3>
<p>Spring框架的核心:</p>
<ol>
<li>
<p>通过依赖注入来降低代码之间的耦合(IoC控制反转)</p>
<p>例如: <code>@Autowired</code>, <code>@Bean</code>, <code>@Resource</code></p>
</li>
<li>
<p>对AOP的支持</p>
<p>这个没怎么用到</p>
</li>
<li>
<p>对各种工具的集成和支持</p>
<p>例如: Spring Data JPA, Spring Security等等</p>
</li>
</ol>
<h3 id="spring-boot框架"><a class="header-anchor-1" href="#spring-boot框架">#</a>Spring Boot框架</h3>
<p>Spring Boot能够自动识别项目中开启的功能(通过扫描安装的依赖包or配置文件?)</p>
<p>项目配置全部写在<code>application.[properties|yml]</code>中, 框架会自动识别</p>
<p>也可以自己定义一些key, 在代码中通过<code>@Value(&quot;xxx.yyy&quot;)</code>注入</p>
<h3 id="jwt鉴权"><a class="header-anchor-1" href="#jwt鉴权">#</a>JWT鉴权</h3>
<p><span class="exturl" data-url="aHR0cHM6Ly9qd3QuaW8v">JWT<i class="fa fa-external-link-alt"></i></span>的三部分: <code>Header.Payload.Signature</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Header</span> = &#123;<span class="string">&quot;alg&quot;</span>:<span class="string">&quot;HS256&quot;</span>,<span class="string">&quot;typ&quot;</span>:<span class="string">&quot;JWT&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Payload</span> = &#123;<span class="string">&quot;sub&quot;</span>:<span class="string">&quot;1234567890&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;John Doe&quot;</span>,<span class="string">&quot;iat&quot;</span>:<span class="number">1516239022</span>&#125;</span><br><span class="line"></span><br><span class="line">_Header64 = <span class="title function_">base64UrlEncode</span>(<span class="title class_">Header</span>)</span><br><span class="line">_Payload64 = <span class="title function_">base64UrlEncode</span>(<span class="title class_">Payload</span>)</span><br><span class="line"></span><br><span class="line"><span class="title class_">Signature</span> = <span class="title class_">HMACSHA256</span>(<span class="string">`<span class="subst">$&#123;_Header64&#125;</span>.<span class="subst">$&#123;_Payload64&#125;</span>`</span>, $&#123;your-<span class="number">256</span>-bit-secret&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable constant_">JWT</span> = <span class="string">`<span class="subst">$&#123;_Header64&#125;</span>.<span class="subst">$&#123;_Payload64&#125;</span>.<span class="subst">$&#123;Signature&#125;</span>`</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
        <tag>答辩</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/12/27/2020-12-27/</url>
    <content><![CDATA[<h1>配环境心得</h1>
<p>放平心态</p>
<h1>Linux之图形化界面</h1>
<h2 id="x-vs-wayland"><a class="header-anchor-1" href="#x-vs-wayland">#</a>X vs. Wayland</h2>
<p>X是最广泛使用的linux显示服务器, 是底层的图形化界面显示标准</p>
<h2 id="display-manager"><a class="header-anchor-1" href="#display-manager">#</a>Display Manager</h2>
<p>显示管理器(或登录管理器)是一个在启动最后显示的图形界面. 负责管理用户登录, 启动X等等. 有些集成在桌面环境中.</p>
<p>用户一般直接与显示管理器打交道.</p>
<p>常见的显示管理器有:</p>
<ul>
<li>GDM(GNOME)</li>
<li>LXDM(LXDE)</li>
<li>lightDM(支持多种DE)
等等</li>
</ul>
<h2 id="desktop-environment"><a class="header-anchor-1" href="#desktop-environment">#</a>Desktop Environment</h2>
<p>桌面环境通过汇集使用相同组件库的程序, 为用户提供了完全的图形用户界面.</p>
<p>常见的桌面环境有:</p>
<ul>
<li>GNOME</li>
<li>KDE</li>
<li>Xfce
等等</li>
</ul>
<h2 id="远程桌面"><a class="header-anchor-1" href="#远程桌面">#</a>远程桌面</h2>
<ul>
<li>xdmcp</li>
<li>vnc</li>
</ul>
]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2020/12/30/2020-12-30/</url>
    <content><![CDATA[<h1>计网答辩顺利</h1>
<p>开心!</p>
<h1>WiFi协议(802.11)扫盲</h1>
<h2 id="基本概述"><a class="header-anchor-1" href="#基本概述">#</a>基本概述</h2>
<ol>
<li>
<p>有线与无线网络</p>
<p>当前有线网络中最著名的是以太网(Ethernet), 无线网络中最有前景的是WiFi.</p>
<p>无线网络的缺点:</p>
<ul>
<li>通信双方因为是通过无线进行通信，所以通信之前需要建立连接；而有线网络就直接用线缆连接，不用这个过程了。</li>
<li>通信双方通信方式是半双工的通信方式；而有线网络可以是全双工。</li>
<li>通信时在网络层以下出错的概率非常高，所以帧的重传概率很大，需要在网络层之下的协议添加重传的机制（不能只依赖上面TCP/IP的延时等待重传等开销来保证）；而有线网络出错概率非常小，无需在网络层有如此复杂的机制。</li>
<li>数据是在无线环境下进行的，所以抓包非常容易，存在安全隐患。</li>
<li>因为收发无线信号，所以功耗较大，对电池来说是一个考验。</li>
<li>相对有线网络吞吐量低，这一点正在逐步改善，802.11n协议可以达到600Mbps的吞吐量。</li>
</ul>
</li>
<li>
<p>协议</p>
<p>Ethenet和Wifi采用的协议都属于IEEE 802协议集。其中，Ethenet以802.3协议做为其网络层以下的协议；而Wifi以802.11做为其网络层以下的协议。无论是有线网络，还是无线网络，其网络层以上的部分，基本一样。</p>
</li>
<li>
<p>术语</p>
<p>讲述之前，我们需要对无线网络中一些常用的术语有所了解。这里先列出一些，后面描述中出现的新的术语，将会在描述中解释。</p>
<ul>
<li>
<p>LAN：即局域网，是路由和主机组成的内部局域网，一般为有线网络。</p>
</li>
<li>
<p>WAN：即广域网，是外部一个更大的局域网。</p>
</li>
<li>
<p>WLAN（Wireless LAN，即无线局域网）：前面我们说过LAN是局域网，其实大多数指的是有线网络中的局域网，无线网络中的局域网，一般用WLAN。</p>
</li>
<li>
<p>AP（Access point的简称，即访问点，接入点）：是一个无线网络中的特殊节点，通过这个节点，无线网络中的其它类型节点可以和无线网络外部以及内部进行通信。这里，AP和无线路由都在一台设备上（即Cisco E3000）。</p>
</li>
<li>
<p>Station（工作站）：表示连接到无线网络中的设备，这些设备通过AP，可以和内部其它设备或者无线网络外部通信。</p>
</li>
<li>
<p>Assosiate：连接。如果一个Station想要加入到无线网络中，需要和这个无线网络中的AP关联（即Assosiate）。</p>
</li>
<li>
<p>SSID：用来标识一个无线网络，后面会详细介绍，我们这里只需了解，每个无线网络都有它自己的SSID。</p>
</li>
<li>
<p>BSSID：用来标识一个BSS，其格式和MAC地址一样，是48位的地址格式。一般来说，它就是所处的无线接入点的MAC地址。某种程度来说，它的作用和SSID类似，但是SSID是网络的名字，是给人看的，BSSID是给机器看的，BSSID类似MAC地址。</p>
</li>
<li>
<p>BSS（Basic Service Set）：由一组相互通信的工作站组成，是802.11无线网络的基本组件。主要有两种类型的IBSS和基础结构型网络。IBSS又叫ADHOC，组网是临时的，通信方式为Station&lt;-&gt;Station，这里不关注这种组网方式；我们关注的基础结构形网络，其通信方式是Station&lt;-&gt;AP&lt;-&gt;Station，也就是所有无线网络中的设备要想通信，都得经过AP。在无线网络的基础形网络中，最重要的两类设备：AP和Station。</p>
</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>daily</category>
        <category>2020</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
        <tag>答辩</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2021/01/04/2021-01-04/</url>
    <content><![CDATA[<h1>iOS答辩</h1>
<h1>数据仓库答辩</h1>
<h2 id="答辩心得"><a class="header-anchor-1" href="#答辩心得">#</a>答辩心得:</h2>
<h3 id="关于ppt"><a class="header-anchor-1" href="#关于ppt">#</a>关于PPT</h3>
<ol>
<li>Explicit is better than Implicit!</li>
</ol>
]]></content>
      <categories>
        <category>daily</category>
        <category>2021</category>
      </categories>
      <tags>
        <tag>答辩</tag>
        <tag>PPT制作</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2021/01/08/2021-01-08/</url>
    <content><![CDATA[<h2 id="没什么成果的一天"><a class="header-anchor-1" href="#没什么成果的一天">#</a>没什么成果的一天</h2>
<p>复习线代</p>
<p>配Oracle, timesten</p>
]]></content>
      <categories>
        <category>daily</category>
        <category>2021</category>
      </categories>
      <tags>
        <tag>摸鱼</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2021/01/07/2021-01-07/</url>
    <content><![CDATA[<h2 id="关于url末尾的斜杠"><a class="header-anchor-1" href="#关于url末尾的斜杠">#</a>关于URL末尾的斜杠</h2>
<p>URL末尾有无斜杠会对按相对路径加载的资源造成影响</p>
<table>
<thead>
<tr>
<th>路径</th>
<th>当前渲染的文件</th>
<th>当前目录</th>
</tr>
</thead>
<tbody>
<tr>
<td><span class="exturl" data-url="aHR0cDovL2Zvb2Jhci5jb20vZXhhbXBsZQ==">foobar.com/example<i class="fa fa-external-link-alt"></i></span><b>/</b></td>
<td><strong>/example/index.html</strong></td>
<td><strong>/example</strong></td>
</tr>
<tr>
<td><span class="exturl" data-url="aHR0cDovL2Zvb2Jhci5jb20vZXhhbXBsZQ==">foobar.com/example<i class="fa fa-external-link-alt"></i></span></td>
<td><strong>/example.html</strong></td>
<td><strong>/</strong></td>
</tr>
</tbody>
</table>
<p>按绝对路径加载的资源不会受到影响</p>
<h2 id="uwsgi作为daemon启动"><a class="header-anchor-1" href="#uwsgi作为daemon启动">#</a>uwsgi作为daemon启动</h2>
<h3 id="方法1"><a class="header-anchor-1" href="#方法1">#</a>方法1</h3>
<p>添加<code>-d</code>参数</p>
<p><code>$ uwsgi -d --ini app.ini</code></p>
<h3 id="方法2"><a class="header-anchor-1" href="#方法2">#</a>方法2</h3>
<p>在ini文件中添加<code>daemonize = /var/log/uwsgi.log</code></p>
]]></content>
      <categories>
        <category>daily</category>
        <category>2021</category>
      </categories>
      <tags>
        <tag>uwsgi</tag>
        <tag>URL</tag>
      </tags>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2021/01/19/2021-01-19/</url>
    <content><![CDATA[<h2 id="近期任务"><a class="header-anchor-1" href="#近期任务">#</a>近期任务</h2>
<ul>
<li>内存数据库最终项目</li>
<li>计算机网络实验报告</li>
</ul>
]]></content>
      <categories>
        <category>daily</category>
        <category>2021</category>
      </categories>
  </entry>
  <entry>
    <title>每日小结</title>
    <url>/2021/01/22/2021-01-22/</url>
    <content><![CDATA[<p>考试结束</p>
<p>假期的一些计划</p>
<ul>
<li>完善<code>codepass</code>项目</li>
<li>刷算法题目</li>
<li>深入学习c++</li>
</ul>
]]></content>
      <categories>
        <category>daily</category>
        <category>2021</category>
      </categories>
  </entry>
  <entry>
    <title>Numpy, SciPy, Matplotlib 和 Pandas 学习</title>
    <url>/2021/03/14/2021-03-14/</url>
    <content><![CDATA[<p>时间过的真快啊，转眼间已经是 <del>3</del> 4 月了！</p>
<h1>Python 数据科学常用的库</h1>
<p><img src="https://frezcirno.github.io/static/images/v2-297731bd359ebc14978967a92f1716cb_r-1.jpg" alt="" /></p>
<h1>Numpy 使用</h1>
<h2 id="array-对象"><a class="header-anchor-1" href="#array-对象">#</a>array 对象</h2>
<h1>Matplotlib 使用</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure>
<h1>Pandas 使用</h1>
<h2 id="series-对象"><a class="header-anchor-1" href="#series-对象">#</a>Series 对象</h2>
<h2 id="dataframe-对象"><a class="header-anchor-1" href="#dataframe-对象">#</a>Dataframe 对象</h2>
<p>博客更新日志：</p>
<ul>
<li>日记分类名字从「每日小结」改为「每日小结 Day Day Up」</li>
<li>日记文章标题从今往后将取有意义的名字</li>
<li>日记文件名改成更加标准的 ISO-8601 命名法</li>
</ul>
]]></content>
      <categories>
        <category>daily</category>
        <category>2021</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>numpy</tag>
        <tag>matplotlib</tag>
        <tag>pandas</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 自定义 JSON Encoder</title>
    <url>/2021/06/15/2021-06-15/</url>
    <content><![CDATA[<h2 id="python-自定义-json-encoder"><a class="header-anchor-1" href="#python-自定义-json-encoder">#</a>Python 自定义 JSON Encoder</h2>
<p>继承 json.JSONEncoder 类, 重载 default 方法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">convert_time</span>(<span class="params">dt: DateTime</span>):</span><br><span class="line">    pdt = datetime(dt.year, dt.month, dt.day, dt.hour, dt.minute,</span><br><span class="line">                   <span class="built_in">int</span>(dt.second), <span class="built_in">int</span>(dt.second * <span class="number">1000000</span> % <span class="number">1000000</span>))</span><br><span class="line">    <span class="keyword">return</span> pdt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CustomJSONEncoder</span>(<span class="title class_ inherited__">JSONEncoder</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">default</span>(<span class="params">self, o</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(o, DateTime):</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>(CustomJSONEncoder, <span class="variable language_">self</span>).encode(convert_time(o).isoformat())</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>(CustomJSONEncoder, <span class="variable language_">self</span>).default(o)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>daily</category>
        <category>2021</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title>Rabin-Karp 算法</title>
    <url>/2021/07/02/2021-07-02/</url>
    <content><![CDATA[<h1>Rabin-Karp 算法</h1>
<p>字符串匹配算法之一，利用哈希进行匹配比较，利用滚动哈希优化哈希函数</p>
<h2 id="滚动哈希"><a class="header-anchor-1" href="#滚动哈希">#</a>滚动哈希</h2>
<p>将滑动窗口中的字符串哈希成一个数字</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>h</mi><mi>i</mi></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>p</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>L</mi><mo>−</mo><mn>1</mn></mrow></munderover><mrow><msub><mi>s</mi><mrow><mi>i</mi><mo>+</mo><mi>p</mi></mrow></msub><msup><mi>b</mi><mrow><mi>L</mi><mo>−</mo><mn>1</mn><mo>−</mo><mi>p</mi></mrow></msup></mrow></mrow><annotation encoding="application/x-tex">h_i = \sum_{p = 0}^{L - 1}{s_{i + p} b^{L - 1 - p}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2316em;vertical-align:-1.4032em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4032em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span>为滑动窗口大小，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span>为探针字符串，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span>为基数</p>
<table>
<thead>
<tr>
<th>index</th>
<th></th>
<th>-1</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>s</td>
<td>…</td>
<td>a</td>
<td>b</td>
<td>c</td>
<td>d</td>
<td>e</td>
<td>f</td>
<td>g</td>
<td></td>
<td>…</td>
</tr>
<tr>
<td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">h_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></td>
<td></td>
<td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>b</mi><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">b^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>b</mi><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">b^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>b</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">b^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>b</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">b^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">h_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td></td>
<td></td>
<td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>b</mi><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">b^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>b</mi><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">b^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>b</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">b^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>b</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">b^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>则有递推公式</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>h</mi><mi>i</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>p</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>L</mi><mo>−</mo><mn>1</mn></mrow></munderover><mrow><msub><mi>s</mi><mrow><mi>i</mi><mo>+</mo><mi>p</mi></mrow></msub><msup><mi>b</mi><mrow><mi>L</mi><mo>−</mo><mn>1</mn><mo>−</mo><mi>p</mi></mrow></msup></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>b</mi><mo>⋅</mo><munderover><mo>∑</mo><mrow><mi>p</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>L</mi><mo>−</mo><mn>1</mn></mrow></munderover><mrow><msub><mi>s</mi><mrow><mi>i</mi><mo>+</mo><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msub><msup><mi>b</mi><mrow><mi>L</mi><mo>−</mo><mn>1</mn><mo>−</mo><mi>p</mi></mrow></msup></mrow><mo>−</mo><msub><mi>s</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><msup><mi>b</mi><mi>L</mi></msup><mo>+</mo><msub><mi>s</mi><mrow><mi>i</mi><mo>+</mo><mi>L</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><msub><mi>h</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>s</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><msup><mi>b</mi><mrow><mi>L</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mi>b</mi><mo>+</mo><msub><mi>s</mi><mrow><mi>i</mi><mo>+</mo><mi>L</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
h_i &amp;= \sum_{p = 0}^{L - 1}{s_{i + p} b^{L - 1 - p}}\\
&amp;= b \cdot \sum_{p = 0}^{L - 1}{s_{i + p - 1} b^{L - 1 - p}} - s_{i-1} b^{L} + s_{i+L-1}\\
&amp;= (h_{i-1} - s_{i-1} b^{L-1}) b + s_{i+L-1}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.6144em;vertical-align:-4.0572em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.5572em;"><span style="top:-6.5572em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0257em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"></span></span><span style="top:-0.4311em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.0572em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.5572em;"><span style="top:-6.5572em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4032em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.0257em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4032em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">L</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.4311em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">L</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.0572em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">rk_hash</span><span class="params">(<span class="type">const</span> std::string s, <span class="type">int</span> start, <span class="type">int</span> base, <span class="type">int</span> L, <span class="type">int</span> mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> hash = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        hash = (hash * base) % mod;</span><br><span class="line">        hash = (hash + s[start + i]) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> hash;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">powmod</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> n, <span class="type">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>) <span class="keyword">return</span> <span class="built_in">powmod</span>((<span class="type">long</span> <span class="type">long</span>)a * a % m, n / <span class="number">2</span>, m) % m;</span><br><span class="line">    <span class="keyword">return</span> ((<span class="built_in">powmod</span>((<span class="type">long</span> <span class="type">long</span>)a * a % m, n / <span class="number">2</span>, m) % m) * ((<span class="type">long</span> <span class="type">long</span>)a % m)) % m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">rk_cont_hash</span><span class="params">(<span class="type">const</span> std::string s, <span class="type">int</span> start, <span class="type">int</span> last_h, <span class="type">int</span> base, <span class="type">int</span> L, <span class="type">int</span> mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> hash = last_h - s[start - <span class="number">1</span>] * <span class="built_in">powmod</span>(base, L - <span class="number">1</span>, mod);</span><br><span class="line">    hash = (hash * base) % mod;</span><br><span class="line">    hash = (hash + s[start + L - <span class="number">1</span>]) % mod;</span><br><span class="line">    <span class="keyword">return</span> hash;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>daily</category>
        <category>2021</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>VIM YouCompleteMe自动补全插件配置</title>
    <url>/2021/10/17/2021-10-17-vim-youcompleteme-plugin/</url>
    <content><![CDATA[<h1>YouCompleteMe 插件</h1>
<h1>配置步骤</h1>
<h2 id="编译支持-c-17-的-gcc"><a class="header-anchor-1" href="#编译支持-c-17-的-gcc">#</a>编译支持 C++17 的 GCC</h2>
<p>gcc 源代码以 ftp 的形式发布，除了 gnu 官方的服务器外，在世界各地都有镜像站，国内靠谱的镜像站有<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmFsaXl1bi5jb20vZ251L2djYy8=">阿里云<i class="fa fa-external-link-alt"></i></span>等。</p>
<p>下载源码并解压:</p>
<p>这里使用 9.4.0 版</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://mirrors.aliyun.com/gnu/gcc/gcc-9.4.0/gcc-9.4.0.tar.gz</span><br><span class="line">tar -zxf gcc-9.4.0.tar.gz</span><br></pre></td></tr></table></figure>
<p>创建编译用的目录，我一般习惯命名为 build：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br></pre></td></tr></table></figure>
<p>编译配置：</p>
<p>GCC 可配置的选项<strong>极多</strong>，具体含义可以在<span class="exturl" data-url="aHR0cHM6Ly9nY2MuZ251Lm9yZy9pbnN0YWxsL2NvbmZpZ3VyZS5odG1s">gcc 网站<i class="fa fa-external-link-alt"></i></span>上查询. 如果不知道应该加什么参数，可以参考系统上已有的 gcc 的配置参数：<code>gcc -v</code>。</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">../configure -v \</span></span><br><span class="line"><span class="language-bash">    --prefix=/usr/local</span></span><br><span class="line">    --enable-languages=c,c++ \</span><br><span class="line">    --with-gcc-major-version-only \</span><br><span class="line">    --enable-shared \</span><br><span class="line">    --enable-linker-build-id \</span><br><span class="line">    --without-included-gettext \</span><br><span class="line">    --enable-threads=posix \</span><br><span class="line">    --enable-nls \</span><br><span class="line">    --enable-bootstrap \</span><br><span class="line">    --enable-clocale=gnu \</span><br><span class="line">    --enable-libstdcxx-debug \</span><br><span class="line">    --enable-libstdcxx-time=yes \</span><br><span class="line">    --with-default-libstdcxx-abi=new \</span><br><span class="line">    --enable-gnu-unique-object \</span><br><span class="line">    --disable-vtable-verify \</span><br><span class="line">    --enable-libmpx \</span><br><span class="line">    --enable-plugin \</span><br><span class="line">    --enable-default-pie \</span><br><span class="line">    --with-system-zlib \</span><br><span class="line">    --with-target-system-zlib \</span><br><span class="line">    --enable-multiarch \</span><br><span class="line">    --disable-werror \</span><br><span class="line">    --with-arch-32=i686 \</span><br><span class="line">    --with-abi=m64 \</span><br><span class="line">    --with-multilib-list=m32,m64,mx32 \</span><br><span class="line">    --enable-multilib \</span><br><span class="line">    --with-tune=generic \</span><br><span class="line">    --enable-offload-targets=nvptx-none \</span><br><span class="line">    --without-cuda-driver \</span><br><span class="line">    --enable-checking=release \</span><br><span class="line">    --build=x86_64-linux-gnu \</span><br><span class="line">    --host=x86_64-linux-gnu \</span><br><span class="line">    --target=x86_64-linux-gnu</span><br></pre></td></tr></table></figure>
<p>此处解释几个关键配置</p>
<ul>
<li>
<p><code>--build</code></p>
<p>当前正在使用的机器的环境</p>
</li>
<li>
<p><code>--host</code></p>
<p>编译产物(gcc)将会运行在的环境</p>
</li>
<li>
<p><code>--target</code></p>
<p>编译出来的 gcc 的编译产物的目标环境</p>
</li>
</ul>
<p>以上三个参数用于交叉编译，比如在 x86_64 机器上(build)编译一个即将在 arm 上运行(host)的编译器，该编译器产生在 arm 上(target)运行的程序。三个参数的格式均为<code>cpu-company-system</code></p>
<ul>
<li>
<p><code>--prefix=/usr/local</code></p>
<p>编译产物的安装目录。系统默认的 gcc 一般会安装在/usr 下，为了不影响系统的 gcc，建议设置为不同的路径</p>
</li>
<li>
<p><code>--enable-languages</code></p>
<p>配置 gcc 支持的语言类型，可选项有 ada, c, c++, go 等, 由于笔者只需要 c 和 c++，因此只开启了 c 和 c++.</p>
</li>
<li>
<p><code>--enable-multilib</code></p>
<p>是否编译 target 上的 multilib, multilib 是在 target 上编译和运行架构不同程序所需的库，比如在 x86_64 上编译运行 32 位程序。</p>
</li>
<li>
<p><code>--with-multilib-list</code></p>
<p>开启的 multilib 列表，对于不同 target，此处允许的值有所不同。在<code>x86_64-*-linux*</code>上有 m32, m64, mx32 三个可选项。</p>
</li>
</ul>
<p>开始编译并安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make</span><br><span class="line"><span class="built_in">sudo</span> make install</span><br></pre></td></tr></table></figure>
<p>环境变量配置：</p>
<p>下面的<code>$INSTALLDIR</code>要换成对应的值。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$INSTALLDIR</span>/bin:\$PATH&quot;</span> &gt;&gt; <span class="variable">$HOME</span>/.bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">export</span> CPPFLAGS=<span class="string">&quot;-I<span class="variable">$INSTALLDIR</span>/include \$CPPFLAGS&quot;</span> &gt;&gt; <span class="variable">$HOME</span>/.bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">export</span> LDFLAGS=<span class="string">&quot;-L<span class="variable">$INSTALLDIR</span>/lib64 -L<span class="variable">$INSTALLDIR</span>/lib \$LDFLAGS&quot;</span> &gt;&gt; <span class="variable">$HOME</span>/.bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">&quot;<span class="variable">$INSTALLDIR</span>/lib64:<span class="variable">$INSTALLDIR</span>/lib:\$LD_LIBRARY_PATH&quot;</span> &gt;&gt; <span class="variable">$HOME</span>/.bashrc</span><br></pre></td></tr></table></figure>
<h2 id="安装-python-3"><a class="header-anchor-1" href="#安装-python-3">#</a>安装 Python 3</h2>
<p>YouCompleteMe 需要最低 Python3.6 的环境，如果不满足，则需要安装</p>
<p>如果软件源中包含了满足要求的 python 版本，则可以直接安装；否则需要从源码编译。</p>
<p>a. 直接从软件源安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install python3.8 python3.8-dev</span><br></pre></td></tr></table></figure>
<p>b. 从源码编译 Python3</p>
<p>暂时没有用到，略过</p>
<h2 id="编译-vim"><a class="header-anchor-1" href="#编译-vim">#</a>编译 VIM</h2>
<p>VIM 的编译过程相对简单了很多</p>
<p>克隆代码，可以直接克隆最新版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth 1 https://github.com/vim/vim.git</span><br></pre></td></tr></table></figure>
<p>编译配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> vim/src</span><br><span class="line">./configure \</span><br><span class="line">    --with-features=huge \</span><br><span class="line">    --enable-multibyte \</span><br><span class="line">    --enable-pythoninterp=dynamic \</span><br><span class="line">    --with-python-config-dir=$(python2.7-config --configdir) \</span><br><span class="line">    --enable-python3interp=dynamic \</span><br><span class="line">    --with-python3-config-dir=$(python3.8-config --configdir) \</span><br><span class="line">    --enable-cscope \</span><br><span class="line">    --enable-gui=auto \</span><br><span class="line">    --enable-gtk2-check \</span><br><span class="line">    --enable-fontset \</span><br><span class="line">    --enable-largefile \</span><br><span class="line">    --disable-netbeans \</span><br><span class="line">    --with-compiledby=<span class="string">&quot;xxxxx@xx.com&quot;</span> \</span><br><span class="line">    --enable-fail-if-missing</span><br></pre></td></tr></table></figure>
<p>编译安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make</span><br><span class="line"><span class="built_in">sudo</span> make install</span><br></pre></td></tr></table></figure>
<h2 id="安装-cmake"><a class="header-anchor-1" href="#安装-cmake">#</a>安装 CMAKE</h2>
<p>下载 cmake 并安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/Kitware/CMake/releases/download/v3.21.3/cmake-3.21.3-linux-x86_64.sh</span><br><span class="line"><span class="built_in">chmod</span> +x cmake-3.21.3-linux-x86_64.sh</span><br><span class="line">./cmake-3.21.3-linux-x86_64.sh</span><br></pre></td></tr></table></figure>
<p>配置环境变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="built_in">export</span> PATH=$(<span class="built_in">pwd</span>)/cmake-3.21.3-linux-x86_64/bin:\<span class="variable">$PATH</span> &gt;&gt; <span class="variable">$HOME</span>/.bashrc</span><br></pre></td></tr></table></figure>
<h2 id="安装-youcompleteme-插件"><a class="header-anchor-1" href="#安装-youcompleteme-插件">#</a>安装 YouCompleteMe 插件</h2>
<p>——待更新</p>
]]></content>
      <categories>
        <category>daily</category>
        <category>2021</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>dlmalloc 内存分配器</title>
    <url>/2025/04/13/dlmalloc/</url>
    <content><![CDATA[<p>dlmalloc 是一个 C 语言实现的流行的内存分配器实现，由纽约州立大学 Oswego 分校计算机系教授 Doug Lea 在 1980 年代编写，许多人称之为 Doug Lea 的 malloc，或者简称 dlmalloc。</p>
<p>::: info
关于 Doug Lea</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9nZWUuY3Mub3N3ZWdvLmVkdS8=">Doug Lea<i class="fa fa-external-link-alt"></i></span> 是计算机科学领域的知名学者，尤其在内存管理和并发编程方面有着深厚的造诣。他的研究工作对操作系统、编程语言和计算机体系结构等领域产生了深远的影响。</p>
<p>Doug Lea 曾经是 JCP（Java Community Process）委员会委员，参与了 JSR 166（Java Concurrency Utilities）的设计和实现。他的工作为 Java 的并发编程模型奠定了基础。
:::</p>
<p>由于具备高效且占用空间较小等特点，dlmalloc 被广泛使用，用 Doug Lea 自己的话说，就是“它在一些 linux 版本里面作为默认的 malloc 被使用，被编译到一些公共的软件包里，并且已经被用于各种 PC 环境及嵌入式系统，以及许多甚至我也不知道的地方”。</p>
<h2 id="dlmalloc-的历史"><a class="header-anchor-1" href="#dlmalloc-的历史">#</a>dlmalloc 的历史</h2>
<p>1987 年，Doug Lea 在编写了一些几乎完全依赖于分配动态内存的 C++ 程序之后，发现它们的运行速度比我预期的要慢得多，并且/或者总内存消耗比预期的要多得多。这是由于所运行的系统（主要是当时的 SunOS 和 BSD 版本）上的内存分配器的特性所致。为了解决这个问题，起初 Doug Lea 用 C++ 编写了一些专用分配器，通过为各种类重载 operator new 来实现的。</p>
<p>然而，随着时间的推移，他意识到为每个类编写一个分配器并不是一个好的解决方案，因为这会导致代码的重复和维护的复杂性。需要一个更通用的内存分配器 —— 编写一个在正常 C++ 和 C 负载下足够好的分配器，这样程序员就不会被诱惑去编写专用的分配器，除非在非常特殊的情况下。于是 Doug Lea 编写了 dlmalloc，并一直在维护和改进它（在许多志愿者贡献者的帮助下）。</p>
<p>该分配器的代码已被放置在公共领域（可从 <span class="exturl" data-url="ZnRwOi8vZy5vc3dlZ28uZWR1L3B1Yi9taXNjL21hbGxvYy5j">ftp://g.oswego.edu/pub/misc/malloc.c<i class="fa fa-external-link-alt"></i></span> 获得），并且已经被广泛使用：</p>
<ul>
<li>它在某些版本的 Linux 中用作 malloc 的默认本机版本；它被编译成几个常用的软件包（覆盖本机 malloc）</li>
<li>在各种 PC 环境以及嵌入式系统中使用</li>
<li>Android 的 Dalvik 虚拟机使用了 dlmalloc 作为其内存分配器</li>
</ul>
<h2 id="dlmalloc-的设计"><a class="header-anchor-1" href="#dlmalloc-的设计">#</a>dlmalloc 的设计</h2>
<p>一个好的 malloc 库需要平衡这些目标：</p>
<ul>
<li>最大化兼容性：满足 POSIX 标准</li>
<li>最大化便携性</li>
<li>最小化空间</li>
<li>最小化时间</li>
<li>最大化可定制性：允许用户微调参数</li>
<li>最大化局部性</li>
<li>最大化错误检测</li>
<li>最小化异常</li>
</ul>
<p>1995 年的一篇综述论文中讨论了这些目标的权衡，认为最大限度地减少浪费（通常是由碎片引起的）必须是任何分配器的主要目标。一个极端的例子是按顺序分配下一块可用内存，不进行 free 的 malloc，它具有最快的性能，但是会导致巨大的内存浪费。内存浪费最终等价于对金钱的浪费。</p>
<p>虽然时间和空间问题占据主导地位，但是权衡和妥协几乎无穷无尽。例如：</p>
<ul>
<li>为了满足对齐要求，可能会导致浪费一些内存</li>
<li>为了满足可定制性要求（例如 debug 模式），会导致性能下降</li>
<li>为了满足兼容性要求，可能会限制功能的灵活性：例如 POSIX 标准要求 malloc 负数内存应该返回 NULL</li>
<li>为了满足兼容性要求，导致性能下降：例如 dlmalloc 为了兼容一个早期错误的 malloc 实现，允许 realloc 一块 free 过的内存</li>
<li>一些启发式方法，可以改善小程序的性能，但会导致大程序的性能下降</li>
</ul>
<p>任何一套沿着这些思路的妥协都不可能完美。然而，多年来，分配器已经发展到能够做出大多数用户都能接受的权衡。持续影响 dlmalloc 演进的驱动力包括：</p>
<ol>
<li>已有的实证研究表明 dlmalloc 的性能已经跻身于最好的分配器之列</li>
<li>目标工作负载的变化</li>
<li>系统和处理器的变化</li>
<li>来自用户和贡献者的建议、使用报告和代码。</li>
</ol>
<h2 id="dlmalloc-的算法"><a class="header-anchor-1" href="#dlmalloc-的算法">#</a>dlmalloc 的算法</h2>
<p>dlmalloc 算法的两个核心元素自最早版本以来一直保持不变：</p>
<ul>
<li>边界标签</li>
<li>分箱</li>
</ul>
<h3 id="边界标签"><a class="header-anchor-1" href="#边界标签">#</a>边界标签</h3>
<p>内存块携带大小信息字段，这些字段位于块的前后。这允许实现两个重要功能：</p>
<ul>
<li>两个相邻的未使用内存块可以合并成一个更大的块。这最小化了不可用的小块的数量。</li>
<li>所有内存块都可以从任何已知的块开始，向前或向后遍历。</li>
</ul>
<p><img src="image.png" alt="alt text" /></p>
<p>dlmalloc 的原始版本正是以上图的方式实现了边界标记。较新的版本省略了程序正在使用的块上的尾部字段。这本身是一个小的权衡：当块处于活动状态时，这些字段从未被使用，因此不需要存在。消除它们可以减少开销和浪费。然而，缺少这些字段会稍微削弱错误检测能力，因为无法检查用户是否错误地覆盖了应该具有已知值的字段。</p>
<h3 id="分箱"><a class="header-anchor-1" href="#分箱">#</a>分箱</h3>
<p>可用块被保存在箱中，按大小分组。存在大量（128 个）固定宽度的箱，大小大约呈对数分布。小于 512 字节的块箱只包含恰好一个大小（间隔 8 字节，简化了 8 字节对齐的执行）。可用块的搜索按从小到大的顺序处理，最佳匹配方案（各种类型和近似方法）与其它如首次匹配等通用方法相比，在真实负载下往往产生最少的碎片化。正如 Wilson 等人所展示的。</p>
<p><img src="image1.png" alt="alt text" /></p>
<p>直到 1995 年发布的版本，箱内的块是无序的，因此最佳匹配策略只是近似的。较新版本的软件则按大小对箱内的块进行排序，并按最早创建的规则解决冲突。（这是在发现少量时间投入是值得的，以避免观察到的不良情况后进行的。）</p>
<p>因此，该算法的一般分类是最佳匹配合并：释放的块与相邻块合并，并按大小顺序保存在箱中。</p>
<p>这种方法会导致每个数据块产生固定的账务开销。由于每个可用数据块都必须保留大小信息和桶链接，因此在 32 位指针的系统中最小可分配数据块为 16 字节，在 64 位指针的系统中最小可分配数据块为 24 字节。这些最小尺寸比大多数人希望看到的要大——例如，在分配许多小型链表节点的情况下，它们可能导致显著的浪费。然而，至少 16 字节的最低要求是任何需要 8 字节对齐且存在 malloc 账务开销的系统的一个特征。</p>
<p>即使这个基本算法依赖于搜索机制来找到最佳匹配，但通过使用索引技术、利用特殊情况以及精心编码，平均情况下只需要几十条指令，当然这取决于机器和分配模式。</p>
<p>虽然通过边界标签合并和通过桶分配最佳匹配代表了算法的主要思想，但进一步的考虑导致了一系列启发式改进。这包括局部性保持、荒野保持、内存映射和缓存。</p>
<h2 id="dlmalloc-的实现"><a class="header-anchor-1" href="#dlmalloc-的实现">#</a>dlmalloc 的实现</h2>
<p>整个 dlmalloc 的实现代码只有一个文件 malloc.c。</p>
]]></content>
      <categories>
        <category>database-system</category>
        <category>malloc</category>
      </categories>
      <tags>
        <tag>内存管理</tag>
      </tags>
  </entry>
  <entry>
    <title>Tair 存储分析</title>
    <url>/2024/05/14/nosql/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>database-system</category>
        <category>nosql</category>
      </categories>
      <tags>
        <tag>Tair</tag>
      </tags>
  </entry>
  <entry>
    <title>日本语1</title>
    <url>/2021/02/15/1/</url>
    <content><![CDATA[<h2 id="what-is-japanese"><a class="header-anchor-1" href="#what-is-japanese">#</a>What is Japanese</h2>
<h3 id="japanese-sound-system"><a class="header-anchor-1" href="#japanese-sound-system">#</a>Japanese Sound System</h3>
<p>23 consonant sounds + 5 vowel sounds, with pitch accent</p>
<p>When spoken, the Japanese language is formed using either vowels or a consonant-vowel pair, except the “n” sound (single consonant sound)</p>
<h3 id="japanese-writing-system"><a class="header-anchor-1" href="#japanese-writing-system">#</a>Japanese Writing System</h3>
<p>Come around 1500 years age from China</p>
<p>Currentlt has 3 types of writing: hiragana, katakana, kanji</p>
<p>Kanji were imported from China, traditionally used for both meaning and sound.</p>
<p>Hiragana: 46 characters with two diacritical marks that are used to denote the sounds</p>
<p>Each hiragana symbolizes with a vowel or a consonant combined with a vowel.</p>
<p>Hiraganas are in particular used for function words and inflectional endings, as well as in some content words.</p>
<table>
<thead>
<tr>
<th>Hiragana</th>
<th>ん</th>
<th>w</th>
<th>r</th>
<th>y</th>
<th>m</th>
<th>h</th>
<th>n</th>
<th>t</th>
<th>s</th>
<th>k</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>a</td>
<td>ん</td>
<td>わ</td>
<td>ら</td>
<td>や</td>
<td>ま</td>
<td>は</td>
<td>な</td>
<td>た</td>
<td>さ</td>
<td>か</td>
<td>あ</td>
</tr>
<tr>
<td>i</td>
<td></td>
<td></td>
<td>り</td>
<td></td>
<td>み</td>
<td>ひ</td>
<td>に</td>
<td>ち</td>
<td>し</td>
<td>き</td>
<td>い</td>
</tr>
<tr>
<td>u</td>
<td></td>
<td></td>
<td>る</td>
<td>ゆ</td>
<td>む</td>
<td>ふ</td>
<td>ぬ</td>
<td>つ</td>
<td>す</td>
<td>く</td>
<td>う</td>
</tr>
<tr>
<td>e</td>
<td></td>
<td></td>
<td>れ</td>
<td></td>
<td>め</td>
<td>へ</td>
<td>ね</td>
<td>て</td>
<td>せ</td>
<td>け</td>
<td>え</td>
</tr>
<tr>
<td>o</td>
<td></td>
<td>を</td>
<td>ろ</td>
<td>よ</td>
<td>も</td>
<td>ほ</td>
<td>の</td>
<td>と</td>
<td>そ</td>
<td>こ</td>
<td>お</td>
</tr>
</tbody>
</table>
<p>Katagana is also a syllabary, is used for loan words, onomatopoeic words and scientific words.</p>
]]></content>
      <categories>
        <category>life</category>
        <category>japanese</category>
      </categories>
  </entry>
  <entry>
    <title>同济大学每日上报自动打卡</title>
    <url>/2020/12/25/auto_check/</url>
    <content><![CDATA[<p>2022 年 12 月特殊时期于上海</p>
<h2 id="每日上报自动打卡程序"><a class="header-anchor-1" href="#每日上报自动打卡程序">#</a>每日上报自动打卡程序</h2>

]]></content>
      <categories>
        <category>misc</category>
        <category>tools</category>
      </categories>
  </entry>
</search>
